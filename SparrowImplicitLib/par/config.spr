module par.config

import std.ptr

datatype NativeThreadHandle = Byte Ptr  // Opaque type

fun >>(h: NativeThreadHandle, os: @OutStream)
    if ( h.impl.isSet )
        os << mkStreamRefWrapper(h.impl.get)
    else
        os << "null"

using InvalidThreadHandle = NativeThreadHandle()


//! Get the number of available logical CPU cores for our process
//! This dictates how much parallelism we have to be exploit
fun getAvailableCoresNum(): UInt
    var maxProcs: Long = _Impl.sysconf(_Impl._SC_NPROCESSORS_ONLN)
    return ife(maxProcs<1, UInt(1), UInt(maxProcs))
    // TODO: also consider process affinity

package _Impl
    using _SC_NPROCESSORS_ONLN = 58

    [native("sysconf")] fun sysconf(name: Int): Long

