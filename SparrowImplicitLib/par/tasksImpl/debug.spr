module par.tasksImpl.debug

import par.locks
import std.string

using traceCalls = false

using TraceLockType = Mutex

var traceMutex: TraceLockType

//! Helper class that does the trace while holding a mutex
//! Prevents the output to be messed up
datatype Tracer

[protected]
    fun ctor(this: !Tracer)
        [ct] if traceCalls
            traceMutex lock

    fun ctor(this: !Tracer, workerId: Int, depth: Int)
        [ct] if traceCalls
            traceMutex lock
            cout << workerId << ": " << Depth(depth)

    fun dtor(this: !Tracer)
        [ct] if traceCalls
            traceMutex unlock

    fun <<<(this: !Tracer, x: AnyType)
        [ct] if traceCalls
            cout << x

[initCtor]
datatype Depth
    depth: Int

fun >> (d: Depth, os: !OutStream)
    if d.depth > 0
        os << String(d.depth*2, ' '.char)

