module par.tasksImpl.schedulerIf.schedulerif

import taskPrefix(TaskPrefix, TaskPtr)
import sched = scheduler(schedSpawn, schedWaitForAll, schedSpawnRootAndWait, schedWaitForAll, schedEnqueue)
import worker = workerImpl(localWorker)
import std.ptr

fun spawn(task: !TaskPrefix)
    sched.schedSpawn(TaskPtr(task mutToPtr))
fun spawnAndWaitForAll(curTask, child: !TaskPrefix)
    sched.schedWaitForAll(TaskPtr(curTask mutToPtr), TaskPtr(child mutToPtr))
fun spawnRootAndWait(root: !TaskPrefix)
    sched.schedSpawnRootAndWait(TaskPtr(root mutToPtr))
fun waitForAll(curTask: !TaskPrefix)
    sched.schedWaitForAll(TaskPtr(curTask mutToPtr), TaskPtr())
fun enqueue(task: !TaskPrefix)
    sched.schedEnqueue(TaskPtr(task mutToPtr))

fun localWorker(): UntypedPtr = UntypedPtr(worker.localWorker().get())
