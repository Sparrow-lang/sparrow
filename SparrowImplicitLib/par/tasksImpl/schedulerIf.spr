module par.tasksImpl.schedulerIf.schedulerif

import taskPrefix(TaskPrefix, TaskPtr)
import sched = scheduler(schedSpawn, schedWaitForAll, schedSpawnRootAndWait, schedWaitForAll, schedEnqueue)
import worker = workerImpl(localWorker)
import std.ptr

fun spawn(task: @TaskPrefix)
    sched.schedSpawn(TaskPtr(task))
fun spawnAndWaitForAll(curTask, child: @TaskPrefix)
    sched.schedWaitForAll(TaskPtr(curTask), TaskPtr(child))
fun spawnRootAndWait(root: @TaskPrefix)
    sched.schedSpawnRootAndWait(TaskPtr(root))
fun waitForAll(curTask: @TaskPrefix)
    sched.schedWaitForAll(TaskPtr(curTask), TaskPtr())
fun enqueue(task: @TaskPrefix)
    sched.schedEnqueue(TaskPtr(task))

fun localWorker(): Byte Ptr = reinterpretPtr(Byte, worker.localWorker())
