module std.bitset

import array(Array)
import bitOper

datatype Bitset
    _bits: Array(UByte)

[protected]
    fun ctor(this: !Bitset, noBits: SizeType)
        _bits.ctor(1 + (noBits-1)/8, UByte(0))

    fun setBit(this: !Bitset, n: SizeType)
        _bits(n/8) = _bits(n/8) !|! (UByte(1) !<<! UByte(n%8))

    fun clearBit(this: !Bitset, n: SizeType)
        _bits(n/8) = _bits(n/8) !&! !~!(UByte(1) !<<! UByte(n%8))

    fun testBit(this: Bitset const, n: SizeType) = UByte(0) != (_bits(n/8) !&! (UByte(1) !<<! UByte(n%8)))

    fun clear(this: !Bitset)
        memset(UntypedPtr(_bits(0)), Byte(0), _bits.size())
