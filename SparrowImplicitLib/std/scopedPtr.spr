module std.scopedPtr

import newDelete(delete)

[initCtor]
datatype ScopedPtr(type: Type)
    using ValueType = type

    _ref: @ValueType

[protected]
    fun dtor(this: !ScopedPtr)
        delete(_ref)

    fun get(this: ScopedPtr): @ValueType         = _ref
    fun isNull(this: ScopedPtr)                  = _ref === null
    fun isSet(this: ScopedPtr)                   = _ref !== null

    fun reset(this: !ScopedPtr)                         { delete(_ref); _ref := null }
    fun reset(this: !ScopedPtr, ref: !this.ValueType)   { delete(this._ref); this._ref := ref }

    fun swap(this: !ScopedPtr, other: !typeOf(this))
        let tmp: @ValueType = other._ref

        other._ref := _ref
        _ref := tmp
