; ModuleID = 'LLVM backend module Runtime'
source_filename = "LLVM backend module Runtime"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"

%EndLineHelperClass = type {}
%FlushHelperClass = type {}
%ConsoleOutputStream = type {}
%MainParameters = type { %CStrPtr, %CStrPtr }
%CStrPtr = type { %CStr* }
%CStr = type { i8* }
%struct._IO_FILE = type opaque
%Uninitialized = type {}
%Null = type {}
%StringRef = type { i8*, i8* }
%UntypedPtr = type { i8* }
%StreamRefWrapperHelperClass = type { i8* }
%ExternalErrorReporter = type {}
%Location = type { %SourceCode, %LineCol, %LineCol }
%SourceCode = type { i8* }
%LineCol = type { i32, i32 }
%String = type { %"RawPtr[Char]", %"RawPtr[Char]", %"RawPtr[Char]" }
%"RawPtr[Char]" = type { i8* }
%_CharSource = type { %FileRange*, %StringRef }
%FileRange = type { %File*, i1, i8 }
%File = type { i8* }
%ParserContext = type { %File, %FileRange, %_CharSource, %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]" }
%"SparrowScanner[_CharSource, ExternalErrorReporter]" = type { %Location, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %Token, i1, %ExternalErrorReporter }
%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]" = type { %"RangeWithLookahead[_CharSource]", %Location* }
%"RangeWithLookahead[_CharSource]" = type { %_CharSource, %"Vector[Char]" }
%"Vector[Char]" = type { %"RawPtr[Char]", %"RawPtr[Char]", %"RawPtr[Char]" }
%Token = type { %Location, %TokenType, %String, i64, double }
%TokenType = type { i32 }
%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" = type { %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %ExternalErrorReporter, %"Vector[UInt]", %"Vector[Char]", %TokenType, i32 }
%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]" = type { %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"Vector[Token]" }
%"Vector[Token]" = type { %"RawPtr[Token]", %"RawPtr[Token]", %"RawPtr[Token]" }
%"RawPtr[Token]" = type { %Token* }
%"Vector[UInt]" = type { %"RawPtr[UInt]", %"RawPtr[UInt]", %"RawPtr[UInt]" }
%"RawPtr[UInt]" = type { i32* }
%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]" = type { %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %Token, i1, %ExternalErrorReporter }
%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]" = type { %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"Vector[Token]" }
%StringOutputStream = type { %String }
%"$lambdaEnclosureData" = type {}
%"$lambdaEnclosureData.0" = type {}
%"$lambdaEnclosureData.1" = type {}
%"$lambdaEnclosureData.2" = type {}
%"ContiguousMemoryRange[Char]" = type { %"RawPtr[Char]", %"RawPtr[Char]" }
%"FunctionPtr1[Bool, Char]" = type { i8* }
%"ContiguousMemoryRange[Token]" = type { %"RawPtr[Token]", %"RawPtr[Token]" }
%Node = type { %UntypedPtr }
%"Vector[LocString]" = type { %"RawPtr[LocString]", %"RawPtr[LocString]", %"RawPtr[LocString]" }
%"RawPtr[LocString]" = type { %LocString* }
%LocString = type { %"Tuple[Location, String]" }
%"Tuple[Location, String]" = type { %Location, %String }
%"ContiguousMemoryRange[LocString]" = type { %"RawPtr[LocString]", %"RawPtr[LocString]" }
%"ContiguousMemoryRange[UInt]" = type { %"RawPtr[UInt]", %"RawPtr[UInt]" }

@.fmtInt = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.fmtUInt = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.fmtLong = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.fmtULong = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.fmtChar = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.fmtDouble = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.fmtPointer = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@endl.0 = global %EndLineHelperClass zeroinitializer
@flush.1 = global %FlushHelperClass zeroinitializer
@cout.2 = global %ConsoleOutputStream zeroinitializer
@str = private unnamed_addr constant [5 x i8] c"true\00"
@str.5 = private unnamed_addr constant [6 x i8] c"false\00"
@programArgs.3 = global %MainParameters zeroinitializer
@str.8 = private unnamed_addr constant [2 x i8] c"r\00"
@str.9 = private unnamed_addr constant [1 x i8] zeroinitializer
@str.10 = private unnamed_addr constant [19 x i8] c"Cannot open file: \00"
@str.11 = private unnamed_addr constant [30 x i8] c"Tabs are not valid characters\00"
@str.12 = private unnamed_addr constant [33 x i8] c"End of file found inside comment\00"
@str.13 = private unnamed_addr constant [40 x i8] c"End of file found inside string literal\00"
@str.14 = private unnamed_addr constant [37 x i8] c"Not enough digits for character code\00"
@str.15 = private unnamed_addr constant [40 x i8] c"End of file found inside string literal\00"
@str.16 = private unnamed_addr constant [40 x i8] c"End of file found inside string literal\00"
@str.17 = private unnamed_addr constant [6 x i8] c"break\00"
@str.18 = private unnamed_addr constant [6 x i8] c"catch\00"
@str.19 = private unnamed_addr constant [8 x i8] c"concept\00"
@str.20 = private unnamed_addr constant [9 x i8] c"continue\00"
@str.21 = private unnamed_addr constant [9 x i8] c"datatype\00"
@str.22 = private unnamed_addr constant [4 x i8] c"fun\00"
@str.23 = private unnamed_addr constant [3 x i8] c"if\00"
@str.24 = private unnamed_addr constant [5 x i8] c"else\00"
@str.25 = private unnamed_addr constant [6 x i8] c"false\00"
@str.26 = private unnamed_addr constant [8 x i8] c"finally\00"
@str.27 = private unnamed_addr constant [4 x i8] c"for\00"
@str.28 = private unnamed_addr constant [7 x i8] c"import\00"
@str.29 = private unnamed_addr constant [4 x i8] c"let\00"
@str.30 = private unnamed_addr constant [7 x i8] c"module\00"
@str.31 = private unnamed_addr constant [5 x i8] c"null\00"
@str.32 = private unnamed_addr constant [8 x i8] c"package\00"
@str.33 = private unnamed_addr constant [7 x i8] c"return\00"
@str.34 = private unnamed_addr constant [6 x i8] c"throw\00"
@str.35 = private unnamed_addr constant [5 x i8] c"true\00"
@str.36 = private unnamed_addr constant [4 x i8] c"try\00"
@str.37 = private unnamed_addr constant [6 x i8] c"using\00"
@str.38 = private unnamed_addr constant [4 x i8] c"var\00"
@str.39 = private unnamed_addr constant [6 x i8] c"while\00"
@str.40 = private unnamed_addr constant [24 x i8] c"Invalid numeric literal\00"
@str.41 = private unnamed_addr constant [27 x i8] c"Invalid character found: '\00"
@str.42 = private unnamed_addr constant [4 x i8] c"' (\00"
@str.43 = private unnamed_addr constant [32 x i8] c"Invalid indentation, expecting \00"
@str.44 = private unnamed_addr constant [7 x i8] c", got \00"
@str.45 = private unnamed_addr constant [12 x i8] c"end-of-file\00"
@str.46 = private unnamed_addr constant [9 x i8] c"new-line\00"
@str.47 = private unnamed_addr constant [9 x i8] c"'module'\00"
@str.48 = private unnamed_addr constant [9 x i8] c"'import'\00"
@str.49 = private unnamed_addr constant [10 x i8] c"'concept'\00"
@str.50 = private unnamed_addr constant [11 x i8] c"'datatype'\00"
@str.51 = private unnamed_addr constant [6 x i8] c"'fun'\00"
@str.52 = private unnamed_addr constant [10 x i8] c"'package'\00"
@str.53 = private unnamed_addr constant [8 x i8] c"'using'\00"
@str.54 = private unnamed_addr constant [6 x i8] c"'let'\00"
@str.55 = private unnamed_addr constant [6 x i8] c"'var'\00"
@str.56 = private unnamed_addr constant [8 x i8] c"'break'\00"
@str.57 = private unnamed_addr constant [8 x i8] c"'catch'\00"
@str.58 = private unnamed_addr constant [11 x i8] c"'continue'\00"
@str.59 = private unnamed_addr constant [10 x i8] c"'finally'\00"
@str.60 = private unnamed_addr constant [6 x i8] c"'for'\00"
@str.61 = private unnamed_addr constant [5 x i8] c"'if'\00"
@str.62 = private unnamed_addr constant [9 x i8] c"'return'\00"
@str.63 = private unnamed_addr constant [8 x i8] c"'throw'\00"
@str.64 = private unnamed_addr constant [6 x i8] c"'try'\00"
@str.65 = private unnamed_addr constant [8 x i8] c"'while'\00"
@str.66 = private unnamed_addr constant [8 x i8] c"'false'\00"
@str.67 = private unnamed_addr constant [7 x i8] c"'null'\00"
@str.68 = private unnamed_addr constant [7 x i8] c"'true'\00"
@str.69 = private unnamed_addr constant [7 x i8] c"'else'\00"
@str.70 = private unnamed_addr constant [16 x i8] c"'{' (or indent)\00"
@str.71 = private unnamed_addr constant [16 x i8] c"'}' (or dedent)\00"
@str.72 = private unnamed_addr constant [4 x i8] c"'['\00"
@str.73 = private unnamed_addr constant [4 x i8] c"']'\00"
@str.74 = private unnamed_addr constant [4 x i8] c"'('\00"
@str.75 = private unnamed_addr constant [4 x i8] c"')'\00"
@str.76 = private unnamed_addr constant [4 x i8] c"':'\00"
@str.77 = private unnamed_addr constant [17 x i8] c"';' (or newline)\00"
@str.78 = private unnamed_addr constant [4 x i8] c"','\00"
@str.79 = private unnamed_addr constant [4 x i8] c"'.'\00"
@str.80 = private unnamed_addr constant [4 x i8] c"'`'\00"
@str.81 = private unnamed_addr constant [4 x i8] c"'='\00"
@str.82 = private unnamed_addr constant [11 x i8] c"identifier\00"
@str.83 = private unnamed_addr constant [9 x i8] c"operator\00"
@str.84 = private unnamed_addr constant [13 x i8] c"char literal\00"
@str.85 = private unnamed_addr constant [15 x i8] c"string literal\00"
@str.86 = private unnamed_addr constant [12 x i8] c"int literal\00"
@str.87 = private unnamed_addr constant [13 x i8] c"long literal\00"
@str.88 = private unnamed_addr constant [13 x i8] c"uint literal\00"
@str.89 = private unnamed_addr constant [14 x i8] c"ulong literal\00"
@str.90 = private unnamed_addr constant [14 x i8] c"float literal\00"
@str.91 = private unnamed_addr constant [15 x i8] c"double literal\00"
@str.92 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str.93 = private unnamed_addr constant [13 x i8] c", expecting \00"
@str.94 = private unnamed_addr constant [8 x i8] c"AnyType\00"
@str.95 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str.96 = private unnamed_addr constant [28 x i8] c", expecting block statement\00"
@str.97 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str.98 = private unnamed_addr constant [23 x i8] c", expecting expression\00"
@str.99 = private unnamed_addr constant [3 x i8] c"()\00"
@str.100 = private unnamed_addr constant [2 x i8] c"=\00"
@str.101 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str.102 = private unnamed_addr constant [35 x i8] c", expecting identifier or operator\00"
@str.103 = private unnamed_addr constant [2 x i8] c"=\00"
@str.104 = private unnamed_addr constant [2 x i8] c".\00"
@str.105 = private unnamed_addr constant [3 x i8] c"()\00"
@str.106 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str.107 = private unnamed_addr constant [42 x i8] c", expecting expression or block statement\00"
@str.108 = private unnamed_addr constant [26 x i8] c"Syntax error, unexpected \00"
@str.109 = private unnamed_addr constant [22 x i8] c", expecting statement\00"
@llvm.global_ctors = appending global [4 x { i32, void ()* }] [{ i32, void ()* } { i32 0, void ()* @__global_ctor }, { i32, void ()* } { i32 1, void ()* @__global_ctor.1 }, { i32, void ()* } { i32 2, void ()* @__global_ctor.3 }, { i32, void ()* } { i32 3, void ()* @__global_ctor.6 }]
@llvm.global_dtors = appending global [4 x { i32, void ()* }] [{ i32, void ()* } { i32 0, void ()* @__global_dtor }, { i32, void ()* } { i32 1, void ()* @__global_dtor.2 }, { i32, void ()* } { i32 2, void ()* @__global_dtor.4 }, { i32, void ()* } { i32 3, void ()* @__global_dtor.7 }]

; Function Attrs: alwaysinline
define void @_zero_init_1(i1* %"$this") #0 {
  store i1 false, i1* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_8(i8* %"$this") #0 {
  store i8 0, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_16(i16* %"$this") #0 {
  store i16 0, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_32(i32* %"$this") #0 {
  store i32 0, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_64(i64* %"$this") #0 {
  store i64 0, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_f(float* %"$this") #0 {
  store float 0.000000e+00, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_zero_init_d(double* %"$this") #0 {
  store double 0.000000e+00, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_1_1(i1* %"$this", i1 %src) #0 {
  store i1 %src, i1* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_8(i8* %"$this", i8 %src) #0 {
  store i8 %src, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_16(i16* %"$this", i16 %src) #0 {
  store i16 %src, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_32(i32* %"$this", i32 %src) #0 {
  store i32 %src, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_64(i64* %"$this", i64 %src) #0 {
  store i64 %src, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_f(float* %"$this", float %src) #0 {
  store float %src, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_d(double* %"$this", double %src) #0 {
  store double %src, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_16(i8* %"$this", i16 %src) #0 {
  %1 = trunc i16 %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_32(i8* %"$this", i32 %src) #0 {
  %1 = trunc i32 %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_8_64(i8* %"$this", i64 %src) #0 {
  %1 = trunc i64 %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_32(i16* %"$this", i32 %src) #0 {
  %1 = trunc i32 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_64(i16* %"$this", i64 %src) #0 {
  %1 = trunc i64 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_64(i32* %"$this", i64 %src) #0 {
  %1 = trunc i64 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_8s(i16* %"$this", i8 %src) #0 {
  %1 = sext i8 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_16_8z(i16* %"$this", i8 %src) #0 {
  %1 = zext i8 %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_8s(i32* %"$this", i8 %src) #0 {
  %1 = sext i8 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_8z(i32* %"$this", i8 %src) #0 {
  %1 = zext i8 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_16s(i32* %"$this", i16 %src) #0 {
  %1 = sext i16 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_32_16z(i32* %"$this", i16 %src) #0 {
  %1 = zext i16 %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_8s(i64* %"$this", i8 %src) #0 {
  %1 = sext i8 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_8z(i64* %"$this", i8 %src) #0 {
  %1 = zext i8 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_16s(i64* %"$this", i16 %src) #0 {
  %1 = sext i16 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_16z(i64* %"$this", i16 %src) #0 {
  %1 = zext i16 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_32s(i64* %"$this", i32 %src) #0 {
  %1 = sext i32 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_64_32z(i64* %"$this", i32 %src) #0 {
  %1 = zext i32 %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i8_f(i8* %"$this", float %src) #0 {
  %1 = fptosi float %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i8_d(i8* %"$this", double %src) #0 {
  %1 = fptosi double %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u8_f(i8* %"$this", float %src) #0 {
  %1 = fptoui float %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u8_d(i8* %"$this", double %src) #0 {
  %1 = fptoui double %src to i8
  store i8 %1, i8* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i16_f(i16* %"$this", float %src) #0 {
  %1 = fptosi float %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i16_d(i16* %"$this", double %src) #0 {
  %1 = fptosi double %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u16_f(i16* %"$this", float %src) #0 {
  %1 = fptoui float %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u16_d(i16* %"$this", double %src) #0 {
  %1 = fptoui double %src to i16
  store i16 %1, i16* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i32_f(i32* %"$this", float %src) #0 {
  %1 = fptosi float %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i32_d(i32* %"$this", double %src) #0 {
  %1 = fptosi double %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u32_f(i32* %"$this", float %src) #0 {
  %1 = fptoui float %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u32_d(i32* %"$this", double %src) #0 {
  %1 = fptoui double %src to i32
  store i32 %1, i32* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i64_f(i64* %"$this", float %src) #0 {
  %1 = fptosi float %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_i64_d(i64* %"$this", double %src) #0 {
  %1 = fptosi double %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u64_f(i64* %"$this", float %src) #0 {
  %1 = fptoui float %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_u64_d(i64* %"$this", double %src) #0 {
  %1 = fptoui double %src to i64
  store i64 %1, i64* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i8(float* %"$this", i8 %src) #0 {
  %1 = sitofp i8 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u8(float* %"$this", i8 %src) #0 {
  %1 = uitofp i8 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i16(float* %"$this", i16 %src) #0 {
  %1 = sitofp i16 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u16(float* %"$this", i16 %src) #0 {
  %1 = uitofp i16 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i32(float* %"$this", i32 %src) #0 {
  %1 = sitofp i32 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u32(float* %"$this", i32 %src) #0 {
  %1 = uitofp i32 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_i64(float* %"$this", i64 %src) #0 {
  %1 = sitofp i64 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_u64(float* %"$this", i64 %src) #0 {
  %1 = uitofp i64 %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_f_d(float* %"$this", double %src) #0 {
  %1 = fptrunc double %src to float
  store float %1, float* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i8(double* %"$this", i8 %src) #0 {
  %1 = sitofp i8 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u8(double* %"$this", i8 %src) #0 {
  %1 = uitofp i8 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i16(double* %"$this", i16 %src) #0 {
  %1 = sitofp i16 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u16(double* %"$this", i16 %src) #0 {
  %1 = uitofp i16 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i32(double* %"$this", i32 %src) #0 {
  %1 = sitofp i32 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u32(double* %"$this", i32 %src) #0 {
  %1 = uitofp i32 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_i64(double* %"$this", i64 %src) #0 {
  %1 = sitofp i64 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_u64(double* %"$this", i64 %src) #0 {
  %1 = uitofp i64 %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define void @_ass_d_f(double* %"$this", float %src) #0 {
  %1 = fpext float %src to double
  store double %1, double* %"$this"
  ret void
}

; Function Attrs: alwaysinline
define i1 @_Bool_opAssign(i1* %x, i1 %y) #0 {
  store i1 %y, i1* %x
  ret i1 %y
}

; Function Attrs: alwaysinline
define i1 @_Bool_opOr(i1 %x, i1 %y) #0 {
  %1 = or i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opXor(i1 %x, i1 %y) #0 {
  %1 = xor i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opAnd(i1 %x, i1 %y) #0 {
  %1 = and i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opEQ(i1 %x, i1 %y) #0 {
  %1 = icmp eq i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opNE(i1 %x, i1 %y) #0 {
  %1 = icmp ne i1 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Bool_opNeg(i1 %x) #0 {
  %1 = xor i1 %x, true
  ret i1 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opAssign(i8* %x, i8 %y) #0 {
  store i8 %y, i8* %x
  ret i8 %y
}

; Function Attrs: alwaysinline
define i1 @_Byte_opEQ(i8 %x, i8 %y) #0 {
  %1 = icmp eq i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opNE(i8 %x, i8 %y) #0 {
  %1 = icmp ne i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opLT(i8 %x, i8 %y) #0 {
  %1 = icmp slt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opGT(i8 %x, i8 %y) #0 {
  %1 = icmp sgt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opLE(i8 %x, i8 %y) #0 {
  %1 = icmp sle i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Byte_opGE(i8 %x, i8 %y) #0 {
  %1 = icmp sge i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opPlus(i8 %x, i8 %y) #0 {
  %1 = add i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMinus(i8 %x, i8 %y) #0 {
  %1 = sub i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMul(i8 %x, i8 %y) #0 {
  %1 = mul i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opDiv(i8 %x, i8 %y) #0 {
  %1 = sdiv i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMod(i8 %x, i8 %y) #0 {
  %1 = srem i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_Byte_opPlus1(i8 %x) #0 {
  ret i8 %x
}

; Function Attrs: alwaysinline
define i8 @_Byte_opMinus1(i8 %x) #0 {
  %1 = sub i8 0, %x
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opAssign(i8* %x, i8 %y) #0 {
  store i8 %y, i8* %x
  ret i8 %y
}

; Function Attrs: alwaysinline
define i1 @_UByte_opEQ(i8 %x, i8 %y) #0 {
  %1 = icmp eq i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opNE(i8 %x, i8 %y) #0 {
  %1 = icmp ne i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opLT(i8 %x, i8 %y) #0 {
  %1 = icmp ult i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opGT(i8 %x, i8 %y) #0 {
  %1 = icmp ugt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opLE(i8 %x, i8 %y) #0 {
  %1 = icmp ule i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UByte_opGE(i8 %x, i8 %y) #0 {
  %1 = icmp uge i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opPlus(i8 %x, i8 %y) #0 {
  %1 = add i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opMinus(i8 %x, i8 %y) #0 {
  %1 = sub i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opMul(i8 %x, i8 %y) #0 {
  %1 = mul i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opDiv(i8 %x, i8 %y) #0 {
  %1 = udiv i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opMod(i8 %x, i8 %y) #0 {
  %1 = urem i8 %x, %y
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_UByte_opPlus1(i8 %x) #0 {
  ret i8 %x
}

; Function Attrs: alwaysinline
define i16 @_Short_opAssign(i16* %x, i16 %y) #0 {
  store i16 %y, i16* %x
  ret i16 %y
}

; Function Attrs: alwaysinline
define i1 @_Short_opEQ(i16 %x, i16 %y) #0 {
  %1 = icmp eq i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opNE(i16 %x, i16 %y) #0 {
  %1 = icmp ne i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opLT(i16 %x, i16 %y) #0 {
  %1 = icmp slt i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opGT(i16 %x, i16 %y) #0 {
  %1 = icmp sgt i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opLE(i16 %x, i16 %y) #0 {
  %1 = icmp sle i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Short_opGE(i16 %x, i16 %y) #0 {
  %1 = icmp sge i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opPlus(i16 %x, i16 %y) #0 {
  %1 = add i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opMinus(i16 %x, i16 %y) #0 {
  %1 = sub i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opMul(i16 %x, i16 %y) #0 {
  %1 = mul i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opDiv(i16 %x, i16 %y) #0 {
  %1 = sdiv i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opMod(i16 %x, i16 %y) #0 {
  %1 = srem i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_Short_opPlus1(i16 %x) #0 {
  ret i16 %x
}

; Function Attrs: alwaysinline
define i16 @_Short_opMinus1(i16 %x) #0 {
  %1 = sub i16 0, %x
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opAssign(i16* %x, i16 %y) #0 {
  store i16 %y, i16* %x
  ret i16 %y
}

; Function Attrs: alwaysinline
define i1 @_UShort_opEQ(i16 %x, i16 %y) #0 {
  %1 = icmp eq i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opNE(i16 %x, i16 %y) #0 {
  %1 = icmp ne i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opLT(i16 %x, i16 %y) #0 {
  %1 = icmp ult i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opGT(i16 %x, i16 %y) #0 {
  %1 = icmp ugt i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opLE(i16 %x, i16 %y) #0 {
  %1 = icmp ule i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UShort_opGE(i16 %x, i16 %y) #0 {
  %1 = icmp uge i16 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opPlus(i16 %x, i16 %y) #0 {
  %1 = add i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opMinus(i16 %x, i16 %y) #0 {
  %1 = sub i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opMul(i16 %x, i16 %y) #0 {
  %1 = mul i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opDiv(i16 %x, i16 %y) #0 {
  %1 = udiv i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opMod(i16 %x, i16 %y) #0 {
  %1 = urem i16 %x, %y
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_UShort_opPlus1(i16 %x) #0 {
  ret i16 %x
}

; Function Attrs: alwaysinline
define i32 @_Int_opAssign(i32* %x, i32 %y) #0 {
  store i32 %y, i32* %x
  ret i32 %y
}

; Function Attrs: alwaysinline
define i1 @_Int_opEQ(i32 %x, i32 %y) #0 {
  %1 = icmp eq i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opNE(i32 %x, i32 %y) #0 {
  %1 = icmp ne i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opLT(i32 %x, i32 %y) #0 {
  %1 = icmp slt i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opGT(i32 %x, i32 %y) #0 {
  %1 = icmp sgt i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opLE(i32 %x, i32 %y) #0 {
  %1 = icmp sle i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Int_opGE(i32 %x, i32 %y) #0 {
  %1 = icmp sge i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opPlus(i32 %x, i32 %y) #0 {
  %1 = add i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opMinus(i32 %x, i32 %y) #0 {
  %1 = sub i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opMul(i32 %x, i32 %y) #0 {
  %1 = mul i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opDiv(i32 %x, i32 %y) #0 {
  %1 = sdiv i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opMod(i32 %x, i32 %y) #0 {
  %1 = srem i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_Int_opPlus1(i32 %x) #0 {
  ret i32 %x
}

; Function Attrs: alwaysinline
define i32 @_Int_opMinus1(i32 %x) #0 {
  %1 = sub i32 0, %x
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opAssign(i32* %x, i32 %y) #0 {
  store i32 %y, i32* %x
  ret i32 %y
}

; Function Attrs: alwaysinline
define i1 @_UInt_opEQ(i32 %x, i32 %y) #0 {
  %1 = icmp eq i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opNE(i32 %x, i32 %y) #0 {
  %1 = icmp ne i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opLT(i32 %x, i32 %y) #0 {
  %1 = icmp ult i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opGT(i32 %x, i32 %y) #0 {
  %1 = icmp ugt i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opLE(i32 %x, i32 %y) #0 {
  %1 = icmp ule i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_UInt_opGE(i32 %x, i32 %y) #0 {
  %1 = icmp uge i32 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opPlus(i32 %x, i32 %y) #0 {
  %1 = add i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opMinus(i32 %x, i32 %y) #0 {
  %1 = sub i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opMul(i32 %x, i32 %y) #0 {
  %1 = mul i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opDiv(i32 %x, i32 %y) #0 {
  %1 = udiv i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opMod(i32 %x, i32 %y) #0 {
  %1 = urem i32 %x, %y
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_UInt_opPlus1(i32 %x) #0 {
  ret i32 %x
}

; Function Attrs: alwaysinline
define i64 @_Long_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_Long_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp slt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp sgt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp sle i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Long_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp sge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opDiv(i64 %x, i64 %y) #0 {
  %1 = sdiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opMod(i64 %x, i64 %y) #0 {
  %1 = srem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_Long_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define i64 @_Long_opMinus1(i64 %x) #0 {
  %1 = sub i64 0, %x
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_ULong_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp ult i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp ugt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp ule i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_ULong_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp uge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opDiv(i64 %x, i64 %y) #0 {
  %1 = udiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opMod(i64 %x, i64 %y) #0 {
  %1 = urem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_ULong_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define float @_Float_opAssign(float* %x, float %y) #0 {
  store float %y, float* %x
  ret float %y
}

; Function Attrs: alwaysinline
define i1 @_Float_opEQ(float %x, float %y) #0 {
  %1 = fcmp ueq float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opNE(float %x, float %y) #0 {
  %1 = fcmp une float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opLT(float %x, float %y) #0 {
  %1 = fcmp ult float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opGT(float %x, float %y) #0 {
  %1 = fcmp ugt float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opLE(float %x, float %y) #0 {
  %1 = fcmp ule float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Float_opGE(float %x, float %y) #0 {
  %1 = fcmp uge float %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define float @_Float_opPlus(float %x, float %y) #0 {
  %1 = fadd float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opMinus(float %x, float %y) #0 {
  %1 = fsub float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opMul(float %x, float %y) #0 {
  %1 = fmul float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opDiv(float %x, float %y) #0 {
  %1 = fdiv float %x, %y
  ret float %1
}

; Function Attrs: alwaysinline
define float @_Float_opPlus1(float %x) #0 {
  ret float %x
}

; Function Attrs: alwaysinline
define float @_Float_opMinus1(float %x) #0 {
  %1 = fsub float 0.000000e+00, %x
  ret float %1
}

; Function Attrs: alwaysinline
define double @_Double_opAssign(double* %x, double %y) #0 {
  store double %y, double* %x
  ret double %y
}

; Function Attrs: alwaysinline
define i1 @_Double_opEQ(double %x, double %y) #0 {
  %1 = fcmp ueq double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opNE(double %x, double %y) #0 {
  %1 = fcmp une double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opLT(double %x, double %y) #0 {
  %1 = fcmp ult double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opGT(double %x, double %y) #0 {
  %1 = fcmp ugt double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opLE(double %x, double %y) #0 {
  %1 = fcmp ule double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Double_opGE(double %x, double %y) #0 {
  %1 = fcmp uge double %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define double @_Double_opPlus(double %x, double %y) #0 {
  %1 = fadd double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opMinus(double %x, double %y) #0 {
  %1 = fsub double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opMul(double %x, double %y) #0 {
  %1 = fmul double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opDiv(double %x, double %y) #0 {
  %1 = fdiv double %x, %y
  ret double %1
}

; Function Attrs: alwaysinline
define double @_Double_opPlus1(double %x) #0 {
  ret double %x
}

; Function Attrs: alwaysinline
define double @_Double_opMinus1(double %x) #0 {
  %1 = fsub double 0.000000e+00, %x
  ret double %1
}

; Function Attrs: alwaysinline
define i8 @_Char_opAssign(i8* %x, i8 %y) #0 {
  store i8 %y, i8* %x
  ret i8 %y
}

; Function Attrs: alwaysinline
define i1 @_Char_opEQ(i8 %x, i8 %y) #0 {
  %1 = icmp eq i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opNE(i8 %x, i8 %y) #0 {
  %1 = icmp ne i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opLT(i8 %x, i8 %y) #0 {
  %1 = icmp slt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opGT(i8 %x, i8 %y) #0 {
  %1 = icmp sgt i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opLE(i8 %x, i8 %y) #0 {
  %1 = icmp sle i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_Char_opGE(i8 %x, i8 %y) #0 {
  %1 = icmp sge i8 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp ult i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp ugt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp ule i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_SizeType_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp uge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = add i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = add i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMinusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = sub i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMinusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = sub i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opDiv(i64 %x, i64 %y) #0 {
  %1 = udiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opMod(i64 %x, i64 %y) #0 {
  %1 = urem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_SizeType_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opAssign(i64* %x, i64 %y) #0 {
  store i64 %y, i64* %x
  ret i64 %y
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opEQ(i64 %x, i64 %y) #0 {
  %1 = icmp eq i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opNE(i64 %x, i64 %y) #0 {
  %1 = icmp ne i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opLT(i64 %x, i64 %y) #0 {
  %1 = icmp slt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opGT(i64 %x, i64 %y) #0 {
  %1 = icmp sgt i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opLE(i64 %x, i64 %y) #0 {
  %1 = icmp sle i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @_DiffType_opGE(i64 %x, i64 %y) #0 {
  %1 = icmp sge i64 %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlus(i64 %x, i64 %y) #0 {
  %1 = add i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = add i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = add i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinus(i64 %x, i64 %y) #0 {
  %1 = sub i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinusInt(i64 %x, i32 %y) #0 {
  %1 = sext i32 %y to i64
  %2 = sub i64 %x, %1
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinusInt1(i32 %x, i64 %y) #0 {
  %1 = sext i32 %x to i64
  %2 = sub i64 %1, %y
  ret i64 %2
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMul(i64 %x, i64 %y) #0 {
  %1 = mul i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opDiv(i64 %x, i64 %y) #0 {
  %1 = sdiv i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMod(i64 %x, i64 %y) #0 {
  %1 = srem i64 %x, %y
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opPlus1(i64 %x) #0 {
  ret i64 %x
}

; Function Attrs: alwaysinline
define i64 @_DiffType_opMinus1(i64 %x) #0 {
  %1 = sub i64 0, %x
  ret i64 %1
}

; Function Attrs: alwaysinline
define i1 @isNullRef(i8* %x) #0 {
  %1 = icmp eq i8* %x, null
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @implOpRefEQ(i8* %x, i8* %y) #0 {
  %1 = icmp eq i8* %x, %y
  ret i1 %1
}

; Function Attrs: alwaysinline
define i1 @implOpRefNE(i8* %x, i8* %y) #0 {
  %1 = icmp ne i8* %x, %y
  ret i1 %1
}

define void @_Type_ctor(i8** %"$this") {
  store i8* null, i8** %"$this"
  ret void
}

define void @_Type_copy_ctor(i8** %"$this", i8* %other) {
  store i8* %other, i8** %"$this"
  ret void
}

; Function Attrs: alwaysinline
define i8* @ptrAdd(i8* %p, i64 %n) #0 {
  %1 = getelementptr i8, i8* %p, i64 %n
  ret i8* %1
}

; Function Attrs: alwaysinline
define i8* @ptrSub(i8* %p, i64 %n) #0 {
  %1 = sub i64 0, %n
  %2 = getelementptr i8, i8* %p, i64 %1
  ret i8* %2
}

; Function Attrs: alwaysinline
define i64 @ptrDiff(i8* %p1, i8* %p2) #0 {
  %1 = ptrtoint i8* %p1 to i64
  %2 = ptrtoint i8* %p2 to i64
  %3 = sub i64 %1, %2
  ret i64 %3
}

; Function Attrs: alwaysinline
define void @_spr_memcpy(i8* %dest, i8* %src, i64 %size) #0 {
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %dest, i8* %src, i64 %size, i32 1, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: alwaysinline
define void @_spr_memmove(i8* %dest, i8* %src, i64 %size) #0 {
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dest, i8* %src, i64 %size, i32 1, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: alwaysinline
define void @_spr_memset(i8* %dest, i8 %value, i64 %size) #0 {
  call void @llvm.memset.p0i8.i64(i8* %dest, i8 %value, i64 %size, i32 1, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: alwaysinline
define void @flushOutput() #0 {
  %1 = call i32 @fflush(%struct._IO_FILE* null)
  ret void
}

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: alwaysinline
define void @writeByte(i8 %val) #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.fmtInt, i32 0, i32 0), i8 %val)
  ret void
}

declare i32 @printf(i8*, ...)

; Function Attrs: alwaysinline
define void @writeShort(i16 %val) #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.fmtInt, i32 0, i32 0), i16 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeInt(i32 %val) #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.fmtInt, i32 0, i32 0), i32 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeUInt(i32 %val) #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.fmtUInt, i32 0, i32 0), i32 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeLong(i64 %val) #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.fmtLong, i32 0, i32 0), i64 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeULong(i64 %val) #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.fmtULong, i32 0, i32 0), i64 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeDouble(double %val) #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.fmtDouble, i32 0, i32 0), double %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writeChar(i8 %val) #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.fmtChar, i32 0, i32 0), i8 %val)
  ret void
}

; Function Attrs: alwaysinline
define void @writePointer(i8* %val) #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.fmtPointer, i32 0, i32 0), i8* %val)
  ret void
}

; Function Attrs: alwaysinline
define void @_Int_to_CString(i32 %val, i8* %buffer) #0 {
  %1 = call i32 (i8*, i8*, ...) @sprintf(i8* %buffer, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.fmtInt, i32 0, i32 0), i32 %val) #2
  ret void
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: alwaysinline
define void @_ULong_to_CString(i64 %val, i8* %buffer) #0 {
  %1 = call i32 (i8*, i8*, ...) @sprintf(i8* %buffer, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.fmtULong, i32 0, i32 0), i64 %val) #2
  ret void
}

; Function Attrs: alwaysinline
define i8 @_bit_neg_8(i8 %n) #0 {
  %1 = xor i8 %n, 0
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_shl_8(i8 %n, i8 %k) #0 {
  %1 = shl i8 %n, %k
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_lshr_8(i8 %n, i8 %k) #0 {
  %1 = lshr i8 %n, %k
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_ashr_8(i8 %n, i8 %k) #0 {
  %1 = ashr i8 %n, %k
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_xor_8(i8 %n1, i8 %n2) #0 {
  %1 = xor i8 %n1, %n2
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_or_8(i8 %n1, i8 %n2) #0 {
  %1 = or i8 %n1, %n2
  ret i8 %1
}

; Function Attrs: alwaysinline
define i8 @_bit_and_8(i8 %n1, i8 %n2) #0 {
  %1 = and i8 %n1, %n2
  ret i8 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_neg_16(i16 %n) #0 {
  %1 = xor i16 %n, 0
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_shl_16(i16 %n, i16 %k) #0 {
  %1 = shl i16 %n, %k
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_lshr_16(i16 %n, i16 %k) #0 {
  %1 = lshr i16 %n, %k
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_ashr_16(i16 %n, i16 %k) #0 {
  %1 = ashr i16 %n, %k
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_xor_16(i16 %n1, i16 %n2) #0 {
  %1 = xor i16 %n1, %n2
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_or_16(i16 %n1, i16 %n2) #0 {
  %1 = or i16 %n1, %n2
  ret i16 %1
}

; Function Attrs: alwaysinline
define i16 @_bit_and_16(i16 %n1, i16 %n2) #0 {
  %1 = and i16 %n1, %n2
  ret i16 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_neg_32(i32 %n) #0 {
  %1 = xor i32 %n, 0
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_shl_32(i32 %n, i32 %k) #0 {
  %1 = shl i32 %n, %k
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_lshr_32(i32 %n, i32 %k) #0 {
  %1 = lshr i32 %n, %k
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_ashr_32(i32 %n, i32 %k) #0 {
  %1 = ashr i32 %n, %k
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_xor_32(i32 %n1, i32 %n2) #0 {
  %1 = xor i32 %n1, %n2
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_or_32(i32 %n1, i32 %n2) #0 {
  %1 = or i32 %n1, %n2
  ret i32 %1
}

; Function Attrs: alwaysinline
define i32 @_bit_and_32(i32 %n1, i32 %n2) #0 {
  %1 = and i32 %n1, %n2
  ret i32 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_neg_64(i64 %n) #0 {
  %1 = xor i64 %n, 0
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_shl_64(i64 %n, i64 %k) #0 {
  %1 = shl i64 %n, %k
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_lshr_64(i64 %n, i64 %k) #0 {
  %1 = lshr i64 %n, %k
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_ashr_64(i64 %n, i64 %k) #0 {
  %1 = ashr i64 %n, %k
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_xor_64(i64 %n1, i64 %n2) #0 {
  %1 = xor i64 %n1, %n2
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_or_64(i64 %n1, i64 %n2) #0 {
  %1 = or i64 %n1, %n2
  ret i64 %1
}

; Function Attrs: alwaysinline
define i64 @_bit_and_64(i64 %n1, i64 %n2) #0 {
  %1 = and i64 %n1, %n2
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor(%Uninitialized %this) #3 {
  %this.addr = alloca %Uninitialized
  store %Uninitialized %this, %Uninitialized* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.0(%Uninitialized %this, %Uninitialized %other) #3 {
  %this.addr = alloca %Uninitialized
  store %Uninitialized %this, %Uninitialized* %this.addr
  %other.addr = alloca %Uninitialized
  store %Uninitialized %other, %Uninitialized* %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor(%Uninitialized %this) #3 {
  %this.addr = alloca %Uninitialized
  store %Uninitialized %this, %Uninitialized* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.1(%Null %this) #3 {
  %this.addr = alloca %Null
  store %Null %this, %Null* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.2(%Null %this, %Null %other) #3 {
  %this.addr = alloca %Null
  store %Null %this, %Null* %this.addr
  %other.addr = alloca %Null
  store %Null %other, %Null* %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.3(%Null %this) #3 {
  %this.addr = alloca %Null
  store %Null %this, %Null* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.4(i1* %this) #3 {
  %this.addr = alloca i1*
  store i1* %this, i1** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.5(i8 %this) #3 {
  %this.addr = alloca i8
  store i8 %this, i8* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.6(i8 %this) #3 {
  %this.addr = alloca i8
  store i8 %this, i8* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.7(i16 %this) #3 {
  %this.addr = alloca i16
  store i16 %this, i16* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.8(i16 %this) #3 {
  %this.addr = alloca i16
  store i16 %this, i16* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.9(i32 %this) #3 {
  %this.addr = alloca i32
  store i32 %this, i32* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.10(i32 %this) #3 {
  %this.addr = alloca i32
  store i32 %this, i32* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.11(i64 %this) #3 {
  %this.addr = alloca i64
  store i64 %this, i64* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.12(i64* %this) #3 {
  %this.addr = alloca i64*
  store i64* %this, i64** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.13(i64 %this) #3 {
  %this.addr = alloca i64
  store i64 %this, i64* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.14(i64 %this) #3 {
  %this.addr = alloca i64
  store i64 %this, i64* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.15(float %this) #3 {
  %this.addr = alloca float
  store float %this, float* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.16(double %this) #3 {
  %this.addr = alloca double
  store double %this, double* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.17(i8 %this) #3 {
  %this.addr = alloca i8
  store i8 %this, i8* %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

declare i1 @"$logicalOr"(i1, i1)

declare i1 @"$logicalAnd"(i1, i1)

declare float @_Float_opMod(float, float)

declare double @_Double_opMod(double, double)

; Function Attrs: alwaysinline nounwind
define internal i8 @"pre_++"(i8* %n) #3 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %n.addr
  %2 = load i8, i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8, i8* %tmp.v
  %4 = add i8 %2, %3
  %5 = load i8*, i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8*, i8** %n.addr
  %7 = load i8, i8* %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"pre_++.18"(i8* %n) #3 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %n.addr
  %2 = load i8, i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8, i8* %tmp.v
  %4 = add i8 %2, %3
  %5 = load i8*, i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8*, i8** %n.addr
  %7 = load i8, i8* %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"pre_++.19"(i16* %n) #3 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16*, i16** %n.addr
  %2 = load i16, i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16, i16* %tmp.v
  %4 = add i16 %2, %3
  %5 = load i16*, i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16*, i16** %n.addr
  %7 = load i16, i16* %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"pre_++.20"(i16* %n) #3 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16*, i16** %n.addr
  %2 = load i16, i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16, i16* %tmp.v
  %4 = add i16 %2, %3
  %5 = load i16*, i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16*, i16** %n.addr
  %7 = load i16, i16* %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"pre_++.21"(i32* %n) #3 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32*, i32** %n.addr
  %2 = load i32, i32* %1
  %3 = add i32 %2, 1
  %4 = load i32*, i32** %n.addr
  store i32 %3, i32* %4
  %5 = load i32*, i32** %n.addr
  %6 = load i32, i32* %5
  ret i32 %6
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"pre_++.22"(i32* %n) #3 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32*, i32** %n.addr
  %2 = load i32, i32* %1
  store i32 1, i32* %tmp.v
  %3 = load i32, i32* %tmp.v
  %4 = add i32 %2, %3
  %5 = load i32*, i32** %n.addr
  store i32 %4, i32* %5
  %6 = load i32*, i32** %n.addr
  %7 = load i32, i32* %6
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++.23"(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = add i64 %2, %3
  %5 = load i64*, i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64*, i64** %n.addr
  %7 = load i64, i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++.24"(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = add i64 %2, %3
  %5 = load i64*, i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64*, i64** %n.addr
  %7 = load i64, i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++.25"(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = add i64 %2, %3
  %5 = load i64*, i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64*, i64** %n.addr
  %7 = load i64, i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"pre_++.26"(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = add i64 %2, %3
  %5 = load i64*, i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64*, i64** %n.addr
  %7 = load i64, i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @pre_--(i8* %n) #3 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %n.addr
  %2 = load i8, i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8, i8* %tmp.v
  %4 = sub i8 %2, %3
  %5 = load i8*, i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8*, i8** %n.addr
  %7 = load i8, i8* %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @pre_--.27(i8* %n) #3 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %n.addr
  %2 = load i8, i8* %1
  store i8 1, i8* %tmp.v
  %3 = load i8, i8* %tmp.v
  %4 = sub i8 %2, %3
  %5 = load i8*, i8** %n.addr
  store i8 %4, i8* %5
  %6 = load i8*, i8** %n.addr
  %7 = load i8, i8* %6
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @pre_--.28(i16* %n) #3 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16*, i16** %n.addr
  %2 = load i16, i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16, i16* %tmp.v
  %4 = sub i16 %2, %3
  %5 = load i16*, i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16*, i16** %n.addr
  %7 = load i16, i16* %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i16 @pre_--.29(i16* %n) #3 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16*, i16** %n.addr
  %2 = load i16, i16* %1
  store i16 1, i16* %tmp.v
  %3 = load i16, i16* %tmp.v
  %4 = sub i16 %2, %3
  %5 = load i16*, i16** %n.addr
  store i16 %4, i16* %5
  %6 = load i16*, i16** %n.addr
  %7 = load i16, i16* %6
  ret i16 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @pre_--.30(i32* %n) #3 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32*, i32** %n.addr
  %2 = load i32, i32* %1
  %3 = sub i32 %2, 1
  %4 = load i32*, i32** %n.addr
  store i32 %3, i32* %4
  %5 = load i32*, i32** %n.addr
  %6 = load i32, i32* %5
  ret i32 %6
}

; Function Attrs: alwaysinline nounwind
define internal i32 @pre_--.31(i32* %n) #3 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32*, i32** %n.addr
  %2 = load i32, i32* %1
  store i32 1, i32* %tmp.v
  %3 = load i32, i32* %tmp.v
  %4 = sub i32 %2, %3
  %5 = load i32*, i32** %n.addr
  store i32 %4, i32* %5
  %6 = load i32*, i32** %n.addr
  %7 = load i32, i32* %6
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--.32(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = sub i64 %2, %3
  %5 = load i64*, i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64*, i64** %n.addr
  %7 = load i64, i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--.33(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = sub i64 %2, %3
  %5 = load i64*, i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64*, i64** %n.addr
  %7 = load i64, i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--.34(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = call i64 @_SizeType_opMinus(i64 %2, i64 %3)
  %5 = load i64*, i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64*, i64** %n.addr
  %7 = load i64, i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i64 @pre_--.35(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 1, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = call i64 @_DiffType_opMinus(i64 %2, i64 %3)
  %5 = load i64*, i64** %n.addr
  store i64 %4, i64* %5
  %6 = load i64*, i64** %n.addr
  %7 = load i64, i64* %6
  ret i64 %7
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"post_++"(i8* %n) #3 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %n.addr
  %2 = load i8, i8* %1
  store i8 %2, i8* %old
  %3 = load i8*, i8** %n.addr
  %4 = load i8, i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8, i8* %tmp.v
  %6 = add i8 %4, %5
  %7 = load i8*, i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8, i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i8 @"post_++.36"(i8* %n) #3 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %n.addr
  %2 = load i8, i8* %1
  store i8 %2, i8* %old
  %3 = load i8*, i8** %n.addr
  %4 = load i8, i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8, i8* %tmp.v
  %6 = add i8 %4, %5
  %7 = load i8*, i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8, i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"post_++.37"(i16* %n) #3 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16*, i16** %n.addr
  %2 = load i16, i16* %1
  store i16 %2, i16* %old
  %3 = load i16*, i16** %n.addr
  %4 = load i16, i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16, i16* %tmp.v
  %6 = add i16 %4, %5
  %7 = load i16*, i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16, i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @"post_++.38"(i16* %n) #3 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16*, i16** %n.addr
  %2 = load i16, i16* %1
  store i16 %2, i16* %old
  %3 = load i16*, i16** %n.addr
  %4 = load i16, i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16, i16* %tmp.v
  %6 = add i16 %4, %5
  %7 = load i16*, i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16, i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"post_++.39"(i32* %n) #3 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32*, i32** %n.addr
  %2 = load i32, i32* %1
  store i32 %2, i32* %old
  %3 = load i32*, i32** %n.addr
  %4 = load i32, i32* %3
  %5 = add i32 %4, 1
  %6 = load i32*, i32** %n.addr
  store i32 %5, i32* %6
  %7 = load i32, i32* %old
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @"post_++.40"(i32* %n) #3 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32*, i32** %n.addr
  %2 = load i32, i32* %1
  store i32 %2, i32* %old
  %3 = load i32*, i32** %n.addr
  %4 = load i32, i32* %3
  store i32 1, i32* %tmp.v
  %5 = load i32, i32* %tmp.v
  %6 = add i32 %4, %5
  %7 = load i32*, i32** %n.addr
  store i32 %6, i32* %7
  %8 = load i32, i32* %old
  ret i32 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++.41"(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 %2, i64* %old
  %3 = load i64*, i64** %n.addr
  %4 = load i64, i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  %6 = add i64 %4, %5
  %7 = load i64*, i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64, i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++.42"(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 %2, i64* %old
  %3 = load i64*, i64** %n.addr
  %4 = load i64, i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  %6 = add i64 %4, %5
  %7 = load i64*, i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64, i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++.43"(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 %2, i64* %old
  %3 = load i64*, i64** %n.addr
  %4 = load i64, i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  %6 = add i64 %4, %5
  %7 = load i64*, i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64, i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @"post_++.44"(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 %2, i64* %old
  %3 = load i64*, i64** %n.addr
  %4 = load i64, i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  %6 = add i64 %4, %5
  %7 = load i64*, i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64, i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i8 @post_--(i8* %n) #3 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %n.addr
  %2 = load i8, i8* %1
  store i8 %2, i8* %old
  %3 = load i8*, i8** %n.addr
  %4 = load i8, i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8, i8* %tmp.v
  %6 = sub i8 %4, %5
  %7 = load i8*, i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8, i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i8 @post_--.45(i8* %n) #3 {
  %n.addr = alloca i8*
  store i8* %n, i8** %n.addr
  %old = alloca i8
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %n.addr
  %2 = load i8, i8* %1
  store i8 %2, i8* %old
  %3 = load i8*, i8** %n.addr
  %4 = load i8, i8* %3
  store i8 1, i8* %tmp.v
  %5 = load i8, i8* %tmp.v
  %6 = sub i8 %4, %5
  %7 = load i8*, i8** %n.addr
  store i8 %6, i8* %7
  %8 = load i8, i8* %old
  ret i8 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @post_--.46(i16* %n) #3 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16*, i16** %n.addr
  %2 = load i16, i16* %1
  store i16 %2, i16* %old
  %3 = load i16*, i16** %n.addr
  %4 = load i16, i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16, i16* %tmp.v
  %6 = sub i16 %4, %5
  %7 = load i16*, i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16, i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i16 @post_--.47(i16* %n) #3 {
  %n.addr = alloca i16*
  store i16* %n, i16** %n.addr
  %old = alloca i16
  %tmp.v = alloca i16
  br label %code

code:                                             ; preds = %0
  %1 = load i16*, i16** %n.addr
  %2 = load i16, i16* %1
  store i16 %2, i16* %old
  %3 = load i16*, i16** %n.addr
  %4 = load i16, i16* %3
  store i16 1, i16* %tmp.v
  %5 = load i16, i16* %tmp.v
  %6 = sub i16 %4, %5
  %7 = load i16*, i16** %n.addr
  store i16 %6, i16* %7
  %8 = load i16, i16* %old
  ret i16 %8
}

; Function Attrs: alwaysinline nounwind
define internal i32 @post_--.48(i32* %n) #3 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32*, i32** %n.addr
  %2 = load i32, i32* %1
  store i32 %2, i32* %old
  %3 = load i32*, i32** %n.addr
  %4 = load i32, i32* %3
  %5 = sub i32 %4, 1
  %6 = load i32*, i32** %n.addr
  store i32 %5, i32* %6
  %7 = load i32, i32* %old
  ret i32 %7
}

; Function Attrs: alwaysinline nounwind
define internal i32 @post_--.49(i32* %n) #3 {
  %n.addr = alloca i32*
  store i32* %n, i32** %n.addr
  %old = alloca i32
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i32*, i32** %n.addr
  %2 = load i32, i32* %1
  store i32 %2, i32* %old
  %3 = load i32*, i32** %n.addr
  %4 = load i32, i32* %3
  store i32 1, i32* %tmp.v
  %5 = load i32, i32* %tmp.v
  %6 = sub i32 %4, %5
  %7 = load i32*, i32** %n.addr
  store i32 %6, i32* %7
  %8 = load i32, i32* %old
  ret i32 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--.50(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 %2, i64* %old
  %3 = load i64*, i64** %n.addr
  %4 = load i64, i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  %6 = sub i64 %4, %5
  %7 = load i64*, i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64, i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--.51(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 %2, i64* %old
  %3 = load i64*, i64** %n.addr
  %4 = load i64, i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  %6 = sub i64 %4, %5
  %7 = load i64*, i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64, i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--.52(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 %2, i64* %old
  %3 = load i64*, i64** %n.addr
  %4 = load i64, i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  %6 = call i64 @_SizeType_opMinus(i64 %4, i64 %5)
  %7 = load i64*, i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64, i64* %old
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal i64 @post_--.53(i64* %n) #3 {
  %n.addr = alloca i64*
  store i64* %n, i64** %n.addr
  %old = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i64*, i64** %n.addr
  %2 = load i64, i64* %1
  store i64 %2, i64* %old
  %3 = load i64*, i64** %n.addr
  %4 = load i64, i64* %3
  store i64 1, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  %6 = call i64 @_DiffType_opMinus(i64 %4, i64 %5)
  %7 = load i64*, i64** %n.addr
  store i64 %6, i64* %7
  %8 = load i64, i64* %old
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.54(%StringRef* %this) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %StringRef*, %StringRef** %this.addr
  %4 = getelementptr inbounds %StringRef, %StringRef* %3, i32 0, i32 1
  store i8* null, i8** %4
  %5 = load %StringRef*, %StringRef** %this.addr
  %6 = getelementptr inbounds %StringRef, %StringRef* %5, i32 0, i32 0
  store i8* null, i8** %6
  %7 = load %StringRef*, %StringRef** %this.addr
  %8 = getelementptr inbounds %StringRef, %StringRef* %7, i32 0, i32 1
  store i8* null, i8** %8
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.55(%StringRef* %this, i64 %size) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %StringRef*, %StringRef** %this.addr
  %4 = getelementptr inbounds %StringRef, %StringRef* %3, i32 0, i32 1
  store i8* null, i8** %4
  %5 = load i64, i64* %size.addr
  store i64 1, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  %7 = add i64 %5, %6
  %8 = call i8* @malloc(i64 %7)
  %9 = load %StringRef*, %StringRef** %this.addr
  %10 = getelementptr inbounds %StringRef, %StringRef* %9, i32 0, i32 0
  store i8* %8, i8** %10
  %11 = load %StringRef*, %StringRef** %this.addr
  %12 = getelementptr inbounds %StringRef, %StringRef* %11, i32 0, i32 0
  %13 = load i8*, i8** %12
  %14 = load i64, i64* %size.addr
  %15 = call i8* @ptrAdd(i8* %13, i64 %14)
  %16 = load %StringRef*, %StringRef** %this.addr
  %17 = getelementptr inbounds %StringRef, %StringRef* %16, i32 0, i32 1
  store i8* %15, i8** %17
  store i8 0, i8* %tmp.v1
  %18 = load i8, i8* %tmp.v1
  %19 = load %StringRef*, %StringRef** %this.addr
  %20 = getelementptr inbounds %StringRef, %StringRef* %19, i32 0, i32 1
  %21 = load i8*, i8** %20
  store i8 %18, i8* %21
  ret void
}

declare i8* @malloc(i64)

; Function Attrs: inlinehint nounwind
define internal void @ctor.56(%StringRef* %this, %StringRef %other) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %other.addr = alloca %StringRef
  store %StringRef %other, %StringRef* %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %StringRef*, %StringRef** %this.addr
  %4 = getelementptr inbounds %StringRef, %StringRef* %3, i32 0, i32 1
  store i8* null, i8** %4
  %5 = getelementptr inbounds %StringRef, %StringRef* %other.addr, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = load %StringRef*, %StringRef** %this.addr
  %8 = getelementptr inbounds %StringRef, %StringRef* %7, i32 0, i32 0
  store i8* %6, i8** %8
  %9 = getelementptr inbounds %StringRef, %StringRef* %other.addr, i32 0, i32 1
  %10 = load i8*, i8** %9
  %11 = load %StringRef*, %StringRef** %this.addr
  %12 = getelementptr inbounds %StringRef, %StringRef* %11, i32 0, i32 1
  store i8* %10, i8** %12
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.57(%StringRef* %this, i8* %begin, i8* %end) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %begin.addr = alloca i8*
  store i8* %begin, i8** %begin.addr
  %end.addr = alloca i8*
  store i8* %end, i8** %end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %StringRef*, %StringRef** %this.addr
  %4 = getelementptr inbounds %StringRef, %StringRef* %3, i32 0, i32 1
  store i8* null, i8** %4
  %5 = load i8*, i8** %begin.addr
  %6 = load %StringRef*, %StringRef** %this.addr
  %7 = getelementptr inbounds %StringRef, %StringRef* %6, i32 0, i32 0
  store i8* %5, i8** %7
  %8 = load i8*, i8** %end.addr
  %9 = load %StringRef*, %StringRef** %this.addr
  %10 = getelementptr inbounds %StringRef, %StringRef* %9, i32 0, i32 1
  store i8* %8, i8** %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.58(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty(%StringRef* %this) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 1
  %3 = load i8*, i8** %2
  %4 = load %StringRef*, %StringRef** %this.addr
  %5 = getelementptr inbounds %StringRef, %StringRef* %4, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = call i64 @ptrDiff(i8* %3, i8* %6)
  store i64 0, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  %9 = icmp eq i64 %7, %8
  %10 = load i64, i64* %tmp.v
  ret i1 %9

dumy_block:                                       ; No predecessors!
  %11 = load i64, i64* %tmp.v
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal i64 @size(%StringRef* %this) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 1
  %3 = load i8*, i8** %2
  %4 = load %StringRef*, %StringRef** %this.addr
  %5 = getelementptr inbounds %StringRef, %StringRef* %4, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = call i64 @ptrDiff(i8* %3, i8* %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i8* @front(%StringRef* %this) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal i8* @back(%StringRef* %this) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 1
  %3 = load i8*, i8** %2
  store i64 4294967295, i64* %tmp.v
  %4 = load i64, i64* %tmp.v
  %5 = call i8* @ptrAdd(i8* %3, i64 %4)
  ret i8* %5
}

; Function Attrs: inlinehint nounwind
define internal i8* @"()"(%StringRef* %this) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal i8* @"().59"(%StringRef* %this, i64 %index) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load i64, i64* %index.addr
  %5 = call i8* @ptrAdd(i8* %3, i64 %4)
  ret i8* %5
}

; Function Attrs: inlinehint nounwind
define internal i8* @at(%StringRef* %this, i64 %index) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load i64, i64* %index.addr
  %5 = call i8* @ptrAdd(i8* %3, i64 %4)
  ret i8* %5
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  store i64 1, i64* %tmp.v
  %4 = load i64, i64* %tmp.v
  %5 = call i8* @ptrAdd(i8* %3, i64 %4)
  %6 = load %StringRef*, %StringRef** %this.addr
  %7 = getelementptr inbounds %StringRef, %StringRef* %6, i32 0, i32 0
  store i8* %5, i8** %7
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack(%StringRef* %this) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 1
  %3 = load i8*, i8** %2
  store i64 4294967295, i64* %tmp.v
  %4 = load i64, i64* %tmp.v
  %5 = call i8* @ptrAdd(i8* %3, i64 %4)
  %6 = load %StringRef*, %StringRef** %this.addr
  %7 = getelementptr inbounds %StringRef, %StringRef* %6, i32 0, i32 1
  store i8* %5, i8** %7
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront.60(%StringRef* %this, i64 %n) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load i64, i64* %n.addr
  %5 = call i8* @ptrAdd(i8* %3, i64 %4)
  %6 = load %StringRef*, %StringRef** %this.addr
  %7 = getelementptr inbounds %StringRef, %StringRef* %6, i32 0, i32 0
  store i8* %5, i8** %7
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack.61(%StringRef* %this, i64 %n) #3 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 1
  %3 = load i8*, i8** %2
  %4 = load i64, i64* %n.addr
  store i64 %4, i64* %tmp.v1
  %5 = load i64, i64* %tmp.v1
  %6 = sub i64 0, %5
  store i64 %6, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  %9 = load %StringRef*, %StringRef** %this.addr
  %10 = getelementptr inbounds %StringRef, %StringRef* %9, i32 0, i32 1
  store i8* %8, i8** %10
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8* @cStr(%StringRef* %this) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal %StringRef* @"="(%StringRef* %this, %StringRef %src) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %StringRef, %StringRef* %src.addr, i32 0, i32 0
  %2 = load i8*, i8** %1
  %3 = load %StringRef*, %StringRef** %this.addr
  %4 = getelementptr inbounds %StringRef, %StringRef* %3, i32 0, i32 0
  store i8* %2, i8** %4
  %5 = getelementptr inbounds %StringRef, %StringRef* %src.addr, i32 0, i32 1
  %6 = load i8*, i8** %5
  %7 = load %StringRef*, %StringRef** %this.addr
  %8 = getelementptr inbounds %StringRef, %StringRef* %7, i32 0, i32 1
  store i8* %6, i8** %8
  %9 = load %StringRef*, %StringRef** %this.addr
  ret %StringRef* %9
}

; Function Attrs: inlinehint nounwind
define internal i1 @"=="(%StringRef* %this, %StringRef %other) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %other.addr = alloca %StringRef
  store %StringRef %other, %StringRef* %other.addr
  %s = alloca i64
  %i = alloca i64
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = call i64 @size(%StringRef* %1)
  store i64 %2, i64* %s
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64, i64* %s
  %4 = call i64 @size(%StringRef* %other.addr)
  %5 = icmp ne i64 %3, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i64 0, i64* %i
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %6 = load i64, i64* %i
  %7 = load i64, i64* %s
  %8 = icmp slt i64 %6, %7
  br i1 %8, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %9 = load i64, i64* %i
  store i64 1, i64* %tmp.v
  %10 = load i64, i64* %tmp.v
  %11 = add i64 %9, %10
  store i64 %11, i64* %i
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %StringRef*, %StringRef** %this.addr
  %13 = load i64, i64* %i
  %14 = call i8* @at(%StringRef* %12, i64 %13)
  %15 = load i8, i8* %14
  %16 = load i64, i64* %i
  %17 = call i8* @at(%StringRef* %other.addr, i64 %16)
  %18 = load i8, i8* %17
  %19 = icmp ne i8 %15, %18
  br i1 %19, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  br label %while_step

dumy_block4:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal %StringRef @_String_fromCString(i8* %s) #4 {
  %s.addr = alloca i8*
  store i8* %s, i8** %s.addr
  %len = alloca i64
  %res = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %s.addr
  %2 = call i64 @cStringLen(i8* %1)
  store i64 %2, i64* %len
  call void @ctor.54(%StringRef* %res)
  %3 = load i8*, i8** %s.addr
  %4 = getelementptr inbounds %StringRef, %StringRef* %res, i32 0, i32 0
  store i8* %3, i8** %4
  %5 = getelementptr inbounds %StringRef, %StringRef* %res, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = load i64, i64* %len
  %8 = call i8* @ptrAdd(i8* %6, i64 %7)
  %9 = getelementptr inbounds %StringRef, %StringRef* %res, i32 0, i32 1
  store i8* %8, i8** %9
  %10 = load %StringRef, %StringRef* %res
  ret %StringRef %10
}

; Function Attrs: inlinehint nounwind
define internal i64 @cStringLen(i8* %s) #4 {
  %s.addr = alloca i8*
  store i8* %s, i8** %s.addr
  %p = alloca i8*
  %len = alloca i64
  %tmp.v = alloca i8
  %tmp.v1 = alloca i64
  %tmp.v2 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %s.addr
  store i8* %1, i8** %p
  store i64 0, i64* %len
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %2 = load i8*, i8** %p
  %3 = load i8, i8* %2
  store i8 0, i8* %tmp.v
  %4 = load i8, i8* %tmp.v
  %5 = icmp ne i8 %3, %4
  br i1 %5, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %6 = load i64, i64* %len
  store i64 1, i64* %tmp.v1
  %7 = load i64, i64* %tmp.v1
  %8 = add i64 %6, %7
  store i64 %8, i64* %len
  br label %while_step

while_step:                                       ; preds = %while_body
  %9 = load i8*, i8** %p
  store i64 1, i64* %tmp.v2
  %10 = load i64, i64* %tmp.v2
  %11 = call i8* @ptrAdd(i8* %9, i64 %10)
  store i8* %11, i8** %p
  br label %while_block

while_end:                                        ; preds = %while_block
  %12 = load i64, i64* %len
  ret i64 %12
}

; Function Attrs: inlinehint nounwind
define internal i8 @char(%StringRef* %this) #4 {
  %this.addr = alloca %StringRef*
  store %StringRef* %this, %StringRef** %this.addr
  %tmp.v = alloca i8
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %StringRef*, %StringRef** %this.addr
  %2 = call i1 @isEmpty(%StringRef* %1)
  br i1 %2, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  store i8 0, i8* %tmp.v
  %3 = load i8, i8* %tmp.v
  ret i8 %3

if_else:                                          ; preds = %if_block
  %4 = load %StringRef*, %StringRef** %this.addr
  store i64 0, i64* %tmp.v1
  %5 = load i64, i64* %tmp.v1
  %6 = call i8* @at(%StringRef* %4, i64 %5)
  %7 = load i8, i8* %6
  ret i8 %7

if_end:                                           ; preds = %dumy_block2, %dumy_block
  unreachable

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block2:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @"+"(%StringRef* sret %_result, %StringRef %x, %StringRef %y) #4 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %x.addr = alloca %StringRef
  store %StringRef %x, %StringRef* %x.addr
  %y.addr = alloca %StringRef
  store %StringRef %y, %StringRef* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i64
  %res = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %x.addr)
  store i64 %1, i64* %sz1
  %2 = call i64 @size(%StringRef* %y.addr)
  store i64 %2, i64* %sz2
  %3 = load i64, i64* %sz1
  %4 = load i64, i64* %sz2
  %5 = add i64 %3, %4
  call void @ctor.55(%StringRef* %res, i64 %5)
  %6 = getelementptr inbounds %StringRef, %StringRef* %res, i32 0, i32 0
  %7 = load i8*, i8** %6
  %8 = getelementptr inbounds %StringRef, %StringRef* %x.addr, i32 0, i32 0
  %9 = load i8*, i8** %8
  %10 = load i64, i64* %sz1
  call void @_spr_memcpy(i8* %7, i8* %9, i64 %10)
  %11 = getelementptr inbounds %StringRef, %StringRef* %res, i32 0, i32 0
  %12 = load i8*, i8** %11
  %13 = load i64, i64* %sz1
  %14 = call i8* @ptrAdd(i8* %12, i64 %13)
  %15 = getelementptr inbounds %StringRef, %StringRef* %y.addr, i32 0, i32 0
  %16 = load i8*, i8** %15
  %17 = load i64, i64* %sz2
  call void @_spr_memcpy(i8* %14, i8* %16, i64 %17)
  %18 = load %StringRef*, %StringRef** %_result.addr
  %19 = load %StringRef, %StringRef* %res
  call void @ctor.56(%StringRef* %18, %StringRef %19)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+.62"(%StringRef* sret %_result, %StringRef %x, i8 %y) #4 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %x.addr = alloca %StringRef
  store %StringRef %x, %StringRef* %x.addr
  %y.addr = alloca i8
  store i8 %y, i8* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i32
  %res = alloca %StringRef
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %x.addr)
  store i64 %1, i64* %sz1
  store i32 1, i32* %sz2
  %2 = load i64, i64* %sz1
  %3 = load i32, i32* %sz2
  %4 = zext i32 %3 to i64
  store i64 %4, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  %6 = add i64 %2, %5
  call void @ctor.55(%StringRef* %res, i64 %6)
  %7 = getelementptr inbounds %StringRef, %StringRef* %res, i32 0, i32 0
  %8 = load i8*, i8** %7
  %9 = getelementptr inbounds %StringRef, %StringRef* %x.addr, i32 0, i32 0
  %10 = load i8*, i8** %9
  %11 = load i64, i64* %sz1
  call void @_spr_memcpy(i8* %8, i8* %10, i64 %11)
  %12 = getelementptr inbounds %StringRef, %StringRef* %res, i32 0, i32 0
  %13 = load i8*, i8** %12
  %14 = load i64, i64* %sz1
  %15 = call i8* @ptrAdd(i8* %13, i64 %14)
  %16 = load i32, i32* %sz2
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %tmp.v1
  %18 = load i64, i64* %tmp.v1
  call void @_spr_memcpy(i8* %15, i8* %y.addr, i64 %18)
  %19 = load %StringRef*, %StringRef** %_result.addr
  %20 = load %StringRef, %StringRef* %res
  call void @ctor.56(%StringRef* %19, %StringRef %20)
  ret void
}

; Function Attrs: nounwind
declare void @cast() #2

; Function Attrs: nounwind
declare void @reinterpretCast() #2

; Function Attrs: nounwind
declare void @construct() #2

; Function Attrs: alwaysinline nounwind
define internal void @ctor.63(%UntypedPtr* %this, i8* %fdata) #3 {
  %this.addr = alloca %UntypedPtr*
  store %UntypedPtr* %this, %UntypedPtr** %this.addr
  %fdata.addr = alloca i8*
  store i8* %fdata, i8** %fdata.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %fdata.addr
  %2 = load %UntypedPtr*, %UntypedPtr** %this.addr
  %3 = getelementptr inbounds %UntypedPtr, %UntypedPtr* %2, i32 0, i32 0
  store i8* %1, i8** %3
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.64(%UntypedPtr* %this) #3 {
  %this.addr = alloca %UntypedPtr*
  store %UntypedPtr* %this, %UntypedPtr** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr*, %UntypedPtr** %this.addr
  %2 = getelementptr inbounds %UntypedPtr, %UntypedPtr* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.65(%UntypedPtr* %this, %UntypedPtr* %other) #3 {
  %this.addr = alloca %UntypedPtr*
  store %UntypedPtr* %this, %UntypedPtr** %this.addr
  %other.addr = alloca %UntypedPtr*
  store %UntypedPtr* %other, %UntypedPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr*, %UntypedPtr** %other.addr
  %2 = getelementptr inbounds %UntypedPtr, %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %UntypedPtr*, %UntypedPtr** %this.addr
  %5 = getelementptr inbounds %UntypedPtr, %UntypedPtr* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.66(%UntypedPtr* %this) #3 {
  %this.addr = alloca %UntypedPtr*
  store %UntypedPtr* %this, %UntypedPtr** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.67"(%UntypedPtr* %this, %UntypedPtr* %other) #3 {
  %this.addr = alloca %UntypedPtr*
  store %UntypedPtr* %this, %UntypedPtr** %this.addr
  %other.addr = alloca %UntypedPtr*
  store %UntypedPtr* %other, %UntypedPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr*, %UntypedPtr** %other.addr
  %2 = getelementptr inbounds %UntypedPtr, %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %UntypedPtr*, %UntypedPtr** %this.addr
  %5 = getelementptr inbounds %UntypedPtr, %UntypedPtr* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.68"(%UntypedPtr* %this, %UntypedPtr* %other) #3 {
  %this.addr = alloca %UntypedPtr*
  store %UntypedPtr* %this, %UntypedPtr** %this.addr
  %other.addr = alloca %UntypedPtr*
  store %UntypedPtr* %other, %UntypedPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %UntypedPtr*, %UntypedPtr** %this.addr
  %2 = getelementptr inbounds %UntypedPtr, %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %UntypedPtr*, %UntypedPtr** %other.addr
  %5 = getelementptr inbounds %UntypedPtr, %UntypedPtr* %4, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

declare i8* @calloc(i64, i64)

declare i8* @realloc(i8*, i64)

declare void @free(i8*)

declare i32 @strcmp(i8*, i8*)

declare void @system(i8*)

declare void @sleep(i32)

define internal void @__global_ctor() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.69(%EndLineHelperClass* %this) #3 {
  %this.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %this, %EndLineHelperClass** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

define internal void @__global_dtor() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.70(%EndLineHelperClass* %this) #3 {
  %this.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %this, %EndLineHelperClass** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

define internal void @__global_ctor.1() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.71(%FlushHelperClass* %this) #3 {
  %this.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %this, %FlushHelperClass** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

define internal void @__global_dtor.2() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.72(%FlushHelperClass* %this) #3 {
  %this.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %this, %FlushHelperClass** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.73(%EndLineHelperClass* %this, %EndLineHelperClass* %other) #3 {
  %this.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %this, %EndLineHelperClass** %this.addr
  %other.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %other, %EndLineHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.74"(%EndLineHelperClass* %this, %EndLineHelperClass* %other) #3 {
  %this.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %this, %EndLineHelperClass** %this.addr
  %other.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %other, %EndLineHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.75"(%EndLineHelperClass* %this, %EndLineHelperClass* %other) #3 {
  %this.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %this, %EndLineHelperClass** %this.addr
  %other.addr = alloca %EndLineHelperClass*
  store %EndLineHelperClass* %other, %EndLineHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.76(%FlushHelperClass* %this, %FlushHelperClass* %other) #3 {
  %this.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %this, %FlushHelperClass** %this.addr
  %other.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %other, %FlushHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.77"(%FlushHelperClass* %this, %FlushHelperClass* %other) #3 {
  %this.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %this, %FlushHelperClass** %this.addr
  %other.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %other, %FlushHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.78"(%FlushHelperClass* %this, %FlushHelperClass* %other) #3 {
  %this.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %this, %FlushHelperClass** %this.addr
  %other.addr = alloca %FlushHelperClass*
  store %FlushHelperClass* %other, %FlushHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.79(%StreamRefWrapperHelperClass* %this) #3 {
  %this.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %this, %StreamRefWrapperHelperClass** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StreamRefWrapperHelperClass*, %StreamRefWrapperHelperClass** %this.addr
  %2 = getelementptr inbounds %StreamRefWrapperHelperClass, %StreamRefWrapperHelperClass* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.80(%StreamRefWrapperHelperClass* %this, %StreamRefWrapperHelperClass* %other) #3 {
  %this.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %this, %StreamRefWrapperHelperClass** %this.addr
  %other.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %other, %StreamRefWrapperHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StreamRefWrapperHelperClass*, %StreamRefWrapperHelperClass** %other.addr
  %2 = getelementptr inbounds %StreamRefWrapperHelperClass, %StreamRefWrapperHelperClass* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %StreamRefWrapperHelperClass*, %StreamRefWrapperHelperClass** %this.addr
  %5 = getelementptr inbounds %StreamRefWrapperHelperClass, %StreamRefWrapperHelperClass* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.81(%StreamRefWrapperHelperClass* %this) #3 {
  %this.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %this, %StreamRefWrapperHelperClass** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.82"(%StreamRefWrapperHelperClass* %this, %StreamRefWrapperHelperClass* %other) #3 {
  %this.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %this, %StreamRefWrapperHelperClass** %this.addr
  %other.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %other, %StreamRefWrapperHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StreamRefWrapperHelperClass*, %StreamRefWrapperHelperClass** %other.addr
  %2 = getelementptr inbounds %StreamRefWrapperHelperClass, %StreamRefWrapperHelperClass* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %StreamRefWrapperHelperClass*, %StreamRefWrapperHelperClass** %this.addr
  %5 = getelementptr inbounds %StreamRefWrapperHelperClass, %StreamRefWrapperHelperClass* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.83"(%StreamRefWrapperHelperClass* %this, %StreamRefWrapperHelperClass* %other) #3 {
  %this.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %this, %StreamRefWrapperHelperClass** %this.addr
  %other.addr = alloca %StreamRefWrapperHelperClass*
  store %StreamRefWrapperHelperClass* %other, %StreamRefWrapperHelperClass** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StreamRefWrapperHelperClass*, %StreamRefWrapperHelperClass** %this.addr
  %2 = getelementptr inbounds %StreamRefWrapperHelperClass, %StreamRefWrapperHelperClass* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %StreamRefWrapperHelperClass*, %StreamRefWrapperHelperClass** %other.addr
  %5 = getelementptr inbounds %StreamRefWrapperHelperClass, %StreamRefWrapperHelperClass* %4, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

define internal void @__global_ctor.3() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.84(%ConsoleOutputStream* %this) #3 {
  %this.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %this, %ConsoleOutputStream** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

define internal void @__global_dtor.4() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.85(%ConsoleOutputStream* %this) #3 {
  %this.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %this, %ConsoleOutputStream** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.86(%ConsoleOutputStream* %this, %ConsoleOutputStream* %other) #3 {
  %this.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %this, %ConsoleOutputStream** %this.addr
  %other.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %other, %ConsoleOutputStream** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.87"(%ConsoleOutputStream* %this, %ConsoleOutputStream* %other) #3 {
  %this.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %this, %ConsoleOutputStream** %this.addr
  %other.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %other, %ConsoleOutputStream** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.88"(%ConsoleOutputStream* %this, %ConsoleOutputStream* %other) #3 {
  %this.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %this, %ConsoleOutputStream** %this.addr
  %other.addr = alloca %ConsoleOutputStream*
  store %ConsoleOutputStream* %other, %ConsoleOutputStream** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<"(%ConsoleOutputStream %this, i8 %x) #3 {
  %this.addr = alloca %ConsoleOutputStream
  store %ConsoleOutputStream %this, %ConsoleOutputStream* %this.addr
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %x.addr
  call void @writeChar(i8 %1)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<.89"(%ConsoleOutputStream %this, i1 %x) #3 {
  %this.addr = alloca %ConsoleOutputStream
  store %ConsoleOutputStream %this, %ConsoleOutputStream* %this.addr
  %x.addr = alloca i1
  store i1 %x, i1* %x.addr
  %tmp.StringRef = alloca %StringRef
  %tmp.StringRef1 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load i1, i1* %x.addr
  br i1 %1, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %2 = load %ConsoleOutputStream, %ConsoleOutputStream* %this.addr
  %3 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %4 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str, i32 0, i32 0), i8** %3
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str, i32 0, i32 4), i8** %4
  %5 = load %StringRef, %StringRef* %tmp.StringRef
  call void @"<<<.90"(%ConsoleOutputStream %2, %StringRef %5)
  br label %if_end

if_else:                                          ; preds = %if_block
  %6 = load %ConsoleOutputStream, %ConsoleOutputStream* %this.addr
  %7 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef1, i32 0, i32 0
  %8 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef1, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.5, i32 0, i32 0), i8** %7
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.5, i32 0, i32 5), i8** %8
  %9 = load %StringRef, %StringRef* %tmp.StringRef1
  call void @"<<<.90"(%ConsoleOutputStream %6, %StringRef %9)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<.90"(%ConsoleOutputStream %this, %StringRef %x) #3 {
  %this.addr = alloca %ConsoleOutputStream
  store %ConsoleOutputStream %this, %ConsoleOutputStream* %this.addr
  %x.addr = alloca %StringRef
  store %StringRef %x, %StringRef* %x.addr
  %"$rangeVar" = alloca %StringRef
  %c = alloca i8*
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef, %StringRef* %x.addr
  call void @ctor.56(%StringRef* %"$rangeVar", %StringRef %1)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %2 = call i1 @isEmpty(%StringRef* %"$rangeVar")
  %3 = xor i1 true, %2
  br i1 %3, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %4 = call i8* @front(%StringRef* %"$rangeVar")
  store i8* %4, i8** %c
  %5 = load i8*, i8** %c
  %6 = load i8, i8* %5
  call void @writeChar(i8 %6)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront(%StringRef* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @flush(%ConsoleOutputStream %this, %FlushHelperClass %x) #3 {
  %this.addr = alloca %ConsoleOutputStream
  store %ConsoleOutputStream %this, %ConsoleOutputStream* %this.addr
  %x.addr = alloca %FlushHelperClass
  store %FlushHelperClass %x, %FlushHelperClass* %x.addr
  br label %code

code:                                             ; preds = %0
  call void @flushOutput()
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.91(%MainParameters* %this) #3 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters*, %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %1, i32 0, i32 0
  call void @ctor.92(%CStrPtr* %2)
  %3 = load %MainParameters*, %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters, %MainParameters* %3, i32 0, i32 1
  call void @ctor.92(%CStrPtr* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.92(%CStrPtr* %this) #3 {
  %this.addr = alloca %CStrPtr*
  store %CStrPtr* %this, %CStrPtr** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr*, %CStrPtr** %this.addr
  %2 = getelementptr inbounds %CStrPtr, %CStrPtr* %1, i32 0, i32 0
  store %CStr* null, %CStr** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.93(%MainParameters* %this, %MainParameters* %other) #3 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %other.addr = alloca %MainParameters*
  store %MainParameters* %other, %MainParameters** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters*, %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters*, %MainParameters** %other.addr
  %4 = getelementptr inbounds %MainParameters, %MainParameters* %3, i32 0, i32 0
  call void @ctor.94(%CStrPtr* %2, %CStrPtr* %4)
  %5 = load %MainParameters*, %MainParameters** %this.addr
  %6 = getelementptr inbounds %MainParameters, %MainParameters* %5, i32 0, i32 1
  %7 = load %MainParameters*, %MainParameters** %other.addr
  %8 = getelementptr inbounds %MainParameters, %MainParameters* %7, i32 0, i32 1
  call void @ctor.94(%CStrPtr* %6, %CStrPtr* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.94(%CStrPtr* %this, %CStrPtr* %other) #3 {
  %this.addr = alloca %CStrPtr*
  store %CStrPtr* %this, %CStrPtr** %this.addr
  %other.addr = alloca %CStrPtr*
  store %CStrPtr* %other, %CStrPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr*, %CStrPtr** %other.addr
  %2 = getelementptr inbounds %CStrPtr, %CStrPtr* %1, i32 0, i32 0
  %3 = load %CStr*, %CStr** %2
  %4 = load %CStrPtr*, %CStrPtr** %this.addr
  %5 = getelementptr inbounds %CStrPtr, %CStrPtr* %4, i32 0, i32 0
  store %CStr* %3, %CStr** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.95(%MainParameters* %this) #3 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.96"(%MainParameters* %this, %MainParameters* %other) #3 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %other.addr = alloca %MainParameters*
  store %MainParameters* %other, %MainParameters** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters*, %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters*, %MainParameters** %other.addr
  %4 = getelementptr inbounds %MainParameters, %MainParameters* %3, i32 0, i32 0
  call void @"=.97"(%CStrPtr* %2, %CStrPtr* %4)
  %5 = load %MainParameters*, %MainParameters** %this.addr
  %6 = getelementptr inbounds %MainParameters, %MainParameters* %5, i32 0, i32 1
  %7 = load %MainParameters*, %MainParameters** %other.addr
  %8 = getelementptr inbounds %MainParameters, %MainParameters* %7, i32 0, i32 1
  call void @"=.97"(%CStrPtr* %6, %CStrPtr* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.97"(%CStrPtr* %this, %CStrPtr* %other) #3 {
  %this.addr = alloca %CStrPtr*
  store %CStrPtr* %this, %CStrPtr** %this.addr
  %other.addr = alloca %CStrPtr*
  store %CStrPtr* %other, %CStrPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr*, %CStrPtr** %other.addr
  %2 = getelementptr inbounds %CStrPtr, %CStrPtr* %1, i32 0, i32 0
  %3 = load %CStr*, %CStr** %2
  %4 = load %CStrPtr*, %CStrPtr** %this.addr
  %5 = getelementptr inbounds %CStrPtr, %CStrPtr* %4, i32 0, i32 0
  store %CStr* %3, %CStr** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.98"(%MainParameters* %this, %MainParameters* %other) #3 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %other.addr = alloca %MainParameters*
  store %MainParameters* %other, %MainParameters** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters*, %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters*, %MainParameters** %other.addr
  %4 = getelementptr inbounds %MainParameters, %MainParameters* %3, i32 0, i32 0
  %5 = call i1 @"==.99"(%CStrPtr* %2, %CStrPtr* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %MainParameters*, %MainParameters** %this.addr
  %7 = getelementptr inbounds %MainParameters, %MainParameters* %6, i32 0, i32 1
  %8 = load %MainParameters*, %MainParameters** %other.addr
  %9 = getelementptr inbounds %MainParameters, %MainParameters* %8, i32 0, i32 1
  %10 = call i1 @"==.99"(%CStrPtr* %7, %CStrPtr* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.99"(%CStrPtr* %this, %CStrPtr* %other) #3 {
  %this.addr = alloca %CStrPtr*
  store %CStrPtr* %this, %CStrPtr** %this.addr
  %other.addr = alloca %CStrPtr*
  store %CStrPtr* %other, %CStrPtr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr*, %CStrPtr** %this.addr
  %2 = getelementptr inbounds %CStrPtr, %CStrPtr* %1, i32 0, i32 0
  %3 = load %CStr*, %CStr** %2
  %4 = bitcast %CStr* %3 to i8*
  %5 = load %CStrPtr*, %CStrPtr** %other.addr
  %6 = getelementptr inbounds %CStrPtr, %CStrPtr* %5, i32 0, i32 0
  %7 = load %CStr*, %CStr** %6
  %8 = bitcast %CStr* %7 to i8*
  %9 = call i1 @implOpRefEQ(i8* %4, i8* %8)
  ret i1 %9
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.100(%MainParameters* %this, i32 %argc, i8** %argv) #4 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %argc.addr = alloca i32
  store i32 %argc, i32* %argc.addr
  %argv.addr = alloca i8**
  store i8** %argv, i8*** %argv.addr
  %"$tmpC" = alloca %CStrPtr
  %"$tmpC1" = alloca %CStrPtr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters*, %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %1, i32 0, i32 0
  call void @ctor.92(%CStrPtr* %2)
  %3 = load %MainParameters*, %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters, %MainParameters* %3, i32 0, i32 1
  call void @ctor.92(%CStrPtr* %4)
  %5 = load %MainParameters*, %MainParameters** %this.addr
  %6 = getelementptr inbounds %MainParameters, %MainParameters* %5, i32 0, i32 0
  %7 = load i8**, i8*** %argv.addr
  call void @fromArgvPtr(%CStrPtr* %"$tmpC", i8** %7)
  call void @"=.97"(%CStrPtr* %6, %CStrPtr* %"$tmpC")
  %8 = load %MainParameters*, %MainParameters** %this.addr
  %9 = getelementptr inbounds %MainParameters, %MainParameters* %8, i32 0, i32 1
  %10 = load %MainParameters*, %MainParameters** %this.addr
  %11 = getelementptr inbounds %MainParameters, %MainParameters* %10, i32 0, i32 0
  %12 = load %CStrPtr, %CStrPtr* %11
  %13 = load i32, i32* %argc.addr
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v
  %15 = load i64, i64* %tmp.v
  call void @"+.103"(%CStrPtr* %"$tmpC1", %CStrPtr %12, i64 %15)
  call void @"=.97"(%CStrPtr* %9, %CStrPtr* %"$tmpC1")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @fromArgvPtr(%CStrPtr* sret %_result, i8** %argv) #4 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %argv.addr = alloca i8**
  store i8** %argv, i8*** %argv.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr*, %CStrPtr** %_result.addr
  %2 = load i8**, i8*** %argv.addr
  %3 = bitcast i8** %2 to %CStr*
  call void @ctor.101(%CStrPtr* %1, %CStr* %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.101(%CStrPtr* %this, %CStr* %fptr) #3 {
  %this.addr = alloca %CStrPtr*
  store %CStrPtr* %this, %CStrPtr** %this.addr
  %fptr.addr = alloca %CStr*
  store %CStr* %fptr, %CStr** %fptr.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStr*, %CStr** %fptr.addr
  %2 = load %CStrPtr*, %CStrPtr** %this.addr
  %3 = getelementptr inbounds %CStrPtr, %CStrPtr* %2, i32 0, i32 0
  store %CStr* %1, %CStr** %3
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.102(%CStrPtr* %this) #3 {
  %this.addr = alloca %CStrPtr*
  store %CStrPtr* %this, %CStrPtr** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+.103"(%CStrPtr* sret %_result, %CStrPtr %p, i64 %n) #4 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr*, %CStrPtr** %_result.addr
  %2 = load %CStrPtr, %CStrPtr* %p.addr
  %3 = call i8* @toBytePtr(%CStrPtr %2)
  %4 = load i64, i64* %n.addr
  %5 = mul i64 %4, 8
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @fromBytePtr(%CStrPtr* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @fromBytePtr(%CStrPtr* sret %_result, i8* %p) #4 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %p.addr = alloca i8*
  store i8* %p, i8** %p.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr*, %CStrPtr** %_result.addr
  %2 = load i8*, i8** %p.addr
  %3 = bitcast i8* %2 to %CStr*
  call void @ctor.101(%CStrPtr* %1, %CStr* %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8* @toBytePtr(%CStrPtr %p) #4 {
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %CStrPtr, %CStrPtr* %p.addr, i32 0, i32 0
  %2 = load %CStr*, %CStr** %1
  %3 = bitcast %CStr* %2 to i8*
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.104(%MainParameters %this) #4 {
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters, %MainParameters* %this.addr
  %2 = call i64 @size.105(%MainParameters %1)
  store i64 0, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = icmp eq i64 %2, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal i64 @size.105(%MainParameters %this) #4 {
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %MainParameters, %MainParameters* %this.addr, i32 0, i32 1
  %2 = load %CStrPtr, %CStrPtr* %1
  %3 = getelementptr inbounds %MainParameters, %MainParameters* %this.addr, i32 0, i32 0
  %4 = load %CStrPtr, %CStrPtr* %3
  %5 = call i64 @-(%CStrPtr %2, %CStrPtr %4)
  ret i64 %5
}

; Function Attrs: inlinehint nounwind
define internal i64 @-(%CStrPtr %p, %CStrPtr %q) #4 {
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  %q.addr = alloca %CStrPtr
  store %CStrPtr %q, %CStrPtr* %q.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr, %CStrPtr* %p.addr
  %2 = call i8* @toBytePtr(%CStrPtr %1)
  %3 = load %CStrPtr, %CStrPtr* %q.addr
  %4 = call i8* @toBytePtr(%CStrPtr %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  store i64 %5, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  %7 = call i64 @_SizeType_opDiv(i64 %6, i64 8)
  ret i64 %7
}

; Function Attrs: inlinehint nounwind
define internal void @front.106(%StringRef* sret %_result, %MainParameters %this) #4 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %_result.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %this.addr, i32 0, i32 0
  %3 = load %CStrPtr, %CStrPtr* %2
  call void @toStringRef(%StringRef* %1, %CStrPtr %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toStringRef(%StringRef* sret %_result, %CStrPtr %p) #4 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %_result.addr
  %2 = getelementptr inbounds %CStrPtr, %CStrPtr* %p.addr, i32 0, i32 0
  %3 = load %CStr*, %CStr** %2
  %4 = getelementptr inbounds %CStr, %CStr* %3, i32 0, i32 0
  %5 = load i8*, i8** %4
  %6 = call %StringRef @_String_fromCString(i8* %5)
  call void @ctor.56(%StringRef* %1, %StringRef %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @back.107(%StringRef* sret %_result, %MainParameters %this) #4 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  %"$tmpC" = alloca %CStrPtr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %_result.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %this.addr, i32 0, i32 1
  %3 = load %CStrPtr, %CStrPtr* %2
  store i64 1, i64* %tmp.v
  %4 = load i64, i64* %tmp.v
  call void @-.108(%CStrPtr* %"$tmpC", %CStrPtr %3, i64 %4)
  %5 = load %CStrPtr, %CStrPtr* %"$tmpC"
  call void @toStringRef(%StringRef* %1, %CStrPtr %5)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @-.108(%CStrPtr* sret %_result, %CStrPtr %p, i64 %n) #4 {
  %_result.addr = alloca %CStrPtr*
  store %CStrPtr* %_result, %CStrPtr** %_result.addr
  %p.addr = alloca %CStrPtr
  store %CStrPtr %p, %CStrPtr* %p.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStrPtr*, %CStrPtr** %_result.addr
  %2 = load %CStrPtr, %CStrPtr* %p.addr
  %3 = call i8* @toBytePtr(%CStrPtr %2)
  %4 = load i64, i64* %n.addr
  %5 = mul i64 %4, 8
  %6 = call i8* @ptrSub(i8* %3, i64 %5)
  call void @fromBytePtr(%CStrPtr* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"().109"(%StringRef* sret %_result, %MainParameters %this) #4 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %_result.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %this.addr, i32 0, i32 0
  %3 = load %CStrPtr, %CStrPtr* %2
  call void @toStringRef(%StringRef* %1, %CStrPtr %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"().110"(%StringRef* sret %_result, %MainParameters %this, i64 %n) #4 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %MainParameters
  store %MainParameters %this, %MainParameters* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %_result.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %this.addr, i32 0, i32 0
  %3 = load %CStrPtr, %CStrPtr* %2
  %4 = load i64, i64* %n.addr
  call void @"+.103"(%CStrPtr* %"$tmpC", %CStrPtr %3, i64 %4)
  %5 = load %CStrPtr, %CStrPtr* %"$tmpC"
  call void @toStringRef(%StringRef* %1, %CStrPtr %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront.111(%MainParameters* %this) #3 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %"$tmpC" = alloca %CStrPtr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters*, %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters*, %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters, %MainParameters* %3, i32 0, i32 0
  %5 = load %CStrPtr, %CStrPtr* %4
  store i64 1, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  call void @"+.103"(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 %6)
  call void @"=.97"(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack.112(%MainParameters* %this) #3 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %"$tmpC" = alloca %CStrPtr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters*, %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %1, i32 0, i32 1
  %3 = load %MainParameters*, %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters, %MainParameters* %3, i32 0, i32 1
  %5 = load %CStrPtr, %CStrPtr* %4
  store i64 1, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  call void @-.108(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 %6)
  call void @"=.97"(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront.113(%MainParameters* %this, i64 %n) #3 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters*, %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %1, i32 0, i32 0
  %3 = load %MainParameters*, %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters, %MainParameters* %3, i32 0, i32 0
  %5 = load %CStrPtr, %CStrPtr* %4
  %6 = load i64, i64* %n.addr
  call void @"+.103"(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 %6)
  call void @"=.97"(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack.114(%MainParameters* %this, i64 %n) #3 {
  %this.addr = alloca %MainParameters*
  store %MainParameters* %this, %MainParameters** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %CStrPtr
  br label %code

code:                                             ; preds = %0
  %1 = load %MainParameters*, %MainParameters** %this.addr
  %2 = getelementptr inbounds %MainParameters, %MainParameters* %1, i32 0, i32 1
  %3 = load %MainParameters*, %MainParameters** %this.addr
  %4 = getelementptr inbounds %MainParameters, %MainParameters* %3, i32 0, i32 1
  %5 = load %CStrPtr, %CStrPtr* %4
  %6 = load i64, i64* %n.addr
  call void @-.108(%CStrPtr* %"$tmpC", %CStrPtr %5, i64 %6)
  call void @"=.97"(%CStrPtr* %2, %CStrPtr* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.115(%CStr* %this) #3 {
  %this.addr = alloca %CStr*
  store %CStr* %this, %CStr** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStr*, %CStr** %this.addr
  %2 = getelementptr inbounds %CStr, %CStr* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.116(%CStr* %this, %CStr* %other) #3 {
  %this.addr = alloca %CStr*
  store %CStr* %this, %CStr** %this.addr
  %other.addr = alloca %CStr*
  store %CStr* %other, %CStr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStr*, %CStr** %other.addr
  %2 = getelementptr inbounds %CStr, %CStr* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %CStr*, %CStr** %this.addr
  %5 = getelementptr inbounds %CStr, %CStr* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.117(%CStr* %this) #3 {
  %this.addr = alloca %CStr*
  store %CStr* %this, %CStr** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.118"(%CStr* %this, %CStr* %other) #3 {
  %this.addr = alloca %CStr*
  store %CStr* %this, %CStr** %this.addr
  %other.addr = alloca %CStr*
  store %CStr* %other, %CStr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStr*, %CStr** %other.addr
  %2 = getelementptr inbounds %CStr, %CStr* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %CStr*, %CStr** %this.addr
  %5 = getelementptr inbounds %CStr, %CStr* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.119"(%CStr* %this, %CStr* %other) #3 {
  %this.addr = alloca %CStr*
  store %CStr* %this, %CStr** %this.addr
  %other.addr = alloca %CStr*
  store %CStr* %other, %CStr** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %CStr*, %CStr** %this.addr
  %2 = getelementptr inbounds %CStr, %CStr* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %CStr*, %CStr** %other.addr
  %5 = getelementptr inbounds %CStr, %CStr* %4, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

define internal void @__global_ctor.6() {
  br label %code

code:                                             ; preds = %0
  call void @ctor.91(%MainParameters* @programArgs.3)
  ret void
}

define internal void @__global_dtor.7() {
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: nounwind
declare void @sprMain() #2

; Function Attrs: inlinehint nounwind
define internal i32 @asInt(%StringRef %src) #4 {
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %src.addr)
  %2 = call i32 @atoi(i8* %1)
  ret i32 %2
}

declare i32 @atoi(i8*)

; Function Attrs: inlinehint nounwind
define internal i64 @asLong(%StringRef %src) #4 {
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %src.addr)
  %2 = call i64 @atoll(i8* %1)
  ret i64 %2
}

declare i64 @atoll(i8*)

; Function Attrs: inlinehint nounwind
define internal double @asDouble(%StringRef %src) #4 {
  %src.addr = alloca %StringRef
  store %StringRef %src, %StringRef* %src.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %src.addr)
  %2 = call double @atof(i8* %1)
  ret double %2
}

declare double @atof(i8*)

; Function Attrs: alwaysinline nounwind
define internal void @ctor.134(%ExternalErrorReporter* %this) #3 {
  %this.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %this, %ExternalErrorReporter** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.135(%ExternalErrorReporter* %this, %ExternalErrorReporter* %other) #3 {
  %this.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %this, %ExternalErrorReporter** %this.addr
  %other.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %other, %ExternalErrorReporter** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.136(%ExternalErrorReporter* %this) #3 {
  %this.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %this, %ExternalErrorReporter** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.137"(%ExternalErrorReporter* %this, %ExternalErrorReporter* %other) #3 {
  %this.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %this, %ExternalErrorReporter** %this.addr
  %other.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %other, %ExternalErrorReporter** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.138"(%ExternalErrorReporter* %this, %ExternalErrorReporter* %other) #3 {
  %this.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %this, %ExternalErrorReporter** %this.addr
  %other.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %other, %ExternalErrorReporter** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: inlinehint nounwind
define internal void @reportError(%ExternalErrorReporter* %this, %Location %loc, %String* %msg) #4 {
  %this.addr = alloca %ExternalErrorReporter*
  store %ExternalErrorReporter* %this, %ExternalErrorReporter** %this.addr
  %loc.addr = alloca %Location
  store %Location %loc, %Location* %loc.addr
  %msg.addr = alloca %String*
  store %String* %msg, %String** %msg.addr
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %msg.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %1)
  %2 = load %StringRef, %StringRef* %"$tmpC"
  call void @comp_parser_reportError(%Location* %loc.addr, %StringRef %2)
  ret void
}

declare void @comp_parser_reportError(%Location*, %StringRef)

; Function Attrs: inlinehint nounwind
define internal void @asStringRef(%StringRef* sret %_result, %String* %this) #4 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %_result.addr
  %2 = load %String*, %String** %this.addr
  %3 = getelementptr inbounds %String, %String* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char]", %"RawPtr[Char]"* %3
  %5 = call i8* @bytePtr(%"RawPtr[Char]" %4)
  %6 = load %String*, %String** %this.addr
  %7 = getelementptr inbounds %String, %String* %6, i32 0, i32 1
  %8 = load %"RawPtr[Char]", %"RawPtr[Char]"* %7
  %9 = call i8* @bytePtr(%"RawPtr[Char]" %8)
  call void @ctor.57(%StringRef* %1, i8* %5, i8* %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8* @bytePtr(%"RawPtr[Char]" %this) #4 {
  %this.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %this, %"RawPtr[Char]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %this.addr, i32 0, i32 0
  %2 = load i8*, i8** %1
  ret i8* %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.139(%_CharSource* %this) #3 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource*, %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource, %_CharSource* %1, i32 0, i32 0
  store %FileRange* null, %FileRange** %2
  %3 = load %_CharSource*, %_CharSource** %this.addr
  %4 = getelementptr inbounds %_CharSource, %_CharSource* %3, i32 0, i32 1
  call void @ctor.54(%StringRef* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.140(%_CharSource* %this, %_CharSource* %other) #3 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  %other.addr = alloca %_CharSource*
  store %_CharSource* %other, %_CharSource** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource*, %_CharSource** %other.addr
  %2 = getelementptr inbounds %_CharSource, %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange*, %FileRange** %2
  %4 = load %_CharSource*, %_CharSource** %this.addr
  %5 = getelementptr inbounds %_CharSource, %_CharSource* %4, i32 0, i32 0
  store %FileRange* %3, %FileRange** %5
  %6 = load %_CharSource*, %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource, %_CharSource* %6, i32 0, i32 1
  %8 = load %_CharSource*, %_CharSource** %other.addr
  %9 = getelementptr inbounds %_CharSource, %_CharSource* %8, i32 0, i32 1
  %10 = load %StringRef, %StringRef* %9
  call void @ctor.56(%StringRef* %7, %StringRef %10)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.141(%_CharSource* %this) #3 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.142"(%_CharSource* %this, %_CharSource* %other) #3 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  %other.addr = alloca %_CharSource*
  store %_CharSource* %other, %_CharSource** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource*, %_CharSource** %other.addr
  %2 = getelementptr inbounds %_CharSource, %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange*, %FileRange** %2
  %4 = load %_CharSource*, %_CharSource** %this.addr
  %5 = getelementptr inbounds %_CharSource, %_CharSource* %4, i32 0, i32 0
  store %FileRange* %3, %FileRange** %5
  %6 = load %_CharSource*, %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource, %_CharSource* %6, i32 0, i32 1
  %8 = load %_CharSource*, %_CharSource** %other.addr
  %9 = getelementptr inbounds %_CharSource, %_CharSource* %8, i32 0, i32 1
  %10 = load %StringRef, %StringRef* %9
  %11 = call %StringRef* @"="(%StringRef* %7, %StringRef %10)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.143"(%_CharSource* %this, %_CharSource* %other) #3 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  %other.addr = alloca %_CharSource*
  store %_CharSource* %other, %_CharSource** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource*, %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource, %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange*, %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = load %_CharSource*, %_CharSource** %other.addr
  %6 = getelementptr inbounds %_CharSource, %_CharSource* %5, i32 0, i32 0
  %7 = load %FileRange*, %FileRange** %6
  %8 = bitcast %FileRange* %7 to i8*
  %9 = call i1 @implOpRefEQ(i8* %4, i8* %8)
  br i1 %9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %10 = load %_CharSource*, %_CharSource** %this.addr
  %11 = getelementptr inbounds %_CharSource, %_CharSource* %10, i32 0, i32 1
  %12 = load %_CharSource*, %_CharSource** %other.addr
  %13 = getelementptr inbounds %_CharSource, %_CharSource* %12, i32 0, i32 1
  %14 = load %StringRef, %StringRef* %13
  %15 = call i1 @"=="(%StringRef* %11, %StringRef %14)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %15, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.144(%_CharSource* %this, %FileRange* %fileRange, %StringRef %code) #4 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  %fileRange.addr = alloca %FileRange*
  store %FileRange* %fileRange, %FileRange** %fileRange.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  br label %code1

code1:                                            ; preds = %0
  %1 = load %_CharSource*, %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource, %_CharSource* %1, i32 0, i32 0
  store %FileRange* null, %FileRange** %2
  %3 = load %FileRange*, %FileRange** %fileRange.addr
  %4 = load %_CharSource*, %_CharSource** %this.addr
  %5 = getelementptr inbounds %_CharSource, %_CharSource* %4, i32 0, i32 0
  store %FileRange* %3, %FileRange** %5
  %6 = load %_CharSource*, %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource, %_CharSource* %6, i32 0, i32 1
  %8 = load %StringRef, %StringRef* %code.addr
  call void @ctor.56(%StringRef* %7, %StringRef %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.145(%_CharSource* %this) #4 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource*, %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource, %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange*, %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  br i1 %5, label %cond_alt1, label %cond_alt2

cond_alt1:                                        ; preds = %code
  %6 = load %_CharSource*, %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource, %_CharSource* %6, i32 0, i32 0
  %8 = load %FileRange*, %FileRange** %7
  %9 = call i1 @isEmpty.146(%FileRange* %8)
  br label %cond_end

cond_alt2:                                        ; preds = %code
  %10 = load %_CharSource*, %_CharSource** %this.addr
  %11 = getelementptr inbounds %_CharSource, %_CharSource* %10, i32 0, i32 1
  %12 = call i1 @isEmpty(%StringRef* %11)
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi i1 [ %9, %cond_alt1 ], [ %12, %cond_alt2 ]
  ret i1 %cond
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.146(%FileRange* %s) #4 {
  %s.addr = alloca %FileRange*
  store %FileRange* %s, %FileRange** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange*, %FileRange** %s.addr
  %2 = getelementptr inbounds %FileRange, %FileRange* %1, i32 0, i32 1
  %3 = load i1, i1* %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i8 @front.147(%_CharSource* %this) #4 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %_CharSource*, %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource, %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange*, %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  br i1 %5, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %6 = load %_CharSource*, %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource, %_CharSource* %6, i32 0, i32 0
  %8 = load %FileRange*, %FileRange** %7
  %9 = call i8 @front.148(%FileRange* %8)
  ret i8 %9

if_else:                                          ; preds = %if_block
  %10 = load %_CharSource*, %_CharSource** %this.addr
  %11 = getelementptr inbounds %_CharSource, %_CharSource* %10, i32 0, i32 1
  %12 = call i8* @front(%StringRef* %11)
  %13 = load i8, i8* %12
  ret i8 %13

if_end:                                           ; preds = %dumy_block1, %dumy_block
  unreachable

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block1:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i8 @front.148(%FileRange* %s) #4 {
  %s.addr = alloca %FileRange*
  store %FileRange* %s, %FileRange** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange*, %FileRange** %s.addr
  %2 = getelementptr inbounds %FileRange, %FileRange* %1, i32 0, i32 2
  %3 = load i8, i8* %2
  ret i8 %3
}

; Function Attrs: inlinehint nounwind
define internal void @popFront.149(%_CharSource* %this) #4 {
  %this.addr = alloca %_CharSource*
  store %_CharSource* %this, %_CharSource** %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %_CharSource*, %_CharSource** %this.addr
  %2 = getelementptr inbounds %_CharSource, %_CharSource* %1, i32 0, i32 0
  %3 = load %FileRange*, %FileRange** %2
  %4 = bitcast %FileRange* %3 to i8*
  %5 = call i1 @implOpRefNE(i8* %4, i8* null)
  br i1 %5, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %6 = load %_CharSource*, %_CharSource** %this.addr
  %7 = getelementptr inbounds %_CharSource, %_CharSource* %6, i32 0, i32 0
  %8 = load %FileRange*, %FileRange** %7
  call void @popFront.150(%FileRange* %8)
  br label %if_end

if_else:                                          ; preds = %if_block
  %9 = load %_CharSource*, %_CharSource** %this.addr
  %10 = getelementptr inbounds %_CharSource, %_CharSource* %9, i32 0, i32 1
  call void @popFront(%StringRef* %10)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront.150(%FileRange* %s) #4 {
  %s.addr = alloca %FileRange*
  store %FileRange* %s, %FileRange** %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange*, %FileRange** %s.addr
  %2 = getelementptr inbounds %FileRange, %FileRange* %1, i32 0, i32 0
  %3 = load %File*, %File** %2
  %4 = call i8 @readChar(%File* %3)
  %5 = load %FileRange*, %FileRange** %s.addr
  %6 = getelementptr inbounds %FileRange, %FileRange* %5, i32 0, i32 2
  store i8 %4, i8* %6
  br label %if_block

if_block:                                         ; preds = %code
  %7 = load %FileRange*, %FileRange** %s.addr
  %8 = getelementptr inbounds %FileRange, %FileRange* %7, i32 0, i32 0
  %9 = load %File*, %File** %8
  %10 = call i1 @isEof(%File* %9)
  br i1 %10, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %11 = load %FileRange*, %FileRange** %s.addr
  %12 = getelementptr inbounds %FileRange, %FileRange* %11, i32 0, i32 1
  store i1 true, i1* %12
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8 @readChar(%File* %this) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %tmp.v = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = call i32 @fgetc(i8* %3)
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* %tmp.v
  %6 = load i8, i8* %tmp.v
  ret i8 %6
}

declare i32 @fgetc(i8*)

; Function Attrs: inlinehint nounwind
define internal i1 @isEof(%File* %this) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = call i32 @feof(i8* %3)
  %5 = icmp ne i32 0, %4
  ret i1 %5
}

declare i32 @feof(i8*)

; Function Attrs: alwaysinline nounwind
define internal void @ctor.151(%ParserContext* %this) #3 {
  %this.addr = alloca %ParserContext*
  store %ParserContext* %this, %ParserContext** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext*, %ParserContext** %this.addr
  %2 = getelementptr inbounds %ParserContext, %ParserContext* %1, i32 0, i32 0
  call void @ctor.152(%File* %2)
  %3 = load %ParserContext*, %ParserContext** %this.addr
  %4 = getelementptr inbounds %ParserContext, %ParserContext* %3, i32 0, i32 1
  call void @ctor.153(%FileRange* %4)
  %5 = load %ParserContext*, %ParserContext** %this.addr
  %6 = getelementptr inbounds %ParserContext, %ParserContext* %5, i32 0, i32 2
  call void @ctor.139(%_CharSource* %6)
  %7 = load %ParserContext*, %ParserContext** %this.addr
  %8 = getelementptr inbounds %ParserContext, %ParserContext* %7, i32 0, i32 3
  call void @ctor.154(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8)
  %9 = load %ParserContext*, %ParserContext** %this.addr
  %10 = getelementptr inbounds %ParserContext, %ParserContext* %9, i32 0, i32 4
  call void @ctor.165(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %10)
  %11 = load %ParserContext*, %ParserContext** %this.addr
  %12 = getelementptr inbounds %ParserContext, %ParserContext* %11, i32 0, i32 5
  call void @ctor.171(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.152(%File* %this) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %File*, %File** %this.addr
  %4 = getelementptr inbounds %File, %File* %3, i32 0, i32 0
  store i8* null, i8** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.153(%FileRange* %this) #3 {
  %this.addr = alloca %FileRange*
  store %FileRange* %this, %FileRange** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange*, %FileRange** %this.addr
  %2 = getelementptr inbounds %FileRange, %FileRange* %1, i32 0, i32 0
  store %File* null, %File** %2
  %3 = load %FileRange*, %FileRange** %this.addr
  %4 = getelementptr inbounds %FileRange, %FileRange* %3, i32 0, i32 1
  store i1 false, i1* %4
  %5 = load %FileRange*, %FileRange** %this.addr
  %6 = getelementptr inbounds %FileRange, %FileRange* %5, i32 0, i32 2
  store i8 0, i8* %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.154(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @ctor.155(%Location* %2)
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  call void @ctor.158(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 2
  call void @ctor.162(%Token* %6)
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 3
  store i1 false, i1* %8
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.155(%Location* %this) #3 {
  %this.addr = alloca %Location*
  store %Location* %this, %Location** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %this.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 0
  call void @ctor.156(%SourceCode* %2)
  %3 = load %Location*, %Location** %this.addr
  %4 = getelementptr inbounds %Location, %Location* %3, i32 0, i32 1
  call void @ctor.157(%LineCol* %4)
  %5 = load %Location*, %Location** %this.addr
  %6 = getelementptr inbounds %Location, %Location* %5, i32 0, i32 2
  call void @ctor.157(%LineCol* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.156(%SourceCode* %this) #3 {
  %this.addr = alloca %SourceCode*
  store %SourceCode* %this, %SourceCode** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode*, %SourceCode** %this.addr
  %2 = getelementptr inbounds %SourceCode, %SourceCode* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.157(%LineCol* %this) #3 {
  %this.addr = alloca %LineCol*
  store %LineCol* %this, %LineCol** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol*, %LineCol** %this.addr
  %2 = getelementptr inbounds %LineCol, %LineCol* %1, i32 0, i32 0
  store i32 0, i32* %2
  %3 = load %LineCol*, %LineCol** %this.addr
  %4 = getelementptr inbounds %LineCol, %LineCol* %3, i32 0, i32 1
  store i32 0, i32* %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.158(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this) #3 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  call void @ctor.159(%"RangeWithLookahead[_CharSource]"* %2)
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %4 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3, i32 0, i32 1
  store %Location* null, %Location** %4
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.159(%"RangeWithLookahead[_CharSource]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  call void @ctor.139(%_CharSource* %2)
  %3 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 1
  call void @ctor.160(%"Vector[Char]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.160(%"Vector[Char]"* %this) #3 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  call void @ctor.161(%"RawPtr[Char]"* %2)
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %3, i32 0, i32 1
  call void @ctor.161(%"RawPtr[Char]"* %4)
  %5 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %5, i32 0, i32 2
  call void @ctor.161(%"RawPtr[Char]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.161(%"RawPtr[Char]"* %this) #3 {
  %this.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %this, %"RawPtr[Char]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.162(%Token* %this) #3 {
  %this.addr = alloca %Token*
  store %Token* %this, %Token** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token*, %Token** %this.addr
  %2 = getelementptr inbounds %Token, %Token* %1, i32 0, i32 0
  call void @ctor.155(%Location* %2)
  %3 = load %Token*, %Token** %this.addr
  %4 = getelementptr inbounds %Token, %Token* %3, i32 0, i32 1
  call void @ctor.163(%TokenType* %4)
  %5 = load %Token*, %Token** %this.addr
  %6 = getelementptr inbounds %Token, %Token* %5, i32 0, i32 2
  call void @ctor.164(%String* %6)
  %7 = load %Token*, %Token** %this.addr
  %8 = getelementptr inbounds %Token, %Token* %7, i32 0, i32 3
  store i64 0, i64* %8
  %9 = load %Token*, %Token** %this.addr
  %10 = getelementptr inbounds %Token, %Token* %9, i32 0, i32 4
  store double 0.000000e+00, double* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.163(%TokenType* %this) #3 {
  %this.addr = alloca %TokenType*
  store %TokenType* %this, %TokenType** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType*, %TokenType** %this.addr
  %2 = getelementptr inbounds %TokenType, %TokenType* %1, i32 0, i32 0
  store i32 0, i32* %2
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.164(%String* %this) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  call void @ctor.161(%"RawPtr[Char]"* %2)
  %3 = load %String*, %String** %this.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 1
  call void @ctor.161(%"RawPtr[Char]"* %4)
  %5 = load %String*, %String** %this.addr
  %6 = getelementptr inbounds %String, %String* %5, i32 0, i32 2
  call void @ctor.161(%"RawPtr[Char]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.165(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @ctor.166(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2)
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 2
  call void @ctor.169(%"Vector[UInt]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 3
  call void @ctor.160(%"Vector[Char]"* %6)
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 4
  call void @ctor.163(%TokenType* %8)
  %9 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 5
  store i32 0, i32* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.166(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor.154(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 1
  call void @ctor.167(%"Vector[Token]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.167(%"Vector[Token]"* %this) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor.168(%"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %3, i32 0, i32 1
  call void @ctor.168(%"RawPtr[Token]"* %4)
  %5 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %5, i32 0, i32 2
  call void @ctor.168(%"RawPtr[Token]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.168(%"RawPtr[Token]"* %this) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %1, i32 0, i32 0
  store %Token* null, %Token** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.169(%"Vector[UInt]"* %this) #3 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 0
  call void @ctor.170(%"RawPtr[UInt]"* %2)
  %3 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %3, i32 0, i32 1
  call void @ctor.170(%"RawPtr[UInt]"* %4)
  %5 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %6 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %5, i32 0, i32 2
  call void @ctor.170(%"RawPtr[UInt]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.170(%"RawPtr[UInt]"* %this) #3 {
  %this.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %this, %"RawPtr[UInt]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %1, i32 0, i32 0
  store i32* null, i32** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.171(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @ctor.172(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 1
  call void @ctor.162(%Token* %4)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 2
  store i1 false, i1* %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.172(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor.165(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 1
  call void @ctor.167(%"Vector[Token]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.173(%ParserContext* %this, %ParserContext* %other) #3 {
  %this.addr = alloca %ParserContext*
  store %ParserContext* %this, %ParserContext** %this.addr
  %other.addr = alloca %ParserContext*
  store %ParserContext* %other, %ParserContext** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext*, %ParserContext** %this.addr
  %2 = getelementptr inbounds %ParserContext, %ParserContext* %1, i32 0, i32 0
  %3 = load %ParserContext*, %ParserContext** %other.addr
  %4 = getelementptr inbounds %ParserContext, %ParserContext* %3, i32 0, i32 0
  call void @ctor.174(%File* %2, %File* %4)
  %5 = load %ParserContext*, %ParserContext** %this.addr
  %6 = getelementptr inbounds %ParserContext, %ParserContext* %5, i32 0, i32 1
  %7 = load %ParserContext*, %ParserContext** %other.addr
  %8 = getelementptr inbounds %ParserContext, %ParserContext* %7, i32 0, i32 1
  call void @ctor.175(%FileRange* %6, %FileRange* %8)
  %9 = load %ParserContext*, %ParserContext** %this.addr
  %10 = getelementptr inbounds %ParserContext, %ParserContext* %9, i32 0, i32 2
  %11 = load %ParserContext*, %ParserContext** %other.addr
  %12 = getelementptr inbounds %ParserContext, %ParserContext* %11, i32 0, i32 2
  call void @ctor.140(%_CharSource* %10, %_CharSource* %12)
  %13 = load %ParserContext*, %ParserContext** %this.addr
  %14 = getelementptr inbounds %ParserContext, %ParserContext* %13, i32 0, i32 3
  %15 = load %ParserContext*, %ParserContext** %other.addr
  %16 = getelementptr inbounds %ParserContext, %ParserContext* %15, i32 0, i32 3
  call void @ctor.176(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16)
  %17 = load %ParserContext*, %ParserContext** %this.addr
  %18 = getelementptr inbounds %ParserContext, %ParserContext* %17, i32 0, i32 4
  %19 = load %ParserContext*, %ParserContext** %other.addr
  %20 = getelementptr inbounds %ParserContext, %ParserContext* %19, i32 0, i32 4
  call void @ctor.196(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %20)
  %21 = load %ParserContext*, %ParserContext** %this.addr
  %22 = getelementptr inbounds %ParserContext, %ParserContext* %21, i32 0, i32 5
  %23 = load %ParserContext*, %ParserContext** %other.addr
  %24 = getelementptr inbounds %ParserContext, %ParserContext* %23, i32 0, i32 5
  call void @ctor.224(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %22, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.174(%File* %this, %File* %other) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %other.addr = alloca %File*
  store %File* %other, %File** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load %File*, %File** %other.addr
  %4 = getelementptr inbounds %File, %File* %3, i32 0, i32 0
  %5 = load i8*, i8** %4
  %6 = load %File*, %File** %this.addr
  %7 = getelementptr inbounds %File, %File* %6, i32 0, i32 0
  store i8* %5, i8** %7
  %8 = load %File*, %File** %other.addr
  %9 = getelementptr inbounds %File, %File* %8, i32 0, i32 0
  store i8* null, i8** %9
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.175(%FileRange* %this, %FileRange* %other) #3 {
  %this.addr = alloca %FileRange*
  store %FileRange* %this, %FileRange** %this.addr
  %other.addr = alloca %FileRange*
  store %FileRange* %other, %FileRange** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange*, %FileRange** %other.addr
  %2 = getelementptr inbounds %FileRange, %FileRange* %1, i32 0, i32 0
  %3 = load %File*, %File** %2
  %4 = load %FileRange*, %FileRange** %this.addr
  %5 = getelementptr inbounds %FileRange, %FileRange* %4, i32 0, i32 0
  store %File* %3, %File** %5
  %6 = load %FileRange*, %FileRange** %other.addr
  %7 = getelementptr inbounds %FileRange, %FileRange* %6, i32 0, i32 1
  %8 = load i1, i1* %7
  %9 = load %FileRange*, %FileRange** %this.addr
  %10 = getelementptr inbounds %FileRange, %FileRange* %9, i32 0, i32 1
  store i1 %8, i1* %10
  %11 = load %FileRange*, %FileRange** %other.addr
  %12 = getelementptr inbounds %FileRange, %FileRange* %11, i32 0, i32 2
  %13 = load i8, i8* %12
  %14 = load %FileRange*, %FileRange** %this.addr
  %15 = getelementptr inbounds %FileRange, %FileRange* %14, i32 0, i32 2
  store i8 %13, i8* %15
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.176(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @ctor.177(%Location* %2, %Location* %4)
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @ctor.180(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %6, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 2
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 2
  call void @ctor.190(%Token* %10, %Token* %12)
  %13 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %14 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %13, i32 0, i32 3
  %15 = load i1, i1* %14
  %16 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %17 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16, i32 0, i32 3
  store i1 %15, i1* %17
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.177(%Location* %this, %Location* %other) #3 {
  %this.addr = alloca %Location*
  store %Location* %this, %Location** %this.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %this.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 0
  %3 = load %Location*, %Location** %other.addr
  %4 = getelementptr inbounds %Location, %Location* %3, i32 0, i32 0
  call void @ctor.178(%SourceCode* %2, %SourceCode* %4)
  %5 = load %Location*, %Location** %this.addr
  %6 = getelementptr inbounds %Location, %Location* %5, i32 0, i32 1
  %7 = load %Location*, %Location** %other.addr
  %8 = getelementptr inbounds %Location, %Location* %7, i32 0, i32 1
  call void @ctor.179(%LineCol* %6, %LineCol* %8)
  %9 = load %Location*, %Location** %this.addr
  %10 = getelementptr inbounds %Location, %Location* %9, i32 0, i32 2
  %11 = load %Location*, %Location** %other.addr
  %12 = getelementptr inbounds %Location, %Location* %11, i32 0, i32 2
  call void @ctor.179(%LineCol* %10, %LineCol* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.178(%SourceCode* %this, %SourceCode* %other) #3 {
  %this.addr = alloca %SourceCode*
  store %SourceCode* %this, %SourceCode** %this.addr
  %other.addr = alloca %SourceCode*
  store %SourceCode* %other, %SourceCode** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode*, %SourceCode** %other.addr
  %2 = getelementptr inbounds %SourceCode, %SourceCode* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %SourceCode*, %SourceCode** %this.addr
  %5 = getelementptr inbounds %SourceCode, %SourceCode* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.179(%LineCol* %this, %LineCol* %other) #3 {
  %this.addr = alloca %LineCol*
  store %LineCol* %this, %LineCol** %this.addr
  %other.addr = alloca %LineCol*
  store %LineCol* %other, %LineCol** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol*, %LineCol** %other.addr
  %2 = getelementptr inbounds %LineCol, %LineCol* %1, i32 0, i32 0
  %3 = load i32, i32* %2
  %4 = load %LineCol*, %LineCol** %this.addr
  %5 = getelementptr inbounds %LineCol, %LineCol* %4, i32 0, i32 0
  store i32 %3, i32* %5
  %6 = load %LineCol*, %LineCol** %other.addr
  %7 = getelementptr inbounds %LineCol, %LineCol* %6, i32 0, i32 1
  %8 = load i32, i32* %7
  %9 = load %LineCol*, %LineCol** %this.addr
  %10 = getelementptr inbounds %LineCol, %LineCol* %9, i32 0, i32 1
  store i32 %8, i32* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.180(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other) #3 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %other.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %4 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3, i32 0, i32 0
  call void @ctor.181(%"RangeWithLookahead[_CharSource]"* %2, %"RangeWithLookahead[_CharSource]"* %4)
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %6 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, i32 0, i32 1
  %7 = load %Location*, %Location** %6
  %8 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %9 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8, i32 0, i32 1
  store %Location* %7, %Location** %9
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.181(%"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"* %other) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %other, %"RangeWithLookahead[_CharSource]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  call void @ctor.140(%_CharSource* %2, %_CharSource* %4)
  %5 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %7, i32 0, i32 1
  call void @ctor.182(%"Vector[Char]"* %6, %"Vector[Char]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.182(%"Vector[Char]"* %this, %"Vector[Char]"* %other) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %other.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %other, %"Vector[Char]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char]"
  %"$tmpC1" = alloca %"RawPtr[Char]"
  %dst = alloca %"RawPtr[Char]"
  %src = alloca %"RawPtr[Char]"
  %"$tmpC2" = alloca %"RawPtr[Char]"
  %"$tmpC3" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  call void @ctor.161(%"RawPtr[Char]"* %2)
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %3, i32 0, i32 1
  call void @ctor.161(%"RawPtr[Char]"* %4)
  %5 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %5, i32 0, i32 2
  call void @ctor.161(%"RawPtr[Char]"* %6)
  %7 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %8 = call i64 @size.183(%"Vector[Char]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %9, i32 0, i32 0
  %11 = load i64, i64* %size
  call void @allocRawPtr(%"RawPtr[Char]"* %"$tmpC", i64 %11)
  call void @"=.184"(%"RawPtr[Char]"* %10, %"RawPtr[Char]"* %"$tmpC")
  %12 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %13 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %12, i32 0, i32 1
  %14 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %15 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %14, i32 0, i32 0
  %16 = load %"RawPtr[Char]", %"RawPtr[Char]"* %15
  %17 = load i64, i64* %size
  call void @advance(%"RawPtr[Char]"* %"$tmpC1", %"RawPtr[Char]" %16, i64 %17)
  call void @"=.184"(%"RawPtr[Char]"* %13, %"RawPtr[Char]"* %"$tmpC1")
  %18 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %19 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %18, i32 0, i32 2
  %20 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %21 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %20, i32 0, i32 1
  call void @"=.184"(%"RawPtr[Char]"* %19, %"RawPtr[Char]"* %21)
  %22 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %23 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %22, i32 0, i32 0
  call void @ctor.187(%"RawPtr[Char]"* %dst, %"RawPtr[Char]"* %23)
  %24 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %25 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %24, i32 0, i32 0
  call void @ctor.187(%"RawPtr[Char]"* %src, %"RawPtr[Char]"* %25)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %26 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %27 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %26, i32 0, i32 1
  %28 = call i1 @"==.188"(%"RawPtr[Char]"* %dst, %"RawPtr[Char]"* %27)
  %29 = xor i1 true, %28
  br i1 %29, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %30 = load %"RawPtr[Char]", %"RawPtr[Char]"* %src
  %31 = call i8* @value(%"RawPtr[Char]" %30)
  %32 = load i8, i8* %31
  %33 = load %"RawPtr[Char]", %"RawPtr[Char]"* %dst
  %34 = call i8* @value(%"RawPtr[Char]" %33)
  store i8 %32, i8* %34
  %35 = load %"RawPtr[Char]", %"RawPtr[Char]"* %dst
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC2", %"RawPtr[Char]" %35)
  call void @"=.184"(%"RawPtr[Char]"* %dst, %"RawPtr[Char]"* %"$tmpC2")
  %36 = load %"RawPtr[Char]", %"RawPtr[Char]"* %src
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC3", %"RawPtr[Char]" %36)
  call void @"=.184"(%"RawPtr[Char]"* %src, %"RawPtr[Char]"* %"$tmpC3")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @size.183(%"Vector[Char]"* %this) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  %4 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %5 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[Char]", %"RawPtr[Char]"* %5
  %7 = call i64 @diff(%"RawPtr[Char]" %3, %"RawPtr[Char]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i64 @diff(%"RawPtr[Char]" %this, %"RawPtr[Char]" %other) #4 {
  %this.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %this, %"RawPtr[Char]"* %this.addr
  %other.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %other, %"RawPtr[Char]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]", %"RawPtr[Char]"* %this.addr
  %2 = call i8* @bytePtr(%"RawPtr[Char]" %1)
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %other.addr
  %4 = call i8* @bytePtr(%"RawPtr[Char]" %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  store i64 1, i64* %tmp.v1
  %6 = load i64, i64* %tmp.v1
  %7 = sdiv i64 %5, %6
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.184"(%"RawPtr[Char]"* %this, %"RawPtr[Char]"* %other) #3 {
  %this.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %this, %"RawPtr[Char]"** %this.addr
  %other.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %other, %"RawPtr[Char]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @allocRawPtr(%"RawPtr[Char]"* sret %_result, i64 %num) #4 {
  %_result.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %_result, %"RawPtr[Char]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %_result.addr
  %2 = load i64, i64* %num.addr
  %3 = mul i64 %2, 1
  %4 = call i8* @malloc(i64 %3)
  call void @ctor.185(%"RawPtr[Char]"* %1, i8* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.185(%"RawPtr[Char]"* %this, i8* %f_ptr) #3 {
  %this.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %this, %"RawPtr[Char]"** %this.addr
  %f_ptr.addr = alloca i8*
  store i8* %f_ptr, i8** %f_ptr.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %f_ptr.addr
  %2 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %3 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %2, i32 0, i32 0
  store i8* %1, i8** %3
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance(%"RawPtr[Char]"* sret %_result, %"RawPtr[Char]" %this, i64 %n) #4 {
  %_result.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %_result, %"RawPtr[Char]"** %_result.addr
  %this.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %this, %"RawPtr[Char]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %_result.addr
  %2 = load %"RawPtr[Char]", %"RawPtr[Char]"* %this.addr
  %3 = call i8* @bytePtr(%"RawPtr[Char]" %2)
  %4 = load i64, i64* %n.addr
  %5 = mul i64 %4, 1
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @ctor.186(%"RawPtr[Char]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.186(%"RawPtr[Char]"* %this, i8* %byteRef) #4 {
  %this.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %this, %"RawPtr[Char]"** %this.addr
  %byteRef.addr = alloca i8*
  store i8* %byteRef, i8** %byteRef.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load i8*, i8** %byteRef.addr
  %4 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.187(%"RawPtr[Char]"* %this, %"RawPtr[Char]"* %other) #3 {
  %this.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %this, %"RawPtr[Char]"** %this.addr
  %other.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %other, %"RawPtr[Char]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.188"(%"RawPtr[Char]"* %this, %"RawPtr[Char]"* %other) #3 {
  %this.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %this, %"RawPtr[Char]"** %this.addr
  %other.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %other, %"RawPtr[Char]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %other.addr
  %5 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %4, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i8* @value(%"RawPtr[Char]" %this) #4 {
  %this.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %this, %"RawPtr[Char]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %this.addr, i32 0, i32 0
  %2 = load i8*, i8** %1
  ret i8* %2
}

; Function Attrs: inlinehint nounwind
define internal void @advance.189(%"RawPtr[Char]"* sret %_result, %"RawPtr[Char]" %this) #4 {
  %_result.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %_result, %"RawPtr[Char]"** %_result.addr
  %this.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %this, %"RawPtr[Char]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %_result.addr
  %2 = load %"RawPtr[Char]", %"RawPtr[Char]"* %this.addr
  %3 = call i8* @bytePtr(%"RawPtr[Char]" %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 1)
  call void @ctor.186(%"RawPtr[Char]"* %1, i8* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.190(%Token* %this, %Token* %other) #3 {
  %this.addr = alloca %Token*
  store %Token* %this, %Token** %this.addr
  %other.addr = alloca %Token*
  store %Token* %other, %Token** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token*, %Token** %this.addr
  %2 = getelementptr inbounds %Token, %Token* %1, i32 0, i32 0
  %3 = load %Token*, %Token** %other.addr
  %4 = getelementptr inbounds %Token, %Token* %3, i32 0, i32 0
  call void @ctor.177(%Location* %2, %Location* %4)
  %5 = load %Token*, %Token** %this.addr
  %6 = getelementptr inbounds %Token, %Token* %5, i32 0, i32 1
  %7 = load %Token*, %Token** %other.addr
  %8 = getelementptr inbounds %Token, %Token* %7, i32 0, i32 1
  call void @ctor.191(%TokenType* %6, %TokenType* %8)
  %9 = load %Token*, %Token** %this.addr
  %10 = getelementptr inbounds %Token, %Token* %9, i32 0, i32 2
  %11 = load %Token*, %Token** %other.addr
  %12 = getelementptr inbounds %Token, %Token* %11, i32 0, i32 2
  call void @ctor.192(%String* %10, %String* %12)
  %13 = load %Token*, %Token** %other.addr
  %14 = getelementptr inbounds %Token, %Token* %13, i32 0, i32 3
  %15 = load i64, i64* %14
  %16 = load %Token*, %Token** %this.addr
  %17 = getelementptr inbounds %Token, %Token* %16, i32 0, i32 3
  store i64 %15, i64* %17
  %18 = load %Token*, %Token** %other.addr
  %19 = getelementptr inbounds %Token, %Token* %18, i32 0, i32 4
  %20 = load double, double* %19
  %21 = load %Token*, %Token** %this.addr
  %22 = getelementptr inbounds %Token, %Token* %21, i32 0, i32 4
  store double %20, double* %22
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.191(%TokenType* %this, %TokenType* %other) #3 {
  %this.addr = alloca %TokenType*
  store %TokenType* %this, %TokenType** %this.addr
  %other.addr = alloca %TokenType*
  store %TokenType* %other, %TokenType** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType*, %TokenType** %other.addr
  %2 = getelementptr inbounds %TokenType, %TokenType* %1, i32 0, i32 0
  %3 = load i32, i32* %2
  %4 = load %TokenType*, %TokenType** %this.addr
  %5 = getelementptr inbounds %TokenType, %TokenType* %4, i32 0, i32 0
  store i32 %3, i32* %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.192(%String* %this, %String* %other) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  %size = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %other.addr
  %2 = call i64 @size.193(%String* %1)
  store i64 %2, i64* %size
  %3 = load %String*, %String** %this.addr
  %4 = load i64, i64* %size
  call void @ctor.194(%String* %3, i64 %4)
  %5 = load %String*, %String** %this.addr
  %6 = getelementptr inbounds %String, %String* %5, i32 0, i32 0
  %7 = load %"RawPtr[Char]", %"RawPtr[Char]"* %6
  %8 = call i8* @bytePtr(%"RawPtr[Char]" %7)
  %9 = load %String*, %String** %other.addr
  %10 = getelementptr inbounds %String, %String* %9, i32 0, i32 0
  %11 = load %"RawPtr[Char]", %"RawPtr[Char]"* %10
  %12 = call i8* @bytePtr(%"RawPtr[Char]" %11)
  %13 = load i64, i64* %size
  call void @_spr_memcpy(i8* %8, i8* %12, i64 %13)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @size.193(%String* %this) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 1
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  %4 = load %String*, %String** %this.addr
  %5 = getelementptr inbounds %String, %String* %4, i32 0, i32 0
  %6 = load %"RawPtr[Char]", %"RawPtr[Char]"* %5
  %7 = call i64 @diff(%"RawPtr[Char]" %3, %"RawPtr[Char]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.194(%String* %this, i64 %size) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %size.addr = alloca i64
  store i64 %size, i64* %size.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  %"$tmpC1" = alloca %"RawPtr[Char]"
  %tmp.v2 = alloca i64
  %tmp.v3 = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  %3 = load i64, i64* %size.addr
  store i64 1, i64* %tmp.v
  %4 = load i64, i64* %tmp.v
  %5 = add i64 %3, %4
  call void @allocRawPtr(%"RawPtr[Char]"* %"$tmpC", i64 %5)
  call void @ctor.187(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %"$tmpC")
  %6 = load %String*, %String** %this.addr
  %7 = getelementptr inbounds %String, %String* %6, i32 0, i32 1
  %8 = load %String*, %String** %this.addr
  %9 = getelementptr inbounds %String, %String* %8, i32 0, i32 0
  %10 = load %"RawPtr[Char]", %"RawPtr[Char]"* %9
  %11 = load i64, i64* %size.addr
  store i64 %11, i64* %tmp.v2
  %12 = load i64, i64* %tmp.v2
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC1", %"RawPtr[Char]" %10, i64 %12)
  call void @ctor.187(%"RawPtr[Char]"* %7, %"RawPtr[Char]"* %"$tmpC1")
  %13 = load %String*, %String** %this.addr
  %14 = getelementptr inbounds %String, %String* %13, i32 0, i32 2
  %15 = load %String*, %String** %this.addr
  %16 = getelementptr inbounds %String, %String* %15, i32 0, i32 1
  call void @ctor.187(%"RawPtr[Char]"* %14, %"RawPtr[Char]"* %16)
  store i8 0, i8* %tmp.v3
  %17 = load i8, i8* %tmp.v3
  %18 = load %String*, %String** %this.addr
  %19 = getelementptr inbounds %String, %String* %18, i32 0, i32 1
  %20 = load %"RawPtr[Char]", %"RawPtr[Char]"* %19
  %21 = call i8* @value(%"RawPtr[Char]" %20)
  store i8 %17, i8* %21
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance.195(%"RawPtr[Char]"* sret %_result, %"RawPtr[Char]" %this, i64 %n) #4 {
  %_result.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %_result, %"RawPtr[Char]"** %_result.addr
  %this.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %this, %"RawPtr[Char]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %_result.addr
  %2 = load %"RawPtr[Char]", %"RawPtr[Char]"* %this.addr
  %3 = call i8* @bytePtr(%"RawPtr[Char]" %2)
  %4 = load i64, i64* %n.addr
  store i64 1, i64* %tmp.v1
  %5 = load i64, i64* %tmp.v1
  %6 = mul i64 %4, %5
  store i64 %6, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  call void @ctor.186(%"RawPtr[Char]"* %1, i8* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.196(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other) #3 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @ctor.197(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 2
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 2
  call void @ctor.211(%"Vector[UInt]"* %6, %"Vector[UInt]"* %8)
  %9 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 3
  %11 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %12 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %11, i32 0, i32 3
  call void @ctor.182(%"Vector[Char]"* %10, %"Vector[Char]"* %12)
  %13 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %14 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 4
  %15 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %16 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 4
  call void @ctor.191(%TokenType* %14, %TokenType* %16)
  %17 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %18 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %17, i32 0, i32 5
  %19 = load i32, i32* %18
  %20 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %21 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %20, i32 0, i32 5
  store i32 %19, i32* %21
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.197(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @ctor.176(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  %5 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %7, i32 0, i32 1
  call void @ctor.198(%"Vector[Token]"* %6, %"Vector[Token]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.198(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC1" = alloca %"RawPtr[Token]"
  %dst = alloca %"RawPtr[Token]"
  %src = alloca %"RawPtr[Token]"
  %"$tmpC2" = alloca %"RawPtr[Token]"
  %"$tmpC3" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor.168(%"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %3, i32 0, i32 1
  call void @ctor.168(%"RawPtr[Token]"* %4)
  %5 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %5, i32 0, i32 2
  call void @ctor.168(%"RawPtr[Token]"* %6)
  %7 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %8 = call i64 @size.199(%"Vector[Token]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %9, i32 0, i32 0
  %11 = load i64, i64* %size
  call void @allocRawPtr.203(%"RawPtr[Token]"* %"$tmpC", i64 %11)
  call void @"=.202"(%"RawPtr[Token]"* %10, %"RawPtr[Token]"* %"$tmpC")
  %12 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %13 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %12, i32 0, i32 1
  %14 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %15 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %14, i32 0, i32 0
  %16 = load %"RawPtr[Token]", %"RawPtr[Token]"* %15
  %17 = load i64, i64* %size
  call void @advance.205(%"RawPtr[Token]"* %"$tmpC1", %"RawPtr[Token]" %16, i64 %17)
  call void @"=.202"(%"RawPtr[Token]"* %13, %"RawPtr[Token]"* %"$tmpC1")
  %18 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %19 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %18, i32 0, i32 2
  %20 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %21 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %20, i32 0, i32 1
  call void @"=.202"(%"RawPtr[Token]"* %19, %"RawPtr[Token]"* %21)
  %22 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %23 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %22, i32 0, i32 0
  call void @ctor.207(%"RawPtr[Token]"* %dst, %"RawPtr[Token]"* %23)
  %24 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %25 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %24, i32 0, i32 0
  call void @ctor.207(%"RawPtr[Token]"* %src, %"RawPtr[Token]"* %25)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %26 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %27 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %26, i32 0, i32 1
  %28 = call i1 @"==.208"(%"RawPtr[Token]"* %dst, %"RawPtr[Token]"* %27)
  %29 = xor i1 true, %28
  br i1 %29, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %30 = load %"RawPtr[Token]", %"RawPtr[Token]"* %dst
  %31 = call %Token* @value.209(%"RawPtr[Token]" %30)
  %32 = load %"RawPtr[Token]", %"RawPtr[Token]"* %src
  %33 = call %Token* @value.209(%"RawPtr[Token]" %32)
  call void @ctor.190(%Token* %31, %Token* %33)
  %34 = load %"RawPtr[Token]", %"RawPtr[Token]"* %dst
  call void @advance.210(%"RawPtr[Token]"* %"$tmpC2", %"RawPtr[Token]" %34)
  call void @"=.202"(%"RawPtr[Token]"* %dst, %"RawPtr[Token]"* %"$tmpC2")
  %35 = load %"RawPtr[Token]", %"RawPtr[Token]"* %src
  call void @advance.210(%"RawPtr[Token]"* %"$tmpC3", %"RawPtr[Token]" %35)
  call void @"=.202"(%"RawPtr[Token]"* %src, %"RawPtr[Token]"* %"$tmpC3")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @size.199(%"Vector[Token]"* %this) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[Token]", %"RawPtr[Token]"* %2
  %4 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %5 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[Token]", %"RawPtr[Token]"* %5
  %7 = call i64 @diff.200(%"RawPtr[Token]" %3, %"RawPtr[Token]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i64 @diff.200(%"RawPtr[Token]" %this, %"RawPtr[Token]" %other) #4 {
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  %other.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %other, %"RawPtr[Token]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]", %"RawPtr[Token]"* %this.addr
  %2 = call i8* @bytePtr.201(%"RawPtr[Token]" %1)
  %3 = load %"RawPtr[Token]", %"RawPtr[Token]"* %other.addr
  %4 = call i8* @bytePtr.201(%"RawPtr[Token]" %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  store i64 72, i64* %tmp.v1
  %6 = load i64, i64* %tmp.v1
  %7 = sdiv i64 %5, %6
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i8* @bytePtr.201(%"RawPtr[Token]" %this) #4 {
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %this.addr, i32 0, i32 0
  %2 = load %Token*, %Token** %1
  %3 = bitcast %Token* %2 to i8*
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.202"(%"RawPtr[Token]"* %this, %"RawPtr[Token]"* %other) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %other.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %other, %"RawPtr[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token*, %Token** %2
  %4 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %4, i32 0, i32 0
  store %Token* %3, %Token** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @allocRawPtr.203(%"RawPtr[Token]"* sret %_result, i64 %num) #4 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %_result.addr
  %2 = load i64, i64* %num.addr
  %3 = mul i64 %2, 72
  %4 = call i8* @malloc(i64 %3)
  %5 = bitcast i8* %4 to %Token*
  call void @ctor.204(%"RawPtr[Token]"* %1, %Token* %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.204(%"RawPtr[Token]"* %this, %Token* %f_ptr) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %f_ptr.addr = alloca %Token*
  store %Token* %f_ptr, %Token** %f_ptr.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token*, %Token** %f_ptr.addr
  %2 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %this.addr
  %3 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %2, i32 0, i32 0
  store %Token* %1, %Token** %3
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance.205(%"RawPtr[Token]"* sret %_result, %"RawPtr[Token]" %this, i64 %n) #4 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %_result.addr
  %2 = load %"RawPtr[Token]", %"RawPtr[Token]"* %this.addr
  %3 = call i8* @bytePtr.201(%"RawPtr[Token]" %2)
  %4 = load i64, i64* %n.addr
  %5 = mul i64 %4, 72
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @ctor.206(%"RawPtr[Token]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.206(%"RawPtr[Token]"* %this, i8* %byteRef) #4 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %byteRef.addr = alloca i8*
  store i8* %byteRef, i8** %byteRef.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %1, i32 0, i32 0
  store %Token* null, %Token** %2
  %3 = load i8*, i8** %byteRef.addr
  %4 = bitcast i8* %3 to %Token*
  %5 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %this.addr
  %6 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %5, i32 0, i32 0
  store %Token* %4, %Token** %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.207(%"RawPtr[Token]"* %this, %"RawPtr[Token]"* %other) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %other.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %other, %"RawPtr[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token*, %Token** %2
  %4 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %4, i32 0, i32 0
  store %Token* %3, %Token** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.208"(%"RawPtr[Token]"* %this, %"RawPtr[Token]"* %other) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %other.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %other, %"RawPtr[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %1, i32 0, i32 0
  %3 = load %Token*, %Token** %2
  %4 = bitcast %Token* %3 to i8*
  %5 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %other.addr
  %6 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %5, i32 0, i32 0
  %7 = load %Token*, %Token** %6
  %8 = bitcast %Token* %7 to i8*
  %9 = call i1 @implOpRefEQ(i8* %4, i8* %8)
  ret i1 %9
}

; Function Attrs: inlinehint nounwind
define internal %Token* @value.209(%"RawPtr[Token]" %this) #4 {
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %this.addr, i32 0, i32 0
  %2 = load %Token*, %Token** %1
  ret %Token* %2
}

; Function Attrs: inlinehint nounwind
define internal void @advance.210(%"RawPtr[Token]"* sret %_result, %"RawPtr[Token]" %this) #4 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %_result.addr
  %2 = load %"RawPtr[Token]", %"RawPtr[Token]"* %this.addr
  %3 = call i8* @bytePtr.201(%"RawPtr[Token]" %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 72)
  call void @ctor.206(%"RawPtr[Token]"* %1, i8* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.211(%"Vector[UInt]"* %this, %"Vector[UInt]"* %other) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %other.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %other, %"Vector[UInt]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[UInt]"
  %"$tmpC1" = alloca %"RawPtr[UInt]"
  %dst = alloca %"RawPtr[UInt]"
  %src = alloca %"RawPtr[UInt]"
  %"$tmpC2" = alloca %"RawPtr[UInt]"
  %"$tmpC3" = alloca %"RawPtr[UInt]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 0
  call void @ctor.170(%"RawPtr[UInt]"* %2)
  %3 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %3, i32 0, i32 1
  call void @ctor.170(%"RawPtr[UInt]"* %4)
  %5 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %6 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %5, i32 0, i32 2
  call void @ctor.170(%"RawPtr[UInt]"* %6)
  %7 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %8 = call i64 @size.212(%"Vector[UInt]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %10 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %9, i32 0, i32 0
  %11 = load i64, i64* %size
  call void @allocRawPtr.216(%"RawPtr[UInt]"* %"$tmpC", i64 %11)
  call void @"=.215"(%"RawPtr[UInt]"* %10, %"RawPtr[UInt]"* %"$tmpC")
  %12 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %13 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %12, i32 0, i32 1
  %14 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %15 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %14, i32 0, i32 0
  %16 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %15
  %17 = load i64, i64* %size
  call void @advance.218(%"RawPtr[UInt]"* %"$tmpC1", %"RawPtr[UInt]" %16, i64 %17)
  call void @"=.215"(%"RawPtr[UInt]"* %13, %"RawPtr[UInt]"* %"$tmpC1")
  %18 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %19 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %18, i32 0, i32 2
  %20 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %21 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %20, i32 0, i32 1
  call void @"=.215"(%"RawPtr[UInt]"* %19, %"RawPtr[UInt]"* %21)
  %22 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %23 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %22, i32 0, i32 0
  call void @ctor.220(%"RawPtr[UInt]"* %dst, %"RawPtr[UInt]"* %23)
  %24 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %25 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %24, i32 0, i32 0
  call void @ctor.220(%"RawPtr[UInt]"* %src, %"RawPtr[UInt]"* %25)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %26 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %27 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %26, i32 0, i32 1
  %28 = call i1 @"==.221"(%"RawPtr[UInt]"* %dst, %"RawPtr[UInt]"* %27)
  %29 = xor i1 true, %28
  br i1 %29, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %30 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %src
  %31 = call i32* @value.222(%"RawPtr[UInt]" %30)
  %32 = load i32, i32* %31
  %33 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %dst
  %34 = call i32* @value.222(%"RawPtr[UInt]" %33)
  store i32 %32, i32* %34
  %35 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %dst
  call void @advance.223(%"RawPtr[UInt]"* %"$tmpC2", %"RawPtr[UInt]" %35)
  call void @"=.215"(%"RawPtr[UInt]"* %dst, %"RawPtr[UInt]"* %"$tmpC2")
  %36 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %src
  call void @advance.223(%"RawPtr[UInt]"* %"$tmpC3", %"RawPtr[UInt]" %36)
  call void @"=.215"(%"RawPtr[UInt]"* %src, %"RawPtr[UInt]"* %"$tmpC3")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @size.212(%"Vector[UInt]"* %this) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %2
  %4 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %5 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %5
  %7 = call i64 @diff.213(%"RawPtr[UInt]" %3, %"RawPtr[UInt]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i64 @diff.213(%"RawPtr[UInt]" %this, %"RawPtr[UInt]" %other) #4 {
  %this.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %this, %"RawPtr[UInt]"* %this.addr
  %other.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %other, %"RawPtr[UInt]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %this.addr
  %2 = call i8* @bytePtr.214(%"RawPtr[UInt]" %1)
  %3 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %other.addr
  %4 = call i8* @bytePtr.214(%"RawPtr[UInt]" %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  store i64 4, i64* %tmp.v1
  %6 = load i64, i64* %tmp.v1
  %7 = sdiv i64 %5, %6
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i8* @bytePtr.214(%"RawPtr[UInt]" %this) #4 {
  %this.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %this, %"RawPtr[UInt]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %this.addr, i32 0, i32 0
  %2 = load i32*, i32** %1
  %3 = bitcast i32* %2 to i8*
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.215"(%"RawPtr[UInt]"* %this, %"RawPtr[UInt]"* %other) #3 {
  %this.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %this, %"RawPtr[UInt]"** %this.addr
  %other.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %other, %"RawPtr[UInt]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %1, i32 0, i32 0
  %3 = load i32*, i32** %2
  %4 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %4, i32 0, i32 0
  store i32* %3, i32** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @allocRawPtr.216(%"RawPtr[UInt]"* sret %_result, i64 %num) #4 {
  %_result.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %_result, %"RawPtr[UInt]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %_result.addr
  %2 = load i64, i64* %num.addr
  %3 = mul i64 %2, 4
  %4 = call i8* @malloc(i64 %3)
  %5 = bitcast i8* %4 to i32*
  call void @ctor.217(%"RawPtr[UInt]"* %1, i32* %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.217(%"RawPtr[UInt]"* %this, i32* %f_ptr) #3 {
  %this.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %this, %"RawPtr[UInt]"** %this.addr
  %f_ptr.addr = alloca i32*
  store i32* %f_ptr, i32** %f_ptr.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32*, i32** %f_ptr.addr
  %2 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %this.addr
  %3 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %2, i32 0, i32 0
  store i32* %1, i32** %3
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance.218(%"RawPtr[UInt]"* sret %_result, %"RawPtr[UInt]" %this, i64 %n) #4 {
  %_result.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %_result, %"RawPtr[UInt]"** %_result.addr
  %this.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %this, %"RawPtr[UInt]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %_result.addr
  %2 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %this.addr
  %3 = call i8* @bytePtr.214(%"RawPtr[UInt]" %2)
  %4 = load i64, i64* %n.addr
  %5 = mul i64 %4, 4
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @ctor.219(%"RawPtr[UInt]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.219(%"RawPtr[UInt]"* %this, i8* %byteRef) #4 {
  %this.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %this, %"RawPtr[UInt]"** %this.addr
  %byteRef.addr = alloca i8*
  store i8* %byteRef, i8** %byteRef.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %1, i32 0, i32 0
  store i32* null, i32** %2
  %3 = load i8*, i8** %byteRef.addr
  %4 = bitcast i8* %3 to i32*
  %5 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %this.addr
  %6 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %5, i32 0, i32 0
  store i32* %4, i32** %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.220(%"RawPtr[UInt]"* %this, %"RawPtr[UInt]"* %other) #3 {
  %this.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %this, %"RawPtr[UInt]"** %this.addr
  %other.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %other, %"RawPtr[UInt]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %1, i32 0, i32 0
  %3 = load i32*, i32** %2
  %4 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %4, i32 0, i32 0
  store i32* %3, i32** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.221"(%"RawPtr[UInt]"* %this, %"RawPtr[UInt]"* %other) #3 {
  %this.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %this, %"RawPtr[UInt]"** %this.addr
  %other.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %other, %"RawPtr[UInt]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %1, i32 0, i32 0
  %3 = load i32*, i32** %2
  %4 = bitcast i32* %3 to i8*
  %5 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %other.addr
  %6 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %5, i32 0, i32 0
  %7 = load i32*, i32** %6
  %8 = bitcast i32* %7 to i8*
  %9 = call i1 @implOpRefEQ(i8* %4, i8* %8)
  ret i1 %9
}

; Function Attrs: inlinehint nounwind
define internal i32* @value.222(%"RawPtr[UInt]" %this) #4 {
  %this.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %this, %"RawPtr[UInt]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %this.addr, i32 0, i32 0
  %2 = load i32*, i32** %1
  ret i32* %2
}

; Function Attrs: inlinehint nounwind
define internal void @advance.223(%"RawPtr[UInt]"* sret %_result, %"RawPtr[UInt]" %this) #4 {
  %_result.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %_result, %"RawPtr[UInt]"** %_result.addr
  %this.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %this, %"RawPtr[UInt]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %_result.addr
  %2 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %this.addr
  %3 = call i8* @bytePtr.214(%"RawPtr[UInt]" %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 4)
  call void @ctor.219(%"RawPtr[UInt]"* %1, i8* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.224(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %other) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @ctor.225(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @ctor.190(%Token* %6, %Token* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %10 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 2
  %11 = load i1, i1* %10
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 2
  store i1 %11, i1* %13
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.225(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %other) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @ctor.196(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  %5 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %7, i32 0, i32 1
  call void @ctor.198(%"Vector[Token]"* %6, %"Vector[Token]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.226(%ParserContext* %this) #3 {
  %this.addr = alloca %ParserContext*
  store %ParserContext* %this, %ParserContext** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext*, %ParserContext** %this.addr
  %2 = getelementptr inbounds %ParserContext, %ParserContext* %1, i32 0, i32 5
  call void @dtor.227(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %ParserContext*, %ParserContext** %this.addr
  %4 = getelementptr inbounds %ParserContext, %ParserContext* %3, i32 0, i32 4
  call void @dtor.234(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  %5 = load %ParserContext*, %ParserContext** %this.addr
  %6 = getelementptr inbounds %ParserContext, %ParserContext* %5, i32 0, i32 3
  call void @dtor.240(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6)
  %7 = load %ParserContext*, %ParserContext** %this.addr
  %8 = getelementptr inbounds %ParserContext, %ParserContext* %7, i32 0, i32 0
  call void @dtor.243(%File* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.227(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @dtor.228(%Token* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @dtor.230(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.228(%Token* %this) #3 {
  %this.addr = alloca %Token*
  store %Token* %this, %Token** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token*, %Token** %this.addr
  %2 = getelementptr inbounds %Token, %Token* %1, i32 0, i32 2
  call void @dtor.229(%String* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor.229(%String* %this) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  call void @freePtr(%"RawPtr[Char]" %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr(%"RawPtr[Char]" %this) #4 {
  %this.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %this, %"RawPtr[Char]"* %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[Char]", %"RawPtr[Char]"* %this.addr
  %2 = call i1 @isSet(%"RawPtr[Char]" %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %this.addr
  %4 = call i8* @bytePtr(%"RawPtr[Char]" %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet(%"RawPtr[Char]" %this) #4 {
  %this.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %this, %"RawPtr[Char]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %this.addr, i32 0, i32 0
  %2 = load i8*, i8** %1
  %3 = call i1 @implOpRefNE(i8* %2, i8* null)
  ret i1 %3
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.230(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 1
  call void @dtor.231(%"Vector[Token]"* %2)
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @dtor.234(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor.231(%"Vector[Token]"* %this) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %p = alloca %"RawPtr[Token]"
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor.207(%"RawPtr[Token]"* %p, %"RawPtr[Token]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %3, i32 0, i32 1
  %5 = call i1 @"==.208"(%"RawPtr[Token]"* %p, %"RawPtr[Token]"* %4)
  %6 = xor i1 true, %5
  br i1 %6, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %7 = load %"RawPtr[Token]", %"RawPtr[Token]"* %p
  %8 = call %Token* @value.209(%"RawPtr[Token]" %7)
  call void @dtor.228(%Token* %8)
  br label %while_step

while_step:                                       ; preds = %while_body
  %9 = load %"RawPtr[Token]", %"RawPtr[Token]"* %p
  call void @advance.210(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %9)
  call void @"=.202"(%"RawPtr[Token]"* %p, %"RawPtr[Token]"* %"$tmpC")
  br label %while_block

while_end:                                        ; preds = %while_block
  %10 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %11 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %10, i32 0, i32 0
  %12 = load %"RawPtr[Token]", %"RawPtr[Token]"* %11
  call void @freePtr.232(%"RawPtr[Token]" %12)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr.232(%"RawPtr[Token]" %this) #4 {
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[Token]", %"RawPtr[Token]"* %this.addr
  %2 = call i1 @isSet.233(%"RawPtr[Token]" %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[Token]", %"RawPtr[Token]"* %this.addr
  %4 = call i8* @bytePtr.201(%"RawPtr[Token]" %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet.233(%"RawPtr[Token]" %this) #4 {
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %this.addr, i32 0, i32 0
  %2 = load %Token*, %Token** %1
  %3 = bitcast %Token* %2 to i8*
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.234(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 3
  call void @dtor.235(%"Vector[Char]"* %2)
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 2
  call void @dtor.236(%"Vector[UInt]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 0
  call void @dtor.239(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor.235(%"Vector[Char]"* %this) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %p = alloca %"RawPtr[Char]"
  %"$tmpC" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  call void @ctor.187(%"RawPtr[Char]"* %p, %"RawPtr[Char]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %3, i32 0, i32 1
  %5 = call i1 @"==.188"(%"RawPtr[Char]"* %p, %"RawPtr[Char]"* %4)
  %6 = xor i1 true, %5
  br i1 %6, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %7 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  %8 = call i8* @value(%"RawPtr[Char]" %7)
  %9 = load i8, i8* %8
  br label %while_step

while_step:                                       ; preds = %while_body
  %10 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %10)
  call void @"=.184"(%"RawPtr[Char]"* %p, %"RawPtr[Char]"* %"$tmpC")
  br label %while_block

while_end:                                        ; preds = %while_block
  %11 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %12 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %11, i32 0, i32 0
  %13 = load %"RawPtr[Char]", %"RawPtr[Char]"* %12
  call void @freePtr(%"RawPtr[Char]" %13)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor.236(%"Vector[UInt]"* %this) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %p = alloca %"RawPtr[UInt]"
  %"$tmpC" = alloca %"RawPtr[UInt]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 0
  call void @ctor.220(%"RawPtr[UInt]"* %p, %"RawPtr[UInt]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %3, i32 0, i32 1
  %5 = call i1 @"==.221"(%"RawPtr[UInt]"* %p, %"RawPtr[UInt]"* %4)
  %6 = xor i1 true, %5
  br i1 %6, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %7 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %p
  %8 = call i32* @value.222(%"RawPtr[UInt]" %7)
  %9 = load i32, i32* %8
  br label %while_step

while_step:                                       ; preds = %while_body
  %10 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %p
  call void @advance.223(%"RawPtr[UInt]"* %"$tmpC", %"RawPtr[UInt]" %10)
  call void @"=.215"(%"RawPtr[UInt]"* %p, %"RawPtr[UInt]"* %"$tmpC")
  br label %while_block

while_end:                                        ; preds = %while_block
  %11 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %12 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %11, i32 0, i32 0
  %13 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %12
  call void @freePtr.237(%"RawPtr[UInt]" %13)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr.237(%"RawPtr[UInt]" %this) #4 {
  %this.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %this, %"RawPtr[UInt]"* %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %this.addr
  %2 = call i1 @isSet.238(%"RawPtr[UInt]" %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %this.addr
  %4 = call i8* @bytePtr.214(%"RawPtr[UInt]" %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet.238(%"RawPtr[UInt]" %this) #4 {
  %this.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %this, %"RawPtr[UInt]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %this.addr, i32 0, i32 0
  %2 = load i32*, i32** %1
  %3 = bitcast i32* %2 to i8*
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.239(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 1
  call void @dtor.231(%"Vector[Token]"* %2)
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @dtor.240(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.240(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 2
  call void @dtor.228(%Token* %2)
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  call void @dtor.241(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.241(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this) #3 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  call void @dtor.242(%"RangeWithLookahead[_CharSource]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.242(%"RangeWithLookahead[_CharSource]"* %this) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  call void @dtor.235(%"Vector[Char]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor.243(%File* %this) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  call void @close(%File* %1)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @close(%File* %this) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %File*, %File** %this.addr
  %2 = call i1 @isOpen(%File* %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %File*, %File** %this.addr
  %4 = getelementptr inbounds %File, %File* %3, i32 0, i32 0
  %5 = load i8*, i8** %4
  call void @fclose(i8* %5)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %6 = load %File*, %File** %this.addr
  %7 = getelementptr inbounds %File, %File* %6, i32 0, i32 0
  store i8* null, i8** %7
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOpen(%File* %this) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

declare void @fclose(i8*)

; Function Attrs: alwaysinline nounwind
define internal void @"=.244"(%ParserContext* %this, %ParserContext* %other) #3 {
  %this.addr = alloca %ParserContext*
  store %ParserContext* %this, %ParserContext** %this.addr
  %other.addr = alloca %ParserContext*
  store %ParserContext* %other, %ParserContext** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext*, %ParserContext** %this.addr
  %2 = getelementptr inbounds %ParserContext, %ParserContext* %1, i32 0, i32 0
  %3 = load %ParserContext*, %ParserContext** %other.addr
  %4 = getelementptr inbounds %ParserContext, %ParserContext* %3, i32 0, i32 0
  call void @"=.245"(%File* %2, %File* %4)
  %5 = load %ParserContext*, %ParserContext** %this.addr
  %6 = getelementptr inbounds %ParserContext, %ParserContext* %5, i32 0, i32 1
  %7 = load %ParserContext*, %ParserContext** %other.addr
  %8 = getelementptr inbounds %ParserContext, %ParserContext* %7, i32 0, i32 1
  call void @"=.246"(%FileRange* %6, %FileRange* %8)
  %9 = load %ParserContext*, %ParserContext** %this.addr
  %10 = getelementptr inbounds %ParserContext, %ParserContext* %9, i32 0, i32 2
  %11 = load %ParserContext*, %ParserContext** %other.addr
  %12 = getelementptr inbounds %ParserContext, %ParserContext* %11, i32 0, i32 2
  call void @"=.142"(%_CharSource* %10, %_CharSource* %12)
  %13 = load %ParserContext*, %ParserContext** %this.addr
  %14 = getelementptr inbounds %ParserContext, %ParserContext* %13, i32 0, i32 3
  %15 = load %ParserContext*, %ParserContext** %other.addr
  %16 = getelementptr inbounds %ParserContext, %ParserContext* %15, i32 0, i32 3
  call void @"=.247"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16)
  %17 = load %ParserContext*, %ParserContext** %this.addr
  %18 = getelementptr inbounds %ParserContext, %ParserContext* %17, i32 0, i32 4
  %19 = load %ParserContext*, %ParserContext** %other.addr
  %20 = getelementptr inbounds %ParserContext, %ParserContext* %19, i32 0, i32 4
  call void @"=.259"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %20)
  %21 = load %ParserContext*, %ParserContext** %this.addr
  %22 = getelementptr inbounds %ParserContext, %ParserContext* %21, i32 0, i32 5
  %23 = load %ParserContext*, %ParserContext** %other.addr
  %24 = getelementptr inbounds %ParserContext, %ParserContext* %23, i32 0, i32 5
  call void @"=.265"(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %22, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"=.245"(%File* %this, %File* %other) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %other.addr = alloca %File*
  store %File* %other, %File** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %other.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %File*, %File** %this.addr
  %5 = getelementptr inbounds %File, %File* %4, i32 0, i32 0
  store i8* %3, i8** %5
  %6 = load %File*, %File** %other.addr
  %7 = getelementptr inbounds %File, %File* %6, i32 0, i32 0
  store i8* null, i8** %7
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.246"(%FileRange* %this, %FileRange* %other) #3 {
  %this.addr = alloca %FileRange*
  store %FileRange* %this, %FileRange** %this.addr
  %other.addr = alloca %FileRange*
  store %FileRange* %other, %FileRange** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange*, %FileRange** %other.addr
  %2 = getelementptr inbounds %FileRange, %FileRange* %1, i32 0, i32 0
  %3 = load %File*, %File** %2
  %4 = load %FileRange*, %FileRange** %this.addr
  %5 = getelementptr inbounds %FileRange, %FileRange* %4, i32 0, i32 0
  store %File* %3, %File** %5
  %6 = load %FileRange*, %FileRange** %other.addr
  %7 = getelementptr inbounds %FileRange, %FileRange* %6, i32 0, i32 1
  %8 = load i1, i1* %7
  %9 = load %FileRange*, %FileRange** %this.addr
  %10 = getelementptr inbounds %FileRange, %FileRange* %9, i32 0, i32 1
  store i1 %8, i1* %10
  %11 = load %FileRange*, %FileRange** %other.addr
  %12 = getelementptr inbounds %FileRange, %FileRange* %11, i32 0, i32 2
  %13 = load i8, i8* %12
  %14 = load %FileRange*, %FileRange** %this.addr
  %15 = getelementptr inbounds %FileRange, %FileRange* %14, i32 0, i32 2
  store i8 %13, i8* %15
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.247"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"=.248"(%Location* %2, %Location* %4)
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @"=.251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %6, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 2
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 2
  call void @"=.254"(%Token* %10, %Token* %12)
  %13 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %14 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %13, i32 0, i32 3
  %15 = load i1, i1* %14
  %16 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %17 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16, i32 0, i32 3
  store i1 %15, i1* %17
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.248"(%Location* %this, %Location* %other) #3 {
  %this.addr = alloca %Location*
  store %Location* %this, %Location** %this.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %this.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 0
  %3 = load %Location*, %Location** %other.addr
  %4 = getelementptr inbounds %Location, %Location* %3, i32 0, i32 0
  call void @"=.249"(%SourceCode* %2, %SourceCode* %4)
  %5 = load %Location*, %Location** %this.addr
  %6 = getelementptr inbounds %Location, %Location* %5, i32 0, i32 1
  %7 = load %Location*, %Location** %other.addr
  %8 = getelementptr inbounds %Location, %Location* %7, i32 0, i32 1
  call void @"=.250"(%LineCol* %6, %LineCol* %8)
  %9 = load %Location*, %Location** %this.addr
  %10 = getelementptr inbounds %Location, %Location* %9, i32 0, i32 2
  %11 = load %Location*, %Location** %other.addr
  %12 = getelementptr inbounds %Location, %Location* %11, i32 0, i32 2
  call void @"=.250"(%LineCol* %10, %LineCol* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.249"(%SourceCode* %this, %SourceCode* %other) #3 {
  %this.addr = alloca %SourceCode*
  store %SourceCode* %this, %SourceCode** %this.addr
  %other.addr = alloca %SourceCode*
  store %SourceCode* %other, %SourceCode** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode*, %SourceCode** %other.addr
  %2 = getelementptr inbounds %SourceCode, %SourceCode* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %SourceCode*, %SourceCode** %this.addr
  %5 = getelementptr inbounds %SourceCode, %SourceCode* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.250"(%LineCol* %this, %LineCol* %other) #3 {
  %this.addr = alloca %LineCol*
  store %LineCol* %this, %LineCol** %this.addr
  %other.addr = alloca %LineCol*
  store %LineCol* %other, %LineCol** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol*, %LineCol** %other.addr
  %2 = getelementptr inbounds %LineCol, %LineCol* %1, i32 0, i32 0
  %3 = load i32, i32* %2
  %4 = load %LineCol*, %LineCol** %this.addr
  %5 = getelementptr inbounds %LineCol, %LineCol* %4, i32 0, i32 0
  store i32 %3, i32* %5
  %6 = load %LineCol*, %LineCol** %other.addr
  %7 = getelementptr inbounds %LineCol, %LineCol* %6, i32 0, i32 1
  %8 = load i32, i32* %7
  %9 = load %LineCol*, %LineCol** %this.addr
  %10 = getelementptr inbounds %LineCol, %LineCol* %9, i32 0, i32 1
  store i32 %8, i32* %10
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.251"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other) #3 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %other.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %4 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3, i32 0, i32 0
  call void @"=.252"(%"RangeWithLookahead[_CharSource]"* %2, %"RangeWithLookahead[_CharSource]"* %4)
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %6 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, i32 0, i32 1
  %7 = load %Location*, %Location** %6
  %8 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %9 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8, i32 0, i32 1
  store %Location* %7, %Location** %9
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.252"(%"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"* %other) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %other, %"RangeWithLookahead[_CharSource]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  call void @"=.142"(%_CharSource* %2, %_CharSource* %4)
  %5 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %7, i32 0, i32 1
  %9 = call %"Vector[Char]"** @"=.253"(%"Vector[Char]"* %6, %"Vector[Char]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[Char]"** @"=.253"(%"Vector[Char]"* %this, %"Vector[Char]"* %other) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %other.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %other, %"Vector[Char]"** %other.addr
  %tmp = alloca %"Vector[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  call void @ctor.182(%"Vector[Char]"* %tmp, %"Vector[Char]"* %1)
  %2 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  call void @swap(%"Vector[Char]"* %tmp, %"Vector[Char]"* %2)
  call void @dtor.235(%"Vector[Char]"* %tmp)
  ret %"Vector[Char]"** %this.addr

dumy_block:                                       ; No predecessors!
  call void @dtor.235(%"Vector[Char]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @swap(%"Vector[Char]"* %this, %"Vector[Char]"* %other) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %other.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %other, %"Vector[Char]"** %other.addr
  %tmp = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  call void @ctor.187(%"RawPtr[Char]"* %tmp, %"RawPtr[Char]"* %2)
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %3, i32 0, i32 0
  %5 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %6 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %5, i32 0, i32 0
  call void @"=.184"(%"RawPtr[Char]"* %4, %"RawPtr[Char]"* %6)
  %7 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %8 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %7, i32 0, i32 0
  call void @"=.184"(%"RawPtr[Char]"* %8, %"RawPtr[Char]"* %tmp)
  %9 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %9, i32 0, i32 1
  call void @"=.184"(%"RawPtr[Char]"* %tmp, %"RawPtr[Char]"* %10)
  %11 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %12 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %11, i32 0, i32 1
  %13 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %14 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %13, i32 0, i32 1
  call void @"=.184"(%"RawPtr[Char]"* %12, %"RawPtr[Char]"* %14)
  %15 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %16 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %15, i32 0, i32 1
  call void @"=.184"(%"RawPtr[Char]"* %16, %"RawPtr[Char]"* %tmp)
  %17 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %18 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %17, i32 0, i32 2
  call void @"=.184"(%"RawPtr[Char]"* %tmp, %"RawPtr[Char]"* %18)
  %19 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %20 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %19, i32 0, i32 2
  %21 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %22 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %21, i32 0, i32 2
  call void @"=.184"(%"RawPtr[Char]"* %20, %"RawPtr[Char]"* %22)
  %23 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %24 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %23, i32 0, i32 2
  call void @"=.184"(%"RawPtr[Char]"* %24, %"RawPtr[Char]"* %tmp)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.254"(%Token* %this, %Token* %other) #3 {
  %this.addr = alloca %Token*
  store %Token* %this, %Token** %this.addr
  %other.addr = alloca %Token*
  store %Token* %other, %Token** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token*, %Token** %this.addr
  %2 = getelementptr inbounds %Token, %Token* %1, i32 0, i32 0
  %3 = load %Token*, %Token** %other.addr
  %4 = getelementptr inbounds %Token, %Token* %3, i32 0, i32 0
  call void @"=.248"(%Location* %2, %Location* %4)
  %5 = load %Token*, %Token** %this.addr
  %6 = getelementptr inbounds %Token, %Token* %5, i32 0, i32 1
  %7 = load %Token*, %Token** %other.addr
  %8 = getelementptr inbounds %Token, %Token* %7, i32 0, i32 1
  call void @"=.255"(%TokenType* %6, %TokenType* %8)
  %9 = load %Token*, %Token** %this.addr
  %10 = getelementptr inbounds %Token, %Token* %9, i32 0, i32 2
  %11 = load %Token*, %Token** %other.addr
  %12 = getelementptr inbounds %Token, %Token* %11, i32 0, i32 2
  %13 = call %String* @"=.256"(%String* %10, %String* %12)
  %14 = load %Token*, %Token** %other.addr
  %15 = getelementptr inbounds %Token, %Token* %14, i32 0, i32 3
  %16 = load i64, i64* %15
  %17 = load %Token*, %Token** %this.addr
  %18 = getelementptr inbounds %Token, %Token* %17, i32 0, i32 3
  store i64 %16, i64* %18
  %19 = load %Token*, %Token** %other.addr
  %20 = getelementptr inbounds %Token, %Token* %19, i32 0, i32 4
  %21 = load double, double* %20
  %22 = load %Token*, %Token** %this.addr
  %23 = getelementptr inbounds %Token, %Token* %22, i32 0, i32 4
  store double %21, double* %23
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.255"(%TokenType* %this, %TokenType* %other) #3 {
  %this.addr = alloca %TokenType*
  store %TokenType* %this, %TokenType** %this.addr
  %other.addr = alloca %TokenType*
  store %TokenType* %other, %TokenType** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType*, %TokenType** %other.addr
  %2 = getelementptr inbounds %TokenType, %TokenType* %1, i32 0, i32 0
  %3 = load i32, i32* %2
  %4 = load %TokenType*, %TokenType** %this.addr
  %5 = getelementptr inbounds %TokenType, %TokenType* %4, i32 0, i32 0
  store i32 %3, i32* %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %String* @"=.256"(%String* %this, %String* %other) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  %tmp = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %other.addr
  call void @ctor.192(%String* %tmp, %String* %1)
  %2 = load %String*, %String** %this.addr
  call void @swap.257(%String* %tmp, %String* %2)
  %3 = load %String*, %String** %this.addr
  call void @dtor.229(%String* %tmp)
  ret %String* %3

dumy_block:                                       ; No predecessors!
  call void @dtor.229(%String* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @swap.257(%String* %this, %String* %other) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  %3 = load %String*, %String** %other.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 0
  call void @swap.258(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  %5 = load %String*, %String** %this.addr
  %6 = getelementptr inbounds %String, %String* %5, i32 0, i32 1
  %7 = load %String*, %String** %other.addr
  %8 = getelementptr inbounds %String, %String* %7, i32 0, i32 1
  call void @swap.258(%"RawPtr[Char]"* %6, %"RawPtr[Char]"* %8)
  %9 = load %String*, %String** %this.addr
  %10 = getelementptr inbounds %String, %String* %9, i32 0, i32 2
  %11 = load %String*, %String** %other.addr
  %12 = getelementptr inbounds %String, %String* %11, i32 0, i32 2
  call void @swap.258(%"RawPtr[Char]"* %10, %"RawPtr[Char]"* %12)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @swap.258(%"RawPtr[Char]"* %this, %"RawPtr[Char]"* %other) #4 {
  %this.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %this, %"RawPtr[Char]"** %this.addr
  %other.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %other, %"RawPtr[Char]"** %other.addr
  %t = alloca i8*
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  store i8* %3, i8** %t
  %4 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %other.addr
  %5 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %4, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %8 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %7, i32 0, i32 0
  store i8* %6, i8** %8
  %9 = load i8*, i8** %t
  %10 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %other.addr
  %11 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %10, i32 0, i32 0
  store i8* %9, i8** %11
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.259"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other) #3 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"=.260"(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 2
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 2
  %9 = call %"Vector[UInt]"** @"=.263"(%"Vector[UInt]"* %6, %"Vector[UInt]"* %8)
  %10 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %10, i32 0, i32 3
  %12 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %13 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 3
  %14 = call %"Vector[Char]"** @"=.253"(%"Vector[Char]"* %11, %"Vector[Char]"* %13)
  %15 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 4
  %17 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %18 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %17, i32 0, i32 4
  call void @"=.255"(%TokenType* %16, %TokenType* %18)
  %19 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %20 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %19, i32 0, i32 5
  %21 = load i32, i32* %20
  %22 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %23 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %22, i32 0, i32 5
  store i32 %21, i32* %23
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.260"(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=.247"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  %5 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %7, i32 0, i32 1
  %9 = call %"Vector[Token]"** @"=.261"(%"Vector[Token]"* %6, %"Vector[Token]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[Token]"** @"=.261"(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %tmp = alloca %"Vector[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  call void @ctor.198(%"Vector[Token]"* %tmp, %"Vector[Token]"* %1)
  %2 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  call void @swap.262(%"Vector[Token]"* %tmp, %"Vector[Token]"* %2)
  call void @dtor.231(%"Vector[Token]"* %tmp)
  ret %"Vector[Token]"** %this.addr

dumy_block:                                       ; No predecessors!
  call void @dtor.231(%"Vector[Token]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @swap.262(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %tmp = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  call void @ctor.207(%"RawPtr[Token]"* %tmp, %"RawPtr[Token]"* %2)
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %3, i32 0, i32 0
  %5 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %6 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %5, i32 0, i32 0
  call void @"=.202"(%"RawPtr[Token]"* %4, %"RawPtr[Token]"* %6)
  %7 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %8 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %7, i32 0, i32 0
  call void @"=.202"(%"RawPtr[Token]"* %8, %"RawPtr[Token]"* %tmp)
  %9 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %9, i32 0, i32 1
  call void @"=.202"(%"RawPtr[Token]"* %tmp, %"RawPtr[Token]"* %10)
  %11 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %12 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %11, i32 0, i32 1
  %13 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %14 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %13, i32 0, i32 1
  call void @"=.202"(%"RawPtr[Token]"* %12, %"RawPtr[Token]"* %14)
  %15 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %16 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %15, i32 0, i32 1
  call void @"=.202"(%"RawPtr[Token]"* %16, %"RawPtr[Token]"* %tmp)
  %17 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %18 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %17, i32 0, i32 2
  call void @"=.202"(%"RawPtr[Token]"* %tmp, %"RawPtr[Token]"* %18)
  %19 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %20 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %19, i32 0, i32 2
  %21 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %22 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %21, i32 0, i32 2
  call void @"=.202"(%"RawPtr[Token]"* %20, %"RawPtr[Token]"* %22)
  %23 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %24 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %23, i32 0, i32 2
  call void @"=.202"(%"RawPtr[Token]"* %24, %"RawPtr[Token]"* %tmp)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %"Vector[UInt]"** @"=.263"(%"Vector[UInt]"* %this, %"Vector[UInt]"* %other) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %other.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %other, %"Vector[UInt]"** %other.addr
  %tmp = alloca %"Vector[UInt]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  call void @ctor.211(%"Vector[UInt]"* %tmp, %"Vector[UInt]"* %1)
  %2 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  call void @swap.264(%"Vector[UInt]"* %tmp, %"Vector[UInt]"* %2)
  call void @dtor.236(%"Vector[UInt]"* %tmp)
  ret %"Vector[UInt]"** %this.addr

dumy_block:                                       ; No predecessors!
  call void @dtor.236(%"Vector[UInt]"* %tmp)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @swap.264(%"Vector[UInt]"* %this, %"Vector[UInt]"* %other) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %other.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %other, %"Vector[UInt]"** %other.addr
  %tmp = alloca %"RawPtr[UInt]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 0
  call void @ctor.220(%"RawPtr[UInt]"* %tmp, %"RawPtr[UInt]"* %2)
  %3 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %3, i32 0, i32 0
  %5 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %6 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %5, i32 0, i32 0
  call void @"=.215"(%"RawPtr[UInt]"* %4, %"RawPtr[UInt]"* %6)
  %7 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %8 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %7, i32 0, i32 0
  call void @"=.215"(%"RawPtr[UInt]"* %8, %"RawPtr[UInt]"* %tmp)
  %9 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %10 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %9, i32 0, i32 1
  call void @"=.215"(%"RawPtr[UInt]"* %tmp, %"RawPtr[UInt]"* %10)
  %11 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %12 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %11, i32 0, i32 1
  %13 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %14 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %13, i32 0, i32 1
  call void @"=.215"(%"RawPtr[UInt]"* %12, %"RawPtr[UInt]"* %14)
  %15 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %16 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %15, i32 0, i32 1
  call void @"=.215"(%"RawPtr[UInt]"* %16, %"RawPtr[UInt]"* %tmp)
  %17 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %18 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %17, i32 0, i32 2
  call void @"=.215"(%"RawPtr[UInt]"* %tmp, %"RawPtr[UInt]"* %18)
  %19 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %20 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %19, i32 0, i32 2
  %21 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %22 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %21, i32 0, i32 2
  call void @"=.215"(%"RawPtr[UInt]"* %20, %"RawPtr[UInt]"* %22)
  %23 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %24 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %23, i32 0, i32 2
  call void @"=.215"(%"RawPtr[UInt]"* %24, %"RawPtr[UInt]"* %tmp)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.265"(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %other) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"=.266"(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %8 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @"=.254"(%Token* %6, %Token* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %10 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 2
  %11 = load i1, i1* %10
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 2
  store i1 %11, i1* %13
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.266"(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %other) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=.259"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  %5 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %5, i32 0, i32 1
  %7 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %7, i32 0, i32 1
  %9 = call %"Vector[Token]"** @"=.261"(%"Vector[Token]"* %6, %"Vector[Token]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.267"(%ParserContext* %this, %ParserContext* %other) #3 {
  %this.addr = alloca %ParserContext*
  store %ParserContext* %this, %ParserContext** %this.addr
  %other.addr = alloca %ParserContext*
  store %ParserContext* %other, %ParserContext** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext*, %ParserContext** %this.addr
  %2 = getelementptr inbounds %ParserContext, %ParserContext* %1, i32 0, i32 0
  %3 = load %ParserContext*, %ParserContext** %other.addr
  %4 = getelementptr inbounds %ParserContext, %ParserContext* %3, i32 0, i32 0
  %5 = call i1 @"==.268"(%File* %2, %File* %4)
  br i1 %5, label %cond.true10, label %cond.false11

cond.true:                                        ; preds = %cond.end3
  %6 = load %ParserContext*, %ParserContext** %this.addr
  %7 = getelementptr inbounds %ParserContext, %ParserContext* %6, i32 0, i32 5
  %8 = load %ParserContext*, %ParserContext** %other.addr
  %9 = getelementptr inbounds %ParserContext, %ParserContext* %8, i32 0, i32 5
  %10 = call i1 @"==.289"(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res16 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res16

cond.true1:                                       ; preds = %cond.end6
  %11 = load %ParserContext*, %ParserContext** %this.addr
  %12 = getelementptr inbounds %ParserContext, %ParserContext* %11, i32 0, i32 4
  %13 = load %ParserContext*, %ParserContext** %other.addr
  %14 = getelementptr inbounds %ParserContext, %ParserContext* %13, i32 0, i32 4
  %15 = call i1 @"==.283"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %14)
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res15 = phi i1 [ %15, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res15, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  %16 = load %ParserContext*, %ParserContext** %this.addr
  %17 = getelementptr inbounds %ParserContext, %ParserContext* %16, i32 0, i32 3
  %18 = load %ParserContext*, %ParserContext** %other.addr
  %19 = getelementptr inbounds %ParserContext, %ParserContext* %18, i32 0, i32 3
  %20 = call i1 @"==.270"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %19)
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res14 = phi i1 [ %20, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res14, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  %21 = load %ParserContext*, %ParserContext** %this.addr
  %22 = getelementptr inbounds %ParserContext, %ParserContext* %21, i32 0, i32 2
  %23 = load %ParserContext*, %ParserContext** %other.addr
  %24 = getelementptr inbounds %ParserContext, %ParserContext* %23, i32 0, i32 2
  %25 = call i1 @"==.143"(%_CharSource* %22, %_CharSource* %24)
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res13 = phi i1 [ %25, %cond.true7 ], [ false, %cond.false8 ]
  br i1 %cond.res13, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %code
  %26 = load %ParserContext*, %ParserContext** %this.addr
  %27 = getelementptr inbounds %ParserContext, %ParserContext* %26, i32 0, i32 1
  %28 = load %ParserContext*, %ParserContext** %other.addr
  %29 = getelementptr inbounds %ParserContext, %ParserContext* %28, i32 0, i32 1
  %30 = call i1 @"==.269"(%FileRange* %27, %FileRange* %29)
  br label %cond.end12

cond.false11:                                     ; preds = %code
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res = phi i1 [ %30, %cond.true10 ], [ false, %cond.false11 ]
  br i1 %cond.res, label %cond.true7, label %cond.false8
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.268"(%File* %this, %File* %other) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %other.addr = alloca %File*
  store %File* %other, %File** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %File*, %File** %other.addr
  %5 = getelementptr inbounds %File, %File* %4, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.269"(%FileRange* %this, %FileRange* %other) #3 {
  %this.addr = alloca %FileRange*
  store %FileRange* %this, %FileRange** %this.addr
  %other.addr = alloca %FileRange*
  store %FileRange* %other, %FileRange** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange*, %FileRange** %this.addr
  %2 = getelementptr inbounds %FileRange, %FileRange* %1, i32 0, i32 0
  %3 = load %File*, %File** %2
  %4 = bitcast %File* %3 to i8*
  %5 = load %FileRange*, %FileRange** %other.addr
  %6 = getelementptr inbounds %FileRange, %FileRange* %5, i32 0, i32 0
  %7 = load %File*, %File** %6
  %8 = bitcast %File* %7 to i8*
  %9 = call i1 @implOpRefEQ(i8* %4, i8* %8)
  br i1 %9, label %cond.true1, label %cond.false2

cond.true:                                        ; preds = %cond.end3
  %10 = load %FileRange*, %FileRange** %this.addr
  %11 = getelementptr inbounds %FileRange, %FileRange* %10, i32 0, i32 2
  %12 = load i8, i8* %11
  %13 = load %FileRange*, %FileRange** %other.addr
  %14 = getelementptr inbounds %FileRange, %FileRange* %13, i32 0, i32 2
  %15 = load i8, i8* %14
  %16 = icmp eq i8 %12, %15
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %16, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res4

cond.true1:                                       ; preds = %code
  %17 = load %FileRange*, %FileRange** %this.addr
  %18 = getelementptr inbounds %FileRange, %FileRange* %17, i32 0, i32 1
  %19 = load i1, i1* %18
  %20 = load %FileRange*, %FileRange** %other.addr
  %21 = getelementptr inbounds %FileRange, %FileRange* %20, i32 0, i32 1
  %22 = load i1, i1* %21
  %23 = icmp eq i1 %19, %22
  br label %cond.end3

cond.false2:                                      ; preds = %code
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %23, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.270"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other) #3 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %other, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 0
  %5 = call i1 @"==.271"(%Location* %2, %Location* %4)
  br i1 %5, label %cond.true7, label %cond.false8

cond.true:                                        ; preds = %cond.end3
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, i32 0, i32 4
  %8 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %9 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8, i32 0, i32 4
  %10 = call i1 @"==.138"(%ExternalErrorReporter* %7, %ExternalErrorReporter* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res12 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res12

cond.true1:                                       ; preds = %cond.end6
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 3
  %13 = load i1, i1* %12
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 3
  %16 = load i1, i1* %15
  %17 = icmp eq i1 %13, %16
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res11 = phi i1 [ %17, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res11, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, i32 0, i32 2
  %20 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %21 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %20, i32 0, i32 2
  %22 = call i1 @"==.278"(%Token* %19, %Token* %21)
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res10 = phi i1 [ %22, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res10, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %code
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, i32 0, i32 1
  %25 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %other.addr
  %26 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %25, i32 0, i32 1
  %27 = call i1 @"==.274"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %24, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %26)
  br label %cond.end9

cond.false8:                                      ; preds = %code
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res = phi i1 [ %27, %cond.true7 ], [ false, %cond.false8 ]
  br i1 %cond.res, label %cond.true4, label %cond.false5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.271"(%Location* %this, %Location* %other) #3 {
  %this.addr = alloca %Location*
  store %Location* %this, %Location** %this.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %this.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 0
  %3 = load %Location*, %Location** %other.addr
  %4 = getelementptr inbounds %Location, %Location* %3, i32 0, i32 0
  %5 = call i1 @"==.272"(%SourceCode* %2, %SourceCode* %4)
  br i1 %5, label %cond.true1, label %cond.false2

cond.true:                                        ; preds = %cond.end3
  %6 = load %Location*, %Location** %this.addr
  %7 = getelementptr inbounds %Location, %Location* %6, i32 0, i32 2
  %8 = load %Location*, %Location** %other.addr
  %9 = getelementptr inbounds %Location, %Location* %8, i32 0, i32 2
  %10 = call i1 @"==.273"(%LineCol* %7, %LineCol* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res4

cond.true1:                                       ; preds = %code
  %11 = load %Location*, %Location** %this.addr
  %12 = getelementptr inbounds %Location, %Location* %11, i32 0, i32 1
  %13 = load %Location*, %Location** %other.addr
  %14 = getelementptr inbounds %Location, %Location* %13, i32 0, i32 1
  %15 = call i1 @"==.273"(%LineCol* %12, %LineCol* %14)
  br label %cond.end3

cond.false2:                                      ; preds = %code
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %15, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.272"(%SourceCode* %this, %SourceCode* %other) #3 {
  %this.addr = alloca %SourceCode*
  store %SourceCode* %this, %SourceCode** %this.addr
  %other.addr = alloca %SourceCode*
  store %SourceCode* %other, %SourceCode** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %SourceCode*, %SourceCode** %this.addr
  %2 = getelementptr inbounds %SourceCode, %SourceCode* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %SourceCode*, %SourceCode** %other.addr
  %5 = getelementptr inbounds %SourceCode, %SourceCode* %4, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = call i1 @implOpRefEQ(i8* %3, i8* %6)
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.273"(%LineCol* %this, %LineCol* %other) #3 {
  %this.addr = alloca %LineCol*
  store %LineCol* %this, %LineCol** %this.addr
  %other.addr = alloca %LineCol*
  store %LineCol* %other, %LineCol** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LineCol*, %LineCol** %this.addr
  %2 = getelementptr inbounds %LineCol, %LineCol* %1, i32 0, i32 0
  %3 = load i32, i32* %2
  %4 = load %LineCol*, %LineCol** %other.addr
  %5 = getelementptr inbounds %LineCol, %LineCol* %4, i32 0, i32 0
  %6 = load i32, i32* %5
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %8 = load %LineCol*, %LineCol** %this.addr
  %9 = getelementptr inbounds %LineCol, %LineCol* %8, i32 0, i32 1
  %10 = load i32, i32* %9
  %11 = load %LineCol*, %LineCol** %other.addr
  %12 = getelementptr inbounds %LineCol, %LineCol* %11, i32 0, i32 1
  %13 = load i32, i32* %12
  %14 = icmp eq i32 %10, %13
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %14, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.274"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other) #3 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %other.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %other, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %4 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %3, i32 0, i32 0
  %5 = call i1 @"==.275"(%"RangeWithLookahead[_CharSource]"* %2, %"RangeWithLookahead[_CharSource]"* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %7 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %6, i32 0, i32 1
  %8 = load %Location*, %Location** %7
  %9 = bitcast %Location* %8 to i8*
  %10 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %other.addr
  %11 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %10, i32 0, i32 1
  %12 = load %Location*, %Location** %11
  %13 = bitcast %Location* %12 to i8*
  %14 = call i1 @implOpRefEQ(i8* %9, i8* %13)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %14, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.275"(%"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"* %other) #3 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %other, %"RangeWithLookahead[_CharSource]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  %5 = call i1 @"==.143"(%_CharSource* %2, %_CharSource* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %other.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %8, i32 0, i32 1
  %10 = call i1 @"==.276"(%"Vector[Char]"* %7, %"Vector[Char]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==.276"(%"Vector[Char]"* %this, %"Vector[Char]"* %other) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %other.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %other, %"Vector[Char]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v5 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = call i64 @size.183(%"Vector[Char]"* %1)
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %4 = call i64 @size.183(%"Vector[Char]"* %3)
  %5 = icmp ne i64 %2, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %7 = call i64 @size.183(%"Vector[Char]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32, i32* %i
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %tmp.v
  %10 = load i64, i64* %tmp.v
  %11 = load i64, i64* %s
  %12 = icmp slt i64 %10, %11
  br i1 %12, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %13 = call i32 @"post_++.39"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %14 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %15 = load i32, i32* %i
  %16 = zext i32 %15 to i64
  store i64 %16, i64* %tmp.v4
  %17 = load i64, i64* %tmp.v4
  %18 = call i8* @at.277(%"Vector[Char]"* %14, i64 %17)
  %19 = load i8, i8* %18
  %20 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %21 = load i32, i32* %i
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %tmp.v5
  %23 = load i64, i64* %tmp.v5
  %24 = call i8* @at.277(%"Vector[Char]"* %20, i64 %23)
  %25 = load i8, i8* %24
  %26 = icmp eq i8 %19, %25
  %27 = xor i1 true, %26
  br i1 %27, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block6, %if_block1
  br label %while_step

dumy_block6:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal i8* @at.277(%"Vector[Char]"* %this, i64 %index) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  %4 = load i64, i64* %index.addr
  call void @advance(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %3, i64 %4)
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %6 = call i8* @value(%"RawPtr[Char]" %5)
  ret i8* %6
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.278"(%Token* %this, %Token* %other) #3 {
  %this.addr = alloca %Token*
  store %Token* %this, %Token** %this.addr
  %other.addr = alloca %Token*
  store %Token* %other, %Token** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token*, %Token** %this.addr
  %2 = getelementptr inbounds %Token, %Token* %1, i32 0, i32 0
  %3 = load %Token*, %Token** %other.addr
  %4 = getelementptr inbounds %Token, %Token* %3, i32 0, i32 0
  %5 = call i1 @"==.271"(%Location* %2, %Location* %4)
  br i1 %5, label %cond.true7, label %cond.false8

cond.true:                                        ; preds = %cond.end3
  %6 = load %Token*, %Token** %this.addr
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 4
  %8 = load double, double* %7
  %9 = load %Token*, %Token** %other.addr
  %10 = getelementptr inbounds %Token, %Token* %9, i32 0, i32 4
  %11 = load double, double* %10
  %12 = call i1 @_Double_opEQ(double %8, double %11)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res12 = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res12

cond.true1:                                       ; preds = %cond.end6
  %13 = load %Token*, %Token** %this.addr
  %14 = getelementptr inbounds %Token, %Token* %13, i32 0, i32 3
  %15 = load i64, i64* %14
  %16 = load %Token*, %Token** %other.addr
  %17 = getelementptr inbounds %Token, %Token* %16, i32 0, i32 3
  %18 = load i64, i64* %17
  %19 = icmp eq i64 %15, %18
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res11 = phi i1 [ %19, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res11, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  %20 = load %Token*, %Token** %this.addr
  %21 = getelementptr inbounds %Token, %Token* %20, i32 0, i32 2
  %22 = load %Token*, %Token** %other.addr
  %23 = getelementptr inbounds %Token, %Token* %22, i32 0, i32 2
  %24 = call i1 @"==.280"(%String* %21, %String* %23)
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res10 = phi i1 [ %24, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res10, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %code
  %25 = load %Token*, %Token** %this.addr
  %26 = getelementptr inbounds %Token, %Token* %25, i32 0, i32 1
  %27 = load %Token*, %Token** %other.addr
  %28 = getelementptr inbounds %Token, %Token* %27, i32 0, i32 1
  %29 = call i1 @"==.279"(%TokenType* %26, %TokenType* %28)
  br label %cond.end9

cond.false8:                                      ; preds = %code
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res = phi i1 [ %29, %cond.true7 ], [ false, %cond.false8 ]
  br i1 %cond.res, label %cond.true4, label %cond.false5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.279"(%TokenType* %this, %TokenType* %other) #3 {
  %this.addr = alloca %TokenType*
  store %TokenType* %this, %TokenType** %this.addr
  %other.addr = alloca %TokenType*
  store %TokenType* %other, %TokenType** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType*, %TokenType** %this.addr
  %2 = getelementptr inbounds %TokenType, %TokenType* %1, i32 0, i32 0
  %3 = load i32, i32* %2
  %4 = load %TokenType*, %TokenType** %other.addr
  %5 = getelementptr inbounds %TokenType, %TokenType* %4, i32 0, i32 0
  %6 = load i32, i32* %5
  %7 = icmp eq i32 %3, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==.280"(%String* %this, %String* %other) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  %i = alloca i64
  %s = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %String*, %String** %this.addr
  %2 = call i64 @size.193(%String* %1)
  %3 = load %String*, %String** %other.addr
  %4 = call i64 @size.193(%String* %3)
  %5 = icmp ne i64 %2, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i64 0, i64* %i
  %6 = load %String*, %String** %this.addr
  %7 = call i64 @size.193(%String* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i64, i64* %i
  %9 = load i64, i64* %s
  %10 = icmp slt i64 %8, %9
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %11 = call i64 @"post_++.43"(i64* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %12 = load %String*, %String** %this.addr
  %13 = load i64, i64* %i
  %14 = call i8* @"().281"(%String* %12, i64 %13)
  %15 = load i8, i8* %14
  %16 = load %String*, %String** %other.addr
  %17 = load i64, i64* %i
  %18 = call i8* @"().281"(%String* %16, i64 %17)
  %19 = load i8, i8* %18
  %20 = icmp ne i8 %15, %19
  br i1 %20, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  br label %while_step

dumy_block4:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal i8* @"().281"(%String* %this, i64 %index) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  %4 = load i64, i64* %index.addr
  store i64 %4, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %3, i64 %5)
  %6 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %7 = call i8* @value(%"RawPtr[Char]" %6)
  ret i8* %7
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.282(%"RawPtr[Char]"* %this) #3 {
  %this.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %this, %"RawPtr[Char]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.283"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other) #3 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  %5 = call i1 @"==.284"(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %4)
  br i1 %5, label %cond.true10, label %cond.false11

cond.true:                                        ; preds = %cond.end3
  %6 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %6, i32 0, i32 5
  %8 = load i32, i32* %7
  %9 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %10 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 5
  %11 = load i32, i32* %10
  %12 = icmp eq i32 %8, %11
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res16 = phi i1 [ %12, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res16

cond.true1:                                       ; preds = %cond.end6
  %13 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %14 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 4
  %15 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %16 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 4
  %17 = call i1 @"==.279"(%TokenType* %14, %TokenType* %16)
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res15 = phi i1 [ %17, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res15, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  %18 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 3
  %20 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %21 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %20, i32 0, i32 3
  %22 = call i1 @"==.276"(%"Vector[Char]"* %19, %"Vector[Char]"* %21)
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res14 = phi i1 [ %22, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res14, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  %23 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %23, i32 0, i32 2
  %25 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %26 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %25, i32 0, i32 2
  %27 = call i1 @"==.287"(%"Vector[UInt]"* %24, %"Vector[UInt]"* %26)
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res13 = phi i1 [ %27, %cond.true7 ], [ false, %cond.false8 ]
  br i1 %cond.res13, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %code
  %28 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %29 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %28, i32 0, i32 1
  %30 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %31 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %30, i32 0, i32 1
  %32 = call i1 @"==.138"(%ExternalErrorReporter* %29, %ExternalErrorReporter* %31)
  br label %cond.end12

cond.false11:                                     ; preds = %code
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res = phi i1 [ %32, %cond.true10 ], [ false, %cond.false11 ]
  br i1 %cond.res, label %cond.true7, label %cond.false8
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.284"(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  %5 = call i1 @"==.270"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %other.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %8, i32 0, i32 1
  %10 = call i1 @"==.285"(%"Vector[Token]"* %7, %"Vector[Token]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==.285"(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v5 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = call i64 @size.199(%"Vector[Token]"* %1)
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %4 = call i64 @size.199(%"Vector[Token]"* %3)
  %5 = icmp ne i64 %2, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %7 = call i64 @size.199(%"Vector[Token]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32, i32* %i
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %tmp.v
  %10 = load i64, i64* %tmp.v
  %11 = load i64, i64* %s
  %12 = icmp slt i64 %10, %11
  br i1 %12, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %13 = call i32 @"post_++.39"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %14 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %15 = load i32, i32* %i
  %16 = zext i32 %15 to i64
  store i64 %16, i64* %tmp.v4
  %17 = load i64, i64* %tmp.v4
  %18 = call %Token* @at.286(%"Vector[Token]"* %14, i64 %17)
  %19 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %20 = load i32, i32* %i
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %tmp.v5
  %22 = load i64, i64* %tmp.v5
  %23 = call %Token* @at.286(%"Vector[Token]"* %19, i64 %22)
  %24 = call i1 @"==.278"(%Token* %18, %Token* %23)
  %25 = xor i1 true, %24
  br i1 %25, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block6, %if_block1
  br label %while_step

dumy_block6:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal %Token* @at.286(%"Vector[Token]"* %this, i64 %index) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Token]", %"RawPtr[Token]"* %2
  %4 = load i64, i64* %index.addr
  call void @advance.205(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %3, i64 %4)
  %5 = load %"RawPtr[Token]", %"RawPtr[Token]"* %"$tmpC"
  %6 = call %Token* @value.209(%"RawPtr[Token]" %5)
  ret %Token* %6
}

; Function Attrs: inlinehint nounwind
define internal i1 @"==.287"(%"Vector[UInt]"* %this, %"Vector[UInt]"* %other) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %other.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %other, %"Vector[UInt]"** %other.addr
  %i = alloca i32
  %s = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v5 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = call i64 @size.212(%"Vector[UInt]"* %1)
  %3 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %4 = call i64 @size.212(%"Vector[UInt]"* %3)
  %5 = icmp ne i64 %2, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  store i32 0, i32* %i
  %6 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %7 = call i64 @size.212(%"Vector[UInt]"* %6)
  store i64 %7, i64* %s
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load i32, i32* %i
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %tmp.v
  %10 = load i64, i64* %tmp.v
  %11 = load i64, i64* %s
  %12 = icmp slt i64 %10, %11
  br i1 %12, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block1

while_step:                                       ; preds = %if_end3
  %13 = call i32 @"post_++.39"(i32* %i)
  br label %while_block

while_end:                                        ; preds = %while_block
  ret i1 true

if_block1:                                        ; preds = %while_body
  %14 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %15 = load i32, i32* %i
  %16 = zext i32 %15 to i64
  store i64 %16, i64* %tmp.v4
  %17 = load i64, i64* %tmp.v4
  %18 = call i32* @at.288(%"Vector[UInt]"* %14, i64 %17)
  %19 = load i32, i32* %18
  %20 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %21 = load i32, i32* %i
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %tmp.v5
  %23 = load i64, i64* %tmp.v5
  %24 = call i32* @at.288(%"Vector[UInt]"* %20, i64 %23)
  %25 = load i32, i32* %24
  %26 = icmp eq i32 %19, %25
  %27 = xor i1 true, %26
  br i1 %27, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block6, %if_block1
  br label %while_step

dumy_block6:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal i32* @at.288(%"Vector[UInt]"* %this, i64 %index) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[UInt]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %2
  %4 = load i64, i64* %index.addr
  call void @advance.218(%"RawPtr[UInt]"* %"$tmpC", %"RawPtr[UInt]" %3, i64 %4)
  %5 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %"$tmpC"
  %6 = call i32* @value.222(%"RawPtr[UInt]" %5)
  ret i32* %6
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.289"(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %other) #3 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %other.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %other, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  %5 = call i1 @"==.290"(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  br i1 %5, label %cond.true4, label %cond.false5

cond.true:                                        ; preds = %cond.end3
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, i32 0, i32 3
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %9 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 3
  %10 = call i1 @"==.138"(%ExternalErrorReporter* %7, %ExternalErrorReporter* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res8 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res8

cond.true1:                                       ; preds = %cond.end6
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i32 0, i32 2
  %13 = load i1, i1* %12
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %15 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i32 0, i32 2
  %16 = load i1, i1* %15
  %17 = icmp eq i1 %13, %16
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res7 = phi i1 [ %17, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res7, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %code
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 1
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %other.addr
  %21 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20, i32 0, i32 1
  %22 = call i1 @"==.278"(%Token* %19, %Token* %21)
  br label %cond.end6

cond.false5:                                      ; preds = %code
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res = phi i1 [ %22, %cond.true4 ], [ false, %cond.false5 ]
  br i1 %cond.res, label %cond.true1, label %cond.false2
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.290"(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %other) #3 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %other.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %other, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  %5 = call i1 @"==.283"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %7 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %6, i32 0, i32 1
  %8 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %other.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %8, i32 0, i32 1
  %10 = call i1 @"==.285"(%"Vector[Token]"* %7, %"Vector[Token]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.291(%ParserContext* %this, %StringRef %filename, %StringRef %code, %Location %loc, i1 %scannerOnly) #4 {
  %this.addr = alloca %ParserContext*
  store %ParserContext* %this, %ParserContext** %this.addr
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  %loc.addr = alloca %Location
  store %Location %loc, %Location* %loc.addr
  %scannerOnly.addr = alloca i1
  store i1 %scannerOnly, i1* %scannerOnly.addr
  %reporter = alloca %ExternalErrorReporter
  %tmp.StringRef = alloca %StringRef
  %"$tmpC" = alloca %FileRange
  %tmp.StringRef2 = alloca %StringRef
  %"$tmpC6" = alloca %String
  %tmp.StringRef7 = alloca %StringRef
  br label %code1

code1:                                            ; preds = %0
  %1 = load %ParserContext*, %ParserContext** %this.addr
  %2 = getelementptr inbounds %ParserContext, %ParserContext* %1, i32 0, i32 0
  call void @ctor.152(%File* %2)
  %3 = load %ParserContext*, %ParserContext** %this.addr
  %4 = getelementptr inbounds %ParserContext, %ParserContext* %3, i32 0, i32 1
  call void @ctor.153(%FileRange* %4)
  %5 = load %ParserContext*, %ParserContext** %this.addr
  %6 = getelementptr inbounds %ParserContext, %ParserContext* %5, i32 0, i32 2
  call void @ctor.139(%_CharSource* %6)
  %7 = load %ParserContext*, %ParserContext** %this.addr
  %8 = getelementptr inbounds %ParserContext, %ParserContext* %7, i32 0, i32 4
  call void @ctor.165(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %ParserContext*, %ParserContext** %this.addr
  %10 = getelementptr inbounds %ParserContext, %ParserContext* %9, i32 0, i32 5
  call void @ctor.171(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  br label %if_block

if_block:                                         ; preds = %code1
  %11 = call i1 @isEmpty(%StringRef* %code.addr)
  br i1 %11, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %12 = load %ParserContext*, %ParserContext** %this.addr
  %13 = getelementptr inbounds %ParserContext, %ParserContext* %12, i32 0, i32 0
  %14 = load %StringRef, %StringRef* %filename.addr
  %15 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %16 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.8, i32 0, i32 0), i8** %15
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.8, i32 0, i32 1), i8** %16
  %17 = load %StringRef, %StringRef* %tmp.StringRef
  call void @ctor.292(%File* %13, %StringRef %14, %StringRef %17)
  %18 = load %ParserContext*, %ParserContext** %this.addr
  %19 = getelementptr inbounds %ParserContext, %ParserContext* %18, i32 0, i32 1
  %20 = load %ParserContext*, %ParserContext** %this.addr
  %21 = getelementptr inbounds %ParserContext, %ParserContext* %20, i32 0, i32 0
  call void @all(%FileRange* %"$tmpC", %File* %21)
  call void @ctor.175(%FileRange* %19, %FileRange* %"$tmpC")
  %22 = load %ParserContext*, %ParserContext** %this.addr
  %23 = getelementptr inbounds %ParserContext, %ParserContext* %22, i32 0, i32 2
  %24 = load %ParserContext*, %ParserContext** %this.addr
  %25 = getelementptr inbounds %ParserContext, %ParserContext* %24, i32 0, i32 1
  %26 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef2, i32 0, i32 0
  %27 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef2, i32 0, i32 1
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.9, i32 0, i32 0), i8** %26
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.9, i32 0, i32 0), i8** %27
  %28 = load %StringRef, %StringRef* %tmp.StringRef2
  call void @ctor.144(%_CharSource* %23, %FileRange* %25, %StringRef %28)
  br label %if_block3

if_else:                                          ; preds = %if_block
  %29 = load %ParserContext*, %ParserContext** %this.addr
  %30 = getelementptr inbounds %ParserContext, %ParserContext* %29, i32 0, i32 0
  call void @ctor.152(%File* %30)
  %31 = load %ParserContext*, %ParserContext** %this.addr
  %32 = getelementptr inbounds %ParserContext, %ParserContext* %31, i32 0, i32 1
  call void @ctor.153(%FileRange* %32)
  %33 = load %ParserContext*, %ParserContext** %this.addr
  %34 = getelementptr inbounds %ParserContext, %ParserContext* %33, i32 0, i32 2
  %35 = load %StringRef, %StringRef* %code.addr
  call void @ctor.144(%_CharSource* %34, %FileRange* null, %StringRef %35)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_end5
  %36 = load %ParserContext*, %ParserContext** %this.addr
  %37 = getelementptr inbounds %ParserContext, %ParserContext* %36, i32 0, i32 3
  %38 = load %ParserContext*, %ParserContext** %this.addr
  %39 = getelementptr inbounds %ParserContext, %ParserContext* %38, i32 0, i32 2
  %40 = load %_CharSource, %_CharSource* %39
  %41 = load %ExternalErrorReporter, %ExternalErrorReporter* %reporter
  call void @ctor.298(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %37, %_CharSource %40, %ExternalErrorReporter %41, %Location* %loc.addr)
  br label %if_block8

if_block3:                                        ; preds = %if_then
  %42 = load %ParserContext*, %ParserContext** %this.addr
  %43 = getelementptr inbounds %ParserContext, %ParserContext* %42, i32 0, i32 0
  %44 = call i1 @isOpen(%File* %43)
  %45 = xor i1 true, %44
  br i1 %45, label %if_then4, label %if_end5

if_then4:                                         ; preds = %if_block3
  %46 = load %Location, %Location* %loc.addr
  %47 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef7, i32 0, i32 0
  %48 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef7, i32 0, i32 1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.10, i32 0, i32 0), i8** %47
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.10, i32 0, i32 18), i8** %48
  %49 = load %StringRef, %StringRef* %tmp.StringRef7
  %50 = load %StringRef, %StringRef* %filename.addr
  call void @toString(%String* %"$tmpC6", %StringRef %49, %StringRef %50)
  call void @reportError(%ExternalErrorReporter* %reporter, %Location %46, %String* %"$tmpC6")
  call void @dtor.229(%String* %"$tmpC6")
  br label %if_end5

if_end5:                                          ; preds = %if_then4, %if_block3
  br label %if_end

if_block8:                                        ; preds = %if_end
  %51 = load i1, i1* %scannerOnly.addr
  %52 = xor i1 true, %51
  br i1 %52, label %if_then9, label %if_end10

if_then9:                                         ; preds = %if_block8
  %53 = load %ParserContext*, %ParserContext** %this.addr
  %54 = getelementptr inbounds %ParserContext, %ParserContext* %53, i32 0, i32 4
  %55 = load %ParserContext*, %ParserContext** %this.addr
  %56 = getelementptr inbounds %ParserContext, %ParserContext* %55, i32 0, i32 3
  %57 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %56
  %58 = load %ExternalErrorReporter, %ExternalErrorReporter* %reporter
  call void @ctor.304(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %54, %"SparrowScanner[_CharSource, ExternalErrorReporter]" %57, %ExternalErrorReporter %58)
  %59 = load %ParserContext*, %ParserContext** %this.addr
  %60 = getelementptr inbounds %ParserContext, %ParserContext* %59, i32 0, i32 5
  %61 = load %ParserContext*, %ParserContext** %this.addr
  %62 = getelementptr inbounds %ParserContext, %ParserContext* %61, i32 0, i32 4
  %63 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %62
  %64 = load %ExternalErrorReporter, %ExternalErrorReporter* %reporter
  call void @ctor.419(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %60, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %63, %ExternalErrorReporter %64)
  br label %if_end10

if_end10:                                         ; preds = %if_then9, %if_block8
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.292(%File* %this, %StringRef %filename, %StringRef %mode) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %mode.addr = alloca %StringRef
  store %StringRef %mode, %StringRef* %mode.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = call i8* @cStr(%StringRef* %filename.addr)
  %4 = call i8* @cStr(%StringRef* %mode.addr)
  %5 = call i8* @fopen(i8* %3, i8* %4)
  %6 = load %File*, %File** %this.addr
  %7 = getelementptr inbounds %File, %File* %6, i32 0, i32 0
  store i8* %5, i8** %7
  ret void
}

declare i8* @fopen(i8*, i8*)

; Function Attrs: inlinehint nounwind
define internal void @all(%FileRange* sret %_result, %File* %this) #4 {
  %_result.addr = alloca %FileRange*
  store %FileRange* %_result, %FileRange** %_result.addr
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange*, %FileRange** %_result.addr
  %2 = load %File*, %File** %this.addr
  call void @ctor.293(%FileRange* %1, %File* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.293(%FileRange* %this, %File* %file) #4 {
  %this.addr = alloca %FileRange*
  store %FileRange* %this, %FileRange** %this.addr
  %file.addr = alloca %File*
  store %File* %file, %File** %file.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %FileRange*, %FileRange** %this.addr
  %2 = getelementptr inbounds %FileRange, %FileRange* %1, i32 0, i32 0
  store %File* null, %File** %2
  %3 = load %FileRange*, %FileRange** %this.addr
  %4 = getelementptr inbounds %FileRange, %FileRange* %3, i32 0, i32 1
  store i1 false, i1* %4
  %5 = load %File*, %File** %file.addr
  %6 = load %FileRange*, %FileRange** %this.addr
  %7 = getelementptr inbounds %FileRange, %FileRange* %6, i32 0, i32 0
  store %File* %5, %File** %7
  %8 = load %FileRange*, %FileRange** %this.addr
  %9 = getelementptr inbounds %FileRange, %FileRange* %8, i32 0, i32 1
  store i1 true, i1* %9
  %10 = load %FileRange*, %FileRange** %this.addr
  %11 = getelementptr inbounds %FileRange, %FileRange* %10, i32 0, i32 2
  store i8 0, i8* %11
  br label %if_block

if_block:                                         ; preds = %code
  %12 = load %FileRange*, %FileRange** %this.addr
  %13 = getelementptr inbounds %FileRange, %FileRange* %12, i32 0, i32 0
  %14 = load %File*, %File** %13
  %15 = call i1 @isEof(%File* %14)
  %16 = xor i1 true, %15
  br i1 %16, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %17 = load %FileRange*, %FileRange** %this.addr
  %18 = getelementptr inbounds %FileRange, %FileRange* %17, i32 0, i32 0
  %19 = load %File*, %File** %18
  %20 = call i8 @readChar(%File* %19)
  %21 = load %FileRange*, %FileRange** %this.addr
  %22 = getelementptr inbounds %FileRange, %FileRange* %21, i32 0, i32 2
  store i8 %20, i8* %22
  %23 = load %FileRange*, %FileRange** %this.addr
  %24 = getelementptr inbounds %FileRange, %FileRange* %23, i32 0, i32 1
  store i1 false, i1* %24
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.294(%FileRange* %this) #3 {
  %this.addr = alloca %FileRange*
  store %FileRange* %this, %FileRange** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString(%String* sret %_result, %StringRef %a1, %StringRef %a2) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca %StringRef
  store %StringRef %a2, %StringRef* %a2.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor.295(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<"(%StringOutputStream* %1, %StringRef* %a2.addr)
  %3 = load %String*, %String** %_result.addr
  %4 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %s, i32 0, i32 0
  call void @ctor.192(%String* %3, %String* %4)
  call void @dtor.297(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.297(%StringOutputStream* %s)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.295(%StringOutputStream* %this) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  call void @ctor.164(%String* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %x) #4 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca %StringRef*
  store %StringRef* %x, %StringRef** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %s.addr
  %2 = load %StringRef*, %StringRef** %x.addr
  %3 = load %StringRef, %StringRef* %2
  call void @"<<<.296"(%StringOutputStream* %1, %StringRef %3)
  %4 = load %StringOutputStream*, %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<.296"(%StringOutputStream* %this, %StringRef %s) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %s.addr = alloca %StringRef
  store %StringRef %s, %StringRef* %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  %3 = load %StringRef, %StringRef* %s.addr
  call void @append(%String* %2, %StringRef %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @append(%String* %this, %StringRef %range) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %range.addr = alloca %StringRef
  store %StringRef %range, %StringRef* %range.addr
  %tmp.v = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = load %StringRef, %StringRef* %range.addr
  %3 = load %String*, %String** %this.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %4
  %6 = call i8* @bytePtr(%"RawPtr[Char]" %5)
  %7 = load %String*, %String** %this.addr
  %8 = getelementptr inbounds %String, %String* %7, i32 0, i32 1
  %9 = load %"RawPtr[Char]", %"RawPtr[Char]"* %8
  %10 = call i8* @bytePtr(%"RawPtr[Char]" %9)
  call void @ctor.57(%StringRef* %tmp.v, i8* %6, i8* %10)
  %11 = load %StringRef, %StringRef* %tmp.v
  call void @insertBefore(%String* %1, %StringRef %2, %StringRef %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore(%String* %this, %StringRef %range, %StringRef %pos) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %range.addr = alloca %StringRef
  store %StringRef %range, %StringRef* %range.addr
  %pos.addr = alloca %StringRef
  store %StringRef %pos, %StringRef* %pos.addr
  %n = alloca i64
  %index = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char]"
  %p = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  %q = alloca %"RawPtr[Char]"
  %tmp.v1 = alloca i64
  %"$tmpC2" = alloca %"RawPtr[Char]"
  %tmp.v3 = alloca i64
  %"$tmpC4" = alloca %"RawPtr[Char]"
  %tmp.v5 = alloca i64
  %"$tmpC6" = alloca %"RawPtr[Char]"
  %"$tmpC11" = alloca %"RawPtr[Char]"
  %"$tmpC12" = alloca %"RawPtr[Char]"
  %tmp.v13 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %range.addr)
  store i64 %1, i64* %n
  %2 = load %StringRef, %StringRef* %pos.addr
  call void @_frontPtr(%"RawPtr[Char]"* %"$tmpC", %StringRef %2)
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %4 = load %String*, %String** %this.addr
  %5 = getelementptr inbounds %String, %String* %4, i32 0, i32 0
  %6 = load %"RawPtr[Char]", %"RawPtr[Char]"* %5
  %7 = call i64 @diff(%"RawPtr[Char]" %3, %"RawPtr[Char]" %6)
  store i64 %7, i64* %index
  %8 = load %String*, %String** %this.addr
  %9 = load %String*, %String** %this.addr
  %10 = call i64 @size.193(%String* %9)
  %11 = load i64, i64* %n
  %12 = add i64 %10, %11
  call void @reserve(%String* %8, i64 %12)
  %13 = load %String*, %String** %this.addr
  %14 = getelementptr inbounds %String, %String* %13, i32 0, i32 1
  %15 = load %"RawPtr[Char]", %"RawPtr[Char]"* %14
  store i64 -1, i64* %tmp.v
  %16 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %p, %"RawPtr[Char]" %15, i64 %16)
  %17 = load %String*, %String** %this.addr
  %18 = getelementptr inbounds %String, %String* %17, i32 0, i32 0
  %19 = load %"RawPtr[Char]", %"RawPtr[Char]"* %18
  %20 = load i64, i64* %index
  store i64 1, i64* %tmp.v1
  %21 = load i64, i64* %tmp.v1
  %22 = call i64 @_DiffType_opMinus(i64 %20, i64 %21)
  call void @advance.195(%"RawPtr[Char]"* %q, %"RawPtr[Char]" %19, i64 %22)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %23 = call i1 @"==.188"(%"RawPtr[Char]"* %p, %"RawPtr[Char]"* %q)
  %24 = xor i1 true, %23
  br i1 %24, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %25 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  %26 = call i8* @value(%"RawPtr[Char]" %25)
  %27 = load i8, i8* %26
  %28 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  %29 = load i64, i64* %n
  store i64 %29, i64* %tmp.v3
  %30 = load i64, i64* %tmp.v3
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC2", %"RawPtr[Char]" %28, i64 %30)
  %31 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC2"
  %32 = call i8* @value(%"RawPtr[Char]" %31)
  store i8 %27, i8* %32
  %33 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  %34 = call i8* @value(%"RawPtr[Char]" %33)
  %35 = load i8, i8* %34
  br label %while_step

while_step:                                       ; preds = %while_body
  %36 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  store i64 -1, i64* %tmp.v5
  %37 = load i64, i64* %tmp.v5
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC4", %"RawPtr[Char]" %36, i64 %37)
  call void @"=.184"(%"RawPtr[Char]"* %p, %"RawPtr[Char]"* %"$tmpC4")
  br label %while_block

while_end:                                        ; preds = %while_block
  %38 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC6", %"RawPtr[Char]" %38)
  call void @"=.184"(%"RawPtr[Char]"* %p, %"RawPtr[Char]"* %"$tmpC6")
  br label %while_block7

while_block7:                                     ; preds = %while_step9, %while_end
  %39 = call i1 @isEmpty(%StringRef* %range.addr)
  %40 = xor i1 true, %39
  br i1 %40, label %while_body8, label %while_end10

while_body8:                                      ; preds = %while_block7
  %41 = call i8* @front(%StringRef* %range.addr)
  %42 = load i8, i8* %41
  %43 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  %44 = call i8* @value(%"RawPtr[Char]" %43)
  store i8 %42, i8* %44
  %45 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC11", %"RawPtr[Char]" %45)
  call void @"=.184"(%"RawPtr[Char]"* %p, %"RawPtr[Char]"* %"$tmpC11")
  call void @popFront(%StringRef* %range.addr)
  br label %while_step9

while_step9:                                      ; preds = %while_body8
  br label %while_block7

while_end10:                                      ; preds = %while_block7
  %46 = load %String*, %String** %this.addr
  %47 = getelementptr inbounds %String, %String* %46, i32 0, i32 1
  %48 = load %String*, %String** %this.addr
  %49 = getelementptr inbounds %String, %String* %48, i32 0, i32 1
  %50 = load %"RawPtr[Char]", %"RawPtr[Char]"* %49
  %51 = load i64, i64* %n
  store i64 %51, i64* %tmp.v13
  %52 = load i64, i64* %tmp.v13
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC12", %"RawPtr[Char]" %50, i64 %52)
  call void @"=.184"(%"RawPtr[Char]"* %47, %"RawPtr[Char]"* %"$tmpC12")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @_frontPtr(%"RawPtr[Char]"* sret %_result, %StringRef %s) #4 {
  %_result.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %_result, %"RawPtr[Char]"** %_result.addr
  %s.addr = alloca %StringRef
  store %StringRef %s, %StringRef* %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %_result.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %s.addr, i32 0, i32 0
  %3 = load i8*, i8** %2
  call void @ctor.186(%"RawPtr[Char]"* %1, i8* %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @reserve(%String* %this, i64 %n) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v8 = alloca double
  %tmp.v9 = alloca double
  %tmp.v10 = alloca i64
  %tmp.v11 = alloca double
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v12 = alloca i64
  %"$tmpC13" = alloca %"RawPtr[Char]"
  %tmp.v14 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = call i64 @capacity(%String* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64, i64* %n.addr
  %4 = load i64, i64* %curCapacity
  %5 = icmp sle i64 %3, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64, i64* %n.addr
  store i64 16, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = icmp slt i64 %6, %7
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 16, i64* %tmp.v4
  %9 = load i64, i64* %tmp.v4
  store i64 %9, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block5

if_block5:                                        ; preds = %if_end3
  %10 = load i64, i64* %n.addr
  %11 = sitofp i64 %10 to double
  store double %11, double* %tmp.v8
  %12 = load double, double* %tmp.v8
  %13 = load i64, i64* %curCapacity
  %14 = sitofp i64 %13 to double
  store double %14, double* %tmp.v9
  %15 = load double, double* %tmp.v9
  %16 = call double @_Double_opMul(double 1.500000e+00, double %15)
  %17 = call i1 @_Double_opLT(double %12, double %16)
  br i1 %17, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %18 = load i64, i64* %curCapacity
  %19 = sitofp i64 %18 to double
  store double %19, double* %tmp.v11
  %20 = load double, double* %tmp.v11
  %21 = call double @_Double_opMul(double 1.500000e+00, double %20)
  %22 = fptoui double %21 to i64
  store i64 %22, i64* %tmp.v10
  %23 = load i64, i64* %tmp.v10
  store i64 %23, i64* %n.addr
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  %24 = load %String*, %String** %this.addr
  %25 = call i64 @size.193(%String* %24)
  store i64 %25, i64* %curSize
  %26 = load %String*, %String** %this.addr
  %27 = getelementptr inbounds %String, %String* %26, i32 0, i32 0
  %28 = load i64, i64* %n.addr
  call void @reallocPtr(%"RawPtr[Char]"* %27, i64 %28)
  %29 = load %String*, %String** %this.addr
  %30 = getelementptr inbounds %String, %String* %29, i32 0, i32 1
  %31 = load %String*, %String** %this.addr
  %32 = getelementptr inbounds %String, %String* %31, i32 0, i32 0
  %33 = load %"RawPtr[Char]", %"RawPtr[Char]"* %32
  %34 = load i64, i64* %curSize
  store i64 %34, i64* %tmp.v12
  %35 = load i64, i64* %tmp.v12
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %33, i64 %35)
  call void @"=.184"(%"RawPtr[Char]"* %30, %"RawPtr[Char]"* %"$tmpC")
  %36 = load %String*, %String** %this.addr
  %37 = getelementptr inbounds %String, %String* %36, i32 0, i32 2
  %38 = load %String*, %String** %this.addr
  %39 = getelementptr inbounds %String, %String* %38, i32 0, i32 0
  %40 = load %"RawPtr[Char]", %"RawPtr[Char]"* %39
  %41 = load i64, i64* %n.addr
  store i64 %41, i64* %tmp.v14
  %42 = load i64, i64* %tmp.v14
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC13", %"RawPtr[Char]" %40, i64 %42)
  call void @"=.184"(%"RawPtr[Char]"* %37, %"RawPtr[Char]"* %"$tmpC13")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @capacity(%String* %this) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 2
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  %4 = load %String*, %String** %this.addr
  %5 = getelementptr inbounds %String, %String* %4, i32 0, i32 0
  %6 = load %"RawPtr[Char]", %"RawPtr[Char]"* %5
  %7 = call i64 @diff(%"RawPtr[Char]" %3, %"RawPtr[Char]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr(%"RawPtr[Char]"* %this, i64 %n) #4 {
  %this.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %this, %"RawPtr[Char]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %2 = load %"RawPtr[Char]", %"RawPtr[Char]"* %1
  %3 = call i8* @bytePtr(%"RawPtr[Char]" %2)
  %4 = load i64, i64* %n.addr
  %5 = mul i64 %4, 1
  %6 = call i8* @realloc(i8* %3, i64 %5)
  %7 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %this.addr
  %8 = getelementptr inbounds %"RawPtr[Char]", %"RawPtr[Char]"* %7, i32 0, i32 0
  store i8* %6, i8** %8
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.297(%StringOutputStream* %this) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  call void @dtor.229(%String* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.298(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %_CharSource %source, %ExternalErrorReporter %errorReporter, %Location* %iniLocation) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %source.addr = alloca %_CharSource
  store %_CharSource %source, %_CharSource* %source.addr
  %errorReporter.addr = alloca %ExternalErrorReporter
  store %ExternalErrorReporter %errorReporter, %ExternalErrorReporter* %errorReporter.addr
  %iniLocation.addr = alloca %Location*
  store %Location* %iniLocation, %Location** %iniLocation.addr
  %tmp.v = alloca %"RangeWithLookahead[_CharSource]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 0
  %3 = load %Location*, %Location** %iniLocation.addr
  call void @ctor.177(%Location* %2, %Location* %3)
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = load %_CharSource, %_CharSource* %source.addr
  call void @ctor.300(%"RangeWithLookahead[_CharSource]"* %tmp.v, %_CharSource %6)
  %7 = load %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %tmp.v
  %8 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8, i32 0, i32 0
  call void @ctor.299(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, %"RangeWithLookahead[_CharSource]" %7, %Location* %9)
  call void @dtor.242(%"RangeWithLookahead[_CharSource]"* %tmp.v)
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 2
  call void @ctor.162(%Token* %11)
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 3
  store i1 false, i1* %13
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.299(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"RangeWithLookahead[_CharSource]" %fsource, %Location* %flocation) #3 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %fsource.addr = alloca %"RangeWithLookahead[_CharSource]"
  store %"RangeWithLookahead[_CharSource]" %fsource, %"RangeWithLookahead[_CharSource]"* %fsource.addr
  %flocation.addr = alloca %Location*
  store %Location* %flocation, %Location** %flocation.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  call void @ctor.181(%"RangeWithLookahead[_CharSource]"* %2, %"RangeWithLookahead[_CharSource]"* %fsource.addr)
  %3 = load %Location*, %Location** %flocation.addr
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %5 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4, i32 0, i32 1
  store %Location* %3, %Location** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.300(%"RangeWithLookahead[_CharSource]"* %this, %_CharSource %src) #4 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %src.addr = alloca %_CharSource
  store %_CharSource %src, %_CharSource* %src.addr
  %tmp.v = alloca i64
  %"$tmpForRef" = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 0
  call void @ctor.139(%_CharSource* %2)
  %3 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %3, i32 0, i32 0
  call void @"=.142"(%_CharSource* %4, %_CharSource* %src.addr)
  %5 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %5, i32 0, i32 1
  call void @ctor.160(%"Vector[Char]"* %6)
  %7 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %7, i32 0, i32 1
  store i64 10, i64* %tmp.v
  %9 = load i64, i64* %tmp.v
  call void @reserve.301(%"Vector[Char]"* %8, i64 %9)
  br label %if_block

if_block:                                         ; preds = %code
  %10 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %10, i32 0, i32 0
  %12 = call i1 @"pre_!!"(%_CharSource* %11)
  br i1 %12, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %13 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %14 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %13, i32 0, i32 1
  %15 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %16 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %15, i32 0, i32 0
  %17 = call i8 @"post_++.303"(%_CharSource* %16)
  store i8 %17, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char]"* %14, i8* %"$tmpForRef")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @reserve.301(%"Vector[Char]"* %this, i64 %n) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v8 = alloca double
  %tmp.v9 = alloca double
  %tmp.v10 = alloca i64
  %tmp.v11 = alloca double
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char]"
  %"$tmpC12" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = call i64 @capacity.302(%"Vector[Char]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64, i64* %n.addr
  %4 = load i64, i64* %curCapacity
  %5 = icmp sle i64 %3, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64, i64* %n.addr
  store i64 8, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = icmp slt i64 %6, %7
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %tmp.v4
  %9 = load i64, i64* %tmp.v4
  store i64 %9, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block5

if_block5:                                        ; preds = %if_end3
  %10 = load i64, i64* %n.addr
  %11 = sitofp i64 %10 to double
  store double %11, double* %tmp.v8
  %12 = load double, double* %tmp.v8
  %13 = load i64, i64* %curCapacity
  %14 = sitofp i64 %13 to double
  store double %14, double* %tmp.v9
  %15 = load double, double* %tmp.v9
  %16 = call double @_Double_opMul(double 2.000000e+00, double %15)
  %17 = call i1 @_Double_opLT(double %12, double %16)
  br i1 %17, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %18 = load i64, i64* %curCapacity
  %19 = sitofp i64 %18 to double
  store double %19, double* %tmp.v11
  %20 = load double, double* %tmp.v11
  %21 = call double @_Double_opMul(double 2.000000e+00, double %20)
  %22 = fptoui double %21 to i64
  store i64 %22, i64* %tmp.v10
  %23 = load i64, i64* %tmp.v10
  store i64 %23, i64* %n.addr
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  %24 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %25 = call i64 @size.183(%"Vector[Char]"* %24)
  store i64 %25, i64* %curSize
  %26 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %27 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %26, i32 0, i32 0
  %28 = load i64, i64* %n.addr
  call void @reallocPtr(%"RawPtr[Char]"* %27, i64 %28)
  %29 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %30 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %29, i32 0, i32 1
  %31 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %32 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %31, i32 0, i32 0
  %33 = load %"RawPtr[Char]", %"RawPtr[Char]"* %32
  %34 = load i64, i64* %curSize
  call void @advance(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %33, i64 %34)
  call void @"=.184"(%"RawPtr[Char]"* %30, %"RawPtr[Char]"* %"$tmpC")
  %35 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %36 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %35, i32 0, i32 2
  %37 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %38 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %37, i32 0, i32 0
  %39 = load %"RawPtr[Char]", %"RawPtr[Char]"* %38
  %40 = load i64, i64* %n.addr
  call void @advance(%"RawPtr[Char]"* %"$tmpC12", %"RawPtr[Char]" %39, i64 %40)
  call void @"=.184"(%"RawPtr[Char]"* %36, %"RawPtr[Char]"* %"$tmpC12")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @capacity.302(%"Vector[Char]"* %this) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 2
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  %4 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %5 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[Char]", %"RawPtr[Char]"* %5
  %7 = call i64 @diff(%"RawPtr[Char]" %3, %"RawPtr[Char]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i1 @"pre_!!"(%_CharSource* %r) #4 {
  %r.addr = alloca %_CharSource*
  store %_CharSource* %r, %_CharSource** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource*, %_CharSource** %r.addr
  %2 = call i1 @isEmpty.145(%_CharSource* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal void @"+="(%"Vector[Char]"* %this, i8* %value) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %value.addr = alloca i8*
  store i8* %value, i8** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = load i8*, i8** %value.addr
  call void @pushBack(%"Vector[Char]"* %1, i8* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack(%"Vector[Char]"* %this, i8* %value) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %value.addr = alloca i8*
  store i8* %value, i8** %value.addr
  %t = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v5 = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 1
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %3, i32 0, i32 2
  %5 = call i1 @"==.188"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  store i64 2, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  %7 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %8 = call i64 @capacity.302(%"Vector[Char]"* %7)
  %9 = mul i64 %6, %8
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load i8*, i8** %value.addr
  %11 = load i8, i8* %10
  %12 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %13 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %12, i32 0, i32 1
  %14 = load %"RawPtr[Char]", %"RawPtr[Char]"* %13
  %15 = call i8* @value(%"RawPtr[Char]" %14)
  store i8 %11, i8* %15
  %16 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %17 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %16, i32 0, i32 1
  %18 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %19 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %18, i32 0, i32 1
  %20 = load %"RawPtr[Char]", %"RawPtr[Char]"* %19
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %20)
  call void @"=.184"(%"RawPtr[Char]"* %17, %"RawPtr[Char]"* %"$tmpC")
  ret void

if_block1:                                        ; preds = %if_then
  %21 = load i64, i64* %t
  store i64 2, i64* %tmp.v4
  %22 = load i64, i64* %tmp.v4
  %23 = icmp slt i64 %21, %22
  br i1 %23, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %tmp.v5
  %24 = load i64, i64* %tmp.v5
  store i64 %24, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %25 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %26 = load i64, i64* %t
  call void @reserve.301(%"Vector[Char]"* %25, i64 %26)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i8 @"post_++.303"(%_CharSource* %r) #4 {
  %r.addr = alloca %_CharSource*
  store %_CharSource* %r, %_CharSource** %r.addr
  %res = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %_CharSource*, %_CharSource** %r.addr
  %2 = call i8 @front.147(%_CharSource* %1)
  store i8 %2, i8* %res
  %3 = load %_CharSource*, %_CharSource** %r.addr
  call void @popFront.149(%_CharSource* %3)
  %4 = load i8, i8* %res
  ret i8 %4
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.304(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]" %tokens, %ExternalErrorReporter %errorReporter) #4 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tokens.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]" %tokens, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %tokens.addr
  %errorReporter.addr = alloca %ExternalErrorReporter
  store %ExternalErrorReporter %errorReporter, %ExternalErrorReporter* %errorReporter.addr
  %tmp.v = alloca i32
  %tmp.v1 = alloca %TokenType
  %"$tmpC" = alloca %Token
  %tmp.v2 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 2
  call void @ctor.169(%"Vector[UInt]"* %2)
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 3
  call void @ctor.160(%"Vector[Char]"* %4)
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 4
  call void @ctor.163(%TokenType* %6)
  %7 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 5
  store i32 0, i32* %8
  %9 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %9, i32 0, i32 0
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %tokens.addr
  call void @ctor.305(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %10, %"SparrowScanner[_CharSource, ExternalErrorReporter]" %11)
  %12 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 2
  store i32 1, i32* %tmp.v
  call void @"+=.386"(%"Vector[UInt]"* %13, i32* %tmp.v)
  %14 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %14, i32 0, i32 4
  call void @ctor.319(%TokenType* %tmp.v1, i32 32)
  call void @"=.255"(%TokenType* %15, %TokenType* %tmp.v1)
  %16 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %17 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %16, i32 0, i32 5
  store i32 0, i32* %17
  br label %if_block

if_block:                                         ; preds = %code
  %18 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 0
  %20 = call i1 @isEmpty.391(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %19)
  %21 = xor i1 true, %20
  br i1 %21, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %22 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @popFront.395(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %22)
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  br i1 %21, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %23 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %23, i32 0, i32 0
  call void @front.393(%Token* %"$tmpC", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %24)
  %25 = getelementptr inbounds %Token, %Token* %"$tmpC", i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v2, i32 1)
  %26 = call i1 @"==.279"(%TokenType* %25, %TokenType* %tmp.v2)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %26, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

cond_destruct_alt1:                               ; preds = %if_end
  call void @dtor.228(%Token* %"$tmpC")
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.305(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]" %src) #4 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %src.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]" %src, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %src.addr
  %tmp.v = alloca i64
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor.154(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=.247"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %src.addr)
  %5 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %5, i32 0, i32 1
  call void @ctor.167(%"Vector[Token]"* %6)
  %7 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %7, i32 0, i32 1
  store i64 10, i64* %tmp.v
  %9 = load i64, i64* %tmp.v
  call void @reserve.306(%"Vector[Token]"* %8, i64 %9)
  br label %if_block

if_block:                                         ; preds = %code
  %10 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %10, i32 0, i32 0
  %12 = call i1 @"pre_!!.309"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11)
  br i1 %12, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %13 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %14 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %13, i32 0, i32 1
  %15 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %16 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %15, i32 0, i32 0
  call void @"post_++.313"(%Token* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16)
  call void @"+=.311"(%"Vector[Token]"* %14, %Token* %"$tmpC")
  call void @dtor.228(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @reserve.306(%"Vector[Token]"* %this, i64 %n) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v8 = alloca double
  %tmp.v9 = alloca double
  %tmp.v10 = alloca i64
  %tmp.v11 = alloca double
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC12" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = call i64 @capacity.307(%"Vector[Token]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64, i64* %n.addr
  %4 = load i64, i64* %curCapacity
  %5 = icmp sle i64 %3, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64, i64* %n.addr
  store i64 8, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = icmp slt i64 %6, %7
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %tmp.v4
  %9 = load i64, i64* %tmp.v4
  store i64 %9, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block5

if_block5:                                        ; preds = %if_end3
  %10 = load i64, i64* %n.addr
  %11 = sitofp i64 %10 to double
  store double %11, double* %tmp.v8
  %12 = load double, double* %tmp.v8
  %13 = load i64, i64* %curCapacity
  %14 = sitofp i64 %13 to double
  store double %14, double* %tmp.v9
  %15 = load double, double* %tmp.v9
  %16 = call double @_Double_opMul(double 2.000000e+00, double %15)
  %17 = call i1 @_Double_opLT(double %12, double %16)
  br i1 %17, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %18 = load i64, i64* %curCapacity
  %19 = sitofp i64 %18 to double
  store double %19, double* %tmp.v11
  %20 = load double, double* %tmp.v11
  %21 = call double @_Double_opMul(double 2.000000e+00, double %20)
  %22 = fptoui double %21 to i64
  store i64 %22, i64* %tmp.v10
  %23 = load i64, i64* %tmp.v10
  store i64 %23, i64* %n.addr
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  %24 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %25 = call i64 @size.199(%"Vector[Token]"* %24)
  store i64 %25, i64* %curSize
  %26 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %27 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %26, i32 0, i32 0
  %28 = load i64, i64* %n.addr
  call void @reallocPtr.308(%"RawPtr[Token]"* %27, i64 %28)
  %29 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %30 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %29, i32 0, i32 1
  %31 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %32 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %31, i32 0, i32 0
  %33 = load %"RawPtr[Token]", %"RawPtr[Token]"* %32
  %34 = load i64, i64* %curSize
  call void @advance.205(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %33, i64 %34)
  call void @"=.202"(%"RawPtr[Token]"* %30, %"RawPtr[Token]"* %"$tmpC")
  %35 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %36 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %35, i32 0, i32 2
  %37 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %38 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %37, i32 0, i32 0
  %39 = load %"RawPtr[Token]", %"RawPtr[Token]"* %38
  %40 = load i64, i64* %n.addr
  call void @advance.205(%"RawPtr[Token]"* %"$tmpC12", %"RawPtr[Token]" %39, i64 %40)
  call void @"=.202"(%"RawPtr[Token]"* %36, %"RawPtr[Token]"* %"$tmpC12")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @capacity.307(%"Vector[Token]"* %this) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 2
  %3 = load %"RawPtr[Token]", %"RawPtr[Token]"* %2
  %4 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %5 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[Token]", %"RawPtr[Token]"* %5
  %7 = call i64 @diff.200(%"RawPtr[Token]" %3, %"RawPtr[Token]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr.308(%"RawPtr[Token]"* %this, i64 %n) #4 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %this.addr
  %2 = load %"RawPtr[Token]", %"RawPtr[Token]"* %1
  %3 = call i8* @bytePtr.201(%"RawPtr[Token]" %2)
  %4 = load i64, i64* %n.addr
  %5 = mul i64 %4, 72
  %6 = call i8* @realloc(i8* %3, i64 %5)
  %7 = bitcast i8* %6 to %Token*
  %8 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %this.addr
  %9 = getelementptr inbounds %"RawPtr[Token]", %"RawPtr[Token]"* %8, i32 0, i32 0
  store %Token* %7, %Token** %9
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"pre_!!.309"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r) #4 {
  %r.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  %2 = call i1 @isEmpty.310(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.310(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret i1 false
}

; Function Attrs: inlinehint nounwind
define internal void @"+=.311"(%"Vector[Token]"* %this, %Token* %value) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %value.addr = alloca %Token*
  store %Token* %value, %Token** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = load %Token*, %Token** %value.addr
  call void @pushBack.312(%"Vector[Token]"* %1, %Token* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack.312(%"Vector[Token]"* %this, %Token* %value) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %value.addr = alloca %Token*
  store %Token* %value, %Token** %value.addr
  %t = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v5 = alloca i64
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 1
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %3, i32 0, i32 2
  %5 = call i1 @"==.208"(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  store i64 2, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  %7 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %8 = call i64 @capacity.307(%"Vector[Token]"* %7)
  %9 = mul i64 %6, %8
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %11 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %10, i32 0, i32 1
  %12 = load %"RawPtr[Token]", %"RawPtr[Token]"* %11
  %13 = call %Token* @value.209(%"RawPtr[Token]" %12)
  %14 = load %Token*, %Token** %value.addr
  call void @ctor.190(%Token* %13, %Token* %14)
  %15 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %16 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %15, i32 0, i32 1
  %17 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %18 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %17, i32 0, i32 1
  %19 = load %"RawPtr[Token]", %"RawPtr[Token]"* %18
  call void @advance.210(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %19)
  call void @"=.202"(%"RawPtr[Token]"* %16, %"RawPtr[Token]"* %"$tmpC")
  ret void

if_block1:                                        ; preds = %if_then
  %20 = load i64, i64* %t
  store i64 2, i64* %tmp.v4
  %21 = load i64, i64* %tmp.v4
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %tmp.v5
  %23 = load i64, i64* %tmp.v5
  store i64 %23, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %24 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %25 = load i64, i64* %t
  call void @reserve.306(%"Vector[Token]"* %24, i64 %25)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @"post_++.313"(%Token* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r) #4 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %r, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  %res = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  call void @front.314(%Token* %res, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1)
  %2 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %r.addr
  call void @popFront.315(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %2)
  %3 = load %Token*, %Token** %_result.addr
  call void @ctor.190(%Token* %3, %Token* %res)
  call void @dtor.228(%Token* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.228(%Token* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @front.314(%Token* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 3
  %3 = load i1, i1* %2
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %5, i32 0, i32 3
  store i1 true, i1* %6
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @popFront.315(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %8 = load %Token*, %Token** %_result.addr
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 2
  call void @ctor.190(%Token* %8, %Token* %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront.315(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i1 @isEmpty.316(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, i32 0, i32 1
  %7 = load %Location*, %Location** %6
  call void @stepOver(%Location* %7)
  %8 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8, i32 0, i32 2
  %10 = getelementptr inbounds %Token, %Token* %9, i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v, i32 0)
  call void @"=.255"(%TokenType* %10, %TokenType* %tmp.v)
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 2
  %13 = getelementptr inbounds %Token, %Token* %12, i32 0, i32 2
  call void @clear(%String* %13)
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 2
  %16 = getelementptr inbounds %Token, %Token* %15, i32 0, i32 0
  %17 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %18 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, i32 0, i32 1
  %19 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %18, i32 0, i32 1
  %20 = load %Location*, %Location** %19
  call void @"=.248"(%Location* %16, %Location* %20)
  br label %if_end

if_else:                                          ; preds = %if_block
  %21 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %Token, %Token* %22, i32 0, i32 1
  %24 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @nextToken(%TokenType* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %24)
  call void @"=.255"(%TokenType* %23, %TokenType* %"$tmpC")
  %25 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %26 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %25, i32 0, i32 2
  %27 = getelementptr inbounds %Token, %Token* %26, i32 0, i32 0
  %28 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %29 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %28, i32 0, i32 1
  %30 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %29, i32 0, i32 1
  %31 = load %Location*, %Location** %30
  call void @"=.248"(%Location* %27, %Location* %31)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.316(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this) #4 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = call i1 @isEmpty.317(%"RangeWithLookahead[_CharSource]"* %2)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.317(%"RangeWithLookahead[_CharSource]"* %this) #4 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  %3 = call i1 @isEmpty.318(%"Vector[Char]"* %2)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.318(%"Vector[Char]"* %this) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %3, i32 0, i32 1
  %5 = call i1 @"==.188"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal void @stepOver(%Location* %l) #4 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %l.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 1
  %3 = load %Location*, %Location** %l.addr
  %4 = getelementptr inbounds %Location, %Location* %3, i32 0, i32 2
  call void @"=.250"(%LineCol* %2, %LineCol* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.319(%TokenType* %this, i32 %fdata) #3 {
  %this.addr = alloca %TokenType*
  store %TokenType* %this, %TokenType** %this.addr
  %fdata.addr = alloca i32
  store i32 %fdata, i32* %fdata.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i32, i32* %fdata.addr
  %2 = load %TokenType*, %TokenType** %this.addr
  %3 = getelementptr inbounds %TokenType, %TokenType* %2, i32 0, i32 0
  store i32 %1, i32* %3
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.320(%TokenType* %this) #3 {
  %this.addr = alloca %TokenType*
  store %TokenType* %this, %TokenType** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @clear(%String* %this) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %tmp.v = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = load %String*, %String** %this.addr
  %3 = getelementptr inbounds %String, %String* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char]", %"RawPtr[Char]"* %3
  %5 = call i8* @bytePtr(%"RawPtr[Char]" %4)
  %6 = load %String*, %String** %this.addr
  %7 = getelementptr inbounds %String, %String* %6, i32 0, i32 1
  %8 = load %"RawPtr[Char]", %"RawPtr[Char]"* %7
  %9 = call i8* @bytePtr(%"RawPtr[Char]" %8)
  call void @ctor.57(%StringRef* %tmp.v, i8* %5, i8* %9)
  %10 = load %StringRef, %StringRef* %tmp.v
  call void @remove(%String* %1, %StringRef %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove(%String* %this, %StringRef %range) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %range.addr = alloca %StringRef
  store %StringRef %range, %StringRef* %range.addr
  %rSize = alloca i64
  %rBegin = alloca %"RawPtr[Char]"
  %rEnd = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char]"
  %"$tmpC1" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size(%StringRef* %range.addr)
  store i64 %1, i64* %rSize
  %2 = load %StringRef, %StringRef* %range.addr
  call void @_frontPtr(%"RawPtr[Char]"* %rBegin, %StringRef %2)
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rBegin
  %4 = load i64, i64* %rSize
  store i64 %4, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %rEnd, %"RawPtr[Char]" %3, i64 %5)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %6 = load %String*, %String** %this.addr
  %7 = getelementptr inbounds %String, %String* %6, i32 0, i32 1
  %8 = call i1 @"==.188"(%"RawPtr[Char]"* %rEnd, %"RawPtr[Char]"* %7)
  %9 = xor i1 true, %8
  br i1 %9, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %10 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rBegin
  %11 = call i8* @value(%"RawPtr[Char]" %10)
  %12 = load i8, i8* %11
  %13 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rEnd
  %14 = call i8* @value(%"RawPtr[Char]" %13)
  %15 = load i8, i8* %14
  %16 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rBegin
  %17 = call i8* @value(%"RawPtr[Char]" %16)
  store i8 %15, i8* %17
  %18 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rBegin
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %18)
  call void @"=.184"(%"RawPtr[Char]"* %rBegin, %"RawPtr[Char]"* %"$tmpC")
  %19 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rEnd
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC1", %"RawPtr[Char]" %19)
  call void @"=.184"(%"RawPtr[Char]"* %rEnd, %"RawPtr[Char]"* %"$tmpC1")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %20 = load %String*, %String** %this.addr
  %21 = getelementptr inbounds %String, %String* %20, i32 0, i32 1
  call void @"=.184"(%"RawPtr[Char]"* %21, %"RawPtr[Char]"* %rBegin)
  ret void
}

; Function Attrs: noinline nounwind
define void @nextToken(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #5 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %loc = alloca %Location*
  %tmp.v = alloca i32
  %tmp.v1 = alloca i32
  %ch = alloca i8
  %ch2 = alloca i8
  %tmp.v9 = alloca %"$lambdaEnclosureData"
  %ch16 = alloca i8
  %ch217 = alloca i8
  %tmp.v21 = alloca %"$lambdaEnclosureData.0"
  %"$tmpC" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %tmp.v26 = alloca %"$lambdaEnclosureData.1"
  %tmp.v39 = alloca %"$lambdaEnclosureData.2"
  %tmp.v48 = alloca i64
  %c1 = alloca i8
  %c2 = alloca i8
  %tmp.v64 = alloca %String
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef65 = alloca %StringRef
  %tmp.v75 = alloca i64
  %"$tmpC180" = alloca %String
  %tmp.StringRef181 = alloca %StringRef
  %tmp.StringRef182 = alloca %StringRef
  %tmp.v183 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 1
  %4 = load %Location*, %Location** %3
  store %Location* %4, %Location** %loc
  br label %if_block

if_block:                                         ; preds = %code
  %5 = load %Location*, %Location** %loc
  %6 = getelementptr inbounds %Location, %Location* %5, i32 0, i32 1
  %7 = getelementptr inbounds %LineCol, %LineCol* %6, i32 0, i32 0
  %8 = load i32, i32* %7
  store i32 1, i32* %tmp.v
  %9 = load i32, i32* %tmp.v
  %10 = icmp eq i32 %8, %9
  br i1 %10, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 1
  %13 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %12)
  store i8 %13, i8* %ch
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %15 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14)
  store i8 %15, i8* %ch2
  br label %if_block2

if_end:                                           ; preds = %if_end4, %cond.end
  br i1 %10, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %16 = load %Location*, %Location** %loc
  %17 = getelementptr inbounds %Location, %Location* %16, i32 0, i32 1
  %18 = getelementptr inbounds %LineCol, %LineCol* %17, i32 0, i32 1
  %19 = load i32, i32* %18
  store i32 1, i32* %tmp.v1
  %20 = load i32, i32* %tmp.v1
  %21 = icmp eq i32 %19, %20
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %21, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

if_block2:                                        ; preds = %if_then
  %22 = load i8, i8* %ch
  %23 = icmp eq i8 %22, 35
  br i1 %23, label %cond.true5, label %cond.false6

if_then3:                                         ; preds = %cond.end7
  %24 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %25 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %24, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %25)
  %26 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %27 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %26, i32 0, i32 1
  %28 = load %"$lambdaEnclosureData", %"$lambdaEnclosureData"* %tmp.v9
  call void @advanceIf(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %27, %"$lambdaEnclosureData" %28)
  br label %if_block10

if_end4:                                          ; preds = %if_end12, %cond.end7
  br label %if_end

cond.true5:                                       ; preds = %if_block2
  %29 = load i8, i8* %ch2
  %30 = icmp eq i8 %29, 33
  br label %cond.end7

cond.false6:                                      ; preds = %if_block2
  br label %cond.end7

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond.res8 = phi i1 [ %30, %cond.true5 ], [ false, %cond.false6 ]
  br i1 %cond.res8, label %if_then3, label %if_end4

if_block10:                                       ; preds = %if_then3
  %31 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %32 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %31, i32 0, i32 1
  %33 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %32)
  br i1 %33, label %if_then11, label %if_end12

if_then11:                                        ; preds = %if_block10
  %34 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %35 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %34, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %35)
  br label %if_end12

if_end12:                                         ; preds = %if_then11, %if_block10
  br label %if_end4

cond_destruct_alt1:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br label %while_block

while_block:                                      ; preds = %while_step, %cond_destruct_end
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %36 = load %Location*, %Location** %loc
  call void @stepOver(%Location* %36)
  %37 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %38 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %37, i32 0, i32 2
  %39 = getelementptr inbounds %Token, %Token* %38, i32 0, i32 2
  call void @clear(%String* %39)
  br label %if_block13

while_step:                                       ; preds = %dumy_block184, %if_then69, %if_end63, %if_then33, %if_then24, %if_then19
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void

if_block13:                                       ; preds = %while_body
  %40 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %41 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %40, i32 0, i32 1
  %42 = call i1 @isEmpty.316(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %41)
  br i1 %42, label %if_then14, label %if_end15

if_then14:                                        ; preds = %if_block13
  %43 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %43, i32 0)
  ret void

if_end15:                                         ; preds = %dumy_block, %if_block13
  %44 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %45 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %44, i32 0, i32 1
  %46 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %45)
  store i8 %46, i8* %ch16
  %47 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %48 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %47)
  store i8 %48, i8* %ch217
  br label %if_block18

dumy_block:                                       ; No predecessors!
  br label %if_end15

if_block18:                                       ; preds = %if_end15
  %49 = load i8, i8* %ch16
  %50 = icmp eq i8 %49, 32
  br i1 %50, label %if_then19, label %if_end20

if_then19:                                        ; preds = %if_block18
  %51 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %52 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %51, i32 0, i32 1
  %53 = load %"$lambdaEnclosureData.0", %"$lambdaEnclosureData.0"* %tmp.v21
  call void @advanceIf.345(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %52, %"$lambdaEnclosureData.0" %53)
  br label %while_step

if_end20:                                         ; preds = %dumy_block22, %if_block18
  br label %if_block23

dumy_block22:                                     ; No predecessors!
  br label %if_end20

if_block23:                                       ; preds = %if_end20
  %54 = load i8, i8* %ch16
  %55 = icmp eq i8 %54, 9
  br i1 %55, label %if_then24, label %if_end25

if_then24:                                        ; preds = %if_block23
  %56 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %57 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %58 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.11, i32 0, i32 0), i8** %57
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.11, i32 0, i32 29), i8** %58
  %59 = load %StringRef, %StringRef* %tmp.StringRef
  call void @toString.353(%String* %"$tmpC", %StringRef %59)
  call void @reportError.352(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %56, %String* %"$tmpC")
  call void @dtor.229(%String* %"$tmpC")
  %60 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %61 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %60, i32 0, i32 1
  %62 = load %"$lambdaEnclosureData.1", %"$lambdaEnclosureData.1"* %tmp.v26
  call void @advanceIf.354(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %61, %"$lambdaEnclosureData.1" %62)
  br label %while_step

if_end25:                                         ; preds = %dumy_block27, %if_block23
  br label %if_block28

dumy_block27:                                     ; No predecessors!
  br label %if_end25

if_block28:                                       ; preds = %if_end25
  %63 = load i8, i8* %ch16
  %64 = icmp eq i8 %63, 10
  br i1 %64, label %if_then29, label %if_end30

if_then29:                                        ; preds = %if_block28
  %65 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %66 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %65, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %66)
  %67 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %67, i32 1)
  ret void

if_end30:                                         ; preds = %dumy_block31, %if_block28
  br label %if_block32

dumy_block31:                                     ; No predecessors!
  br label %if_end30

if_block32:                                       ; preds = %if_end30
  %68 = load i8, i8* %ch16
  %69 = icmp eq i8 %68, 47
  br i1 %69, label %cond.true35, label %cond.false36

if_then33:                                        ; preds = %cond.end37
  %70 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %71 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %70, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %71)
  %72 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %73 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %72, i32 0, i32 1
  %74 = load %"$lambdaEnclosureData.2", %"$lambdaEnclosureData.2"* %tmp.v39
  call void @advanceIf.361(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %73, %"$lambdaEnclosureData.2" %74)
  br label %while_step

if_end34:                                         ; preds = %dumy_block40, %cond.end37
  br label %if_block41

cond.true35:                                      ; preds = %if_block32
  %75 = load i8, i8* %ch217
  %76 = icmp eq i8 %75, 47
  br label %cond.end37

cond.false36:                                     ; preds = %if_block32
  br label %cond.end37

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond.res38 = phi i1 [ %76, %cond.true35 ], [ false, %cond.false36 ]
  br i1 %cond.res38, label %if_then33, label %if_end34

dumy_block40:                                     ; No predecessors!
  br label %if_end34

if_block41:                                       ; preds = %if_end34
  %77 = load i8, i8* %ch16
  %78 = icmp eq i8 %77, 47
  br i1 %78, label %cond.true44, label %cond.false45

if_then42:                                        ; preds = %cond.end46
  %79 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %80 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %79, i32 0, i32 1
  store i64 2, i64* %tmp.v48
  %81 = load i64, i64* %tmp.v48
  call void @advance.368(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %80, i64 %81)
  store i8 97, i8* %c1
  store i8 97, i8* %c2
  br label %while_block49

if_end43:                                         ; preds = %dumy_block67, %cond.end46
  br label %if_block68

cond.true44:                                      ; preds = %if_block41
  %82 = load i8, i8* %ch217
  %83 = icmp eq i8 %82, 42
  br label %cond.end46

cond.false45:                                     ; preds = %if_block41
  br label %cond.end46

cond.end46:                                       ; preds = %cond.false45, %cond.true44
  %cond.res47 = phi i1 [ %83, %cond.true44 ], [ false, %cond.false45 ]
  br i1 %cond.res47, label %if_then42, label %if_end43

while_block49:                                    ; preds = %while_step51, %if_then42
  %84 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %85 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %84, i32 0, i32 1
  %86 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %85)
  br i1 %86, label %cond.true53, label %cond.false54

while_body50:                                     ; preds = %cond.end55
  %87 = load i8, i8* %c2
  store i8 %87, i8* %c1
  %88 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %89 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %88, i32 0, i32 1
  %90 = call i8 @"pre_++.369"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %89)
  store i8 %90, i8* %c2
  br label %while_step51

while_step51:                                     ; preds = %while_body50
  br label %while_block49

while_end52:                                      ; preds = %cond.end55
  br label %if_block61

cond.true53:                                      ; preds = %while_block49
  %91 = load i8, i8* %c1
  %92 = icmp ne i8 %91, 42
  br i1 %92, label %cond.true56, label %cond.false57

cond.false54:                                     ; preds = %while_block49
  br label %cond.end55

cond.end55:                                       ; preds = %cond.false54, %cond.end58
  %cond.res60 = phi i1 [ %cond.res59, %cond.end58 ], [ false, %cond.false54 ]
  br i1 %cond.res60, label %while_body50, label %while_end52

cond.true56:                                      ; preds = %cond.true53
  br label %cond.end58

cond.false57:                                     ; preds = %cond.true53
  %93 = load i8, i8* %c2
  %94 = icmp ne i8 %93, 47
  br label %cond.end58

cond.end58:                                       ; preds = %cond.false57, %cond.true56
  %cond.res59 = phi i1 [ true, %cond.true56 ], [ %94, %cond.false57 ]
  br label %cond.end55

if_block61:                                       ; preds = %while_end52
  %95 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %96 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %95, i32 0, i32 1
  %97 = call i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %96)
  br i1 %97, label %if_then62, label %if_end63

if_then62:                                        ; preds = %if_block61
  %98 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %99 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef65, i32 0, i32 0
  %100 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef65, i32 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.12, i32 0, i32 0), i8** %99
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.12, i32 0, i32 32), i8** %100
  %101 = load %StringRef, %StringRef* %tmp.StringRef65
  store %StringRef %101, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %tmp.v64, %StringRef* %"$tmpForRef")
  call void @reportError.352(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %98, %String* %tmp.v64)
  call void @dtor.229(%String* %tmp.v64)
  %102 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %102, i32 0)
  ret void

if_end63:                                         ; preds = %dumy_block66, %if_block61
  %103 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %104 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %103, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %104)
  br label %while_step

dumy_block66:                                     ; No predecessors!
  br label %if_end63

dumy_block67:                                     ; No predecessors!
  br label %if_end43

if_block68:                                       ; preds = %if_end43
  %105 = load i8, i8* %ch16
  %106 = icmp eq i8 %105, 92
  br i1 %106, label %cond.true71, label %cond.false72

if_then69:                                        ; preds = %cond.end73
  %107 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %108 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %107, i32 0, i32 1
  store i64 2, i64* %tmp.v75
  %109 = load i64, i64* %tmp.v75
  call void @advance.368(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %108, i64 %109)
  br label %while_step

if_end70:                                         ; preds = %dumy_block76, %cond.end73
  br label %if_block77

cond.true71:                                      ; preds = %if_block68
  %110 = load i8, i8* %ch217
  %111 = icmp eq i8 %110, 10
  br label %cond.end73

cond.false72:                                     ; preds = %if_block68
  br label %cond.end73

cond.end73:                                       ; preds = %cond.false72, %cond.true71
  %cond.res74 = phi i1 [ %111, %cond.true71 ], [ false, %cond.false72 ]
  br i1 %cond.res74, label %if_then69, label %if_end70

dumy_block76:                                     ; No predecessors!
  br label %if_end70

if_block77:                                       ; preds = %if_end70
  %112 = load i8, i8* %ch16
  %113 = icmp eq i8 %112, 39
  br i1 %113, label %if_then78, label %if_end79

if_then78:                                        ; preds = %if_block77
  %114 = load %TokenType*, %TokenType** %_result.addr
  %115 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @parseString(%TokenType* %114, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %115, i8 39)
  ret void

if_end79:                                         ; preds = %dumy_block80, %if_block77
  br label %if_block81

dumy_block80:                                     ; No predecessors!
  br label %if_end79

if_block81:                                       ; preds = %if_end79
  %116 = load i8, i8* %ch16
  %117 = icmp eq i8 %116, 34
  br i1 %117, label %if_then82, label %if_end83

if_then82:                                        ; preds = %if_block81
  %118 = load %TokenType*, %TokenType** %_result.addr
  %119 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @parseString(%TokenType* %118, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %119, i8 34)
  ret void

if_end83:                                         ; preds = %dumy_block84, %if_block81
  br label %if_block85

dumy_block84:                                     ; No predecessors!
  br label %if_end83

if_block85:                                       ; preds = %if_end83
  %120 = load i8, i8* %ch16
  %121 = icmp eq i8 %120, 60
  br i1 %121, label %cond.true88, label %cond.false89

if_then86:                                        ; preds = %cond.end90
  %122 = load %TokenType*, %TokenType** %_result.addr
  %123 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @parseStringNE(%TokenType* %122, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %123)
  ret void

if_end87:                                         ; preds = %dumy_block92, %cond.end90
  br label %if_block93

cond.true88:                                      ; preds = %if_block85
  %124 = load i8, i8* %ch217
  %125 = icmp eq i8 %124, 123
  br label %cond.end90

cond.false89:                                     ; preds = %if_block85
  br label %cond.end90

cond.end90:                                       ; preds = %cond.false89, %cond.true88
  %cond.res91 = phi i1 [ %125, %cond.true88 ], [ false, %cond.false89 ]
  br i1 %cond.res91, label %if_then86, label %if_end87

dumy_block92:                                     ; No predecessors!
  br label %if_end87

if_block93:                                       ; preds = %if_end87
  %126 = load i8, i8* %ch16
  %127 = icmp eq i8 %126, 123
  br i1 %127, label %if_then94, label %if_end95

if_then94:                                        ; preds = %if_block93
  %128 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %129 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %128, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %129)
  %130 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %130, i32 25)
  ret void

if_end95:                                         ; preds = %dumy_block96, %if_block93
  br label %if_block97

dumy_block96:                                     ; No predecessors!
  br label %if_end95

if_block97:                                       ; preds = %if_end95
  %131 = load i8, i8* %ch16
  %132 = icmp eq i8 %131, 123
  br i1 %132, label %if_then98, label %if_end99

if_then98:                                        ; preds = %if_block97
  %133 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %134 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %133, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %134)
  %135 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %135, i32 25)
  ret void

if_end99:                                         ; preds = %dumy_block100, %if_block97
  br label %if_block101

dumy_block100:                                    ; No predecessors!
  br label %if_end99

if_block101:                                      ; preds = %if_end99
  %136 = load i8, i8* %ch16
  %137 = icmp eq i8 %136, 125
  br i1 %137, label %if_then102, label %if_end103

if_then102:                                       ; preds = %if_block101
  %138 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %139 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %138, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %139)
  %140 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %140, i32 26)
  ret void

if_end103:                                        ; preds = %dumy_block104, %if_block101
  br label %if_block105

dumy_block104:                                    ; No predecessors!
  br label %if_end103

if_block105:                                      ; preds = %if_end103
  %141 = load i8, i8* %ch16
  %142 = icmp eq i8 %141, 91
  br i1 %142, label %if_then106, label %if_end107

if_then106:                                       ; preds = %if_block105
  %143 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %144 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %143, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %144)
  %145 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %145, i32 27)
  ret void

if_end107:                                        ; preds = %dumy_block108, %if_block105
  br label %if_block109

dumy_block108:                                    ; No predecessors!
  br label %if_end107

if_block109:                                      ; preds = %if_end107
  %146 = load i8, i8* %ch16
  %147 = icmp eq i8 %146, 93
  br i1 %147, label %if_then110, label %if_end111

if_then110:                                       ; preds = %if_block109
  %148 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %149 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %148, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %149)
  %150 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %150, i32 28)
  ret void

if_end111:                                        ; preds = %dumy_block112, %if_block109
  br label %if_block113

dumy_block112:                                    ; No predecessors!
  br label %if_end111

if_block113:                                      ; preds = %if_end111
  %151 = load i8, i8* %ch16
  %152 = icmp eq i8 %151, 40
  br i1 %152, label %if_then114, label %if_end115

if_then114:                                       ; preds = %if_block113
  %153 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %154 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %153, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %154)
  %155 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %155, i32 29)
  ret void

if_end115:                                        ; preds = %dumy_block116, %if_block113
  br label %if_block117

dumy_block116:                                    ; No predecessors!
  br label %if_end115

if_block117:                                      ; preds = %if_end115
  %156 = load i8, i8* %ch16
  %157 = icmp eq i8 %156, 41
  br i1 %157, label %if_then118, label %if_end119

if_then118:                                       ; preds = %if_block117
  %158 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %159 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %158, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %159)
  %160 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %160, i32 30)
  ret void

if_end119:                                        ; preds = %dumy_block120, %if_block117
  br label %if_block121

dumy_block120:                                    ; No predecessors!
  br label %if_end119

if_block121:                                      ; preds = %if_end119
  %161 = load i8, i8* %ch16
  %162 = icmp eq i8 %161, 59
  br i1 %162, label %if_then122, label %if_end123

if_then122:                                       ; preds = %if_block121
  %163 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %164 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %163, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %164)
  %165 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %165, i32 32)
  ret void

if_end123:                                        ; preds = %dumy_block124, %if_block121
  br label %if_block125

dumy_block124:                                    ; No predecessors!
  br label %if_end123

if_block125:                                      ; preds = %if_end123
  %166 = load i8, i8* %ch16
  %167 = icmp eq i8 %166, 44
  br i1 %167, label %if_then126, label %if_end127

if_then126:                                       ; preds = %if_block125
  %168 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %169 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %168, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %169)
  %170 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %170, i32 33)
  ret void

if_end127:                                        ; preds = %dumy_block128, %if_block125
  br label %if_block129

dumy_block128:                                    ; No predecessors!
  br label %if_end127

if_block129:                                      ; preds = %if_end127
  %171 = load i8, i8* %ch16
  %172 = icmp eq i8 %171, 96
  br i1 %172, label %if_then130, label %if_end131

if_then130:                                       ; preds = %if_block129
  %173 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %174 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %173, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %174)
  %175 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %175, i32 35)
  ret void

if_end131:                                        ; preds = %dumy_block132, %if_block129
  br label %if_block133

dumy_block132:                                    ; No predecessors!
  br label %if_end131

if_block133:                                      ; preds = %if_end131
  %176 = load i8, i8* %ch16
  %177 = icmp eq i8 %176, 58
  br i1 %177, label %cond.true136, label %cond.false137

if_then134:                                       ; preds = %cond.end138
  %178 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %179 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %178, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %179)
  %180 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %180, i32 31)
  ret void

if_end135:                                        ; preds = %dumy_block140, %cond.end138
  br label %if_block141

cond.true136:                                     ; preds = %if_block133
  %181 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %182 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %181)
  %183 = call i1 @isOpChar(i8 %182)
  %184 = xor i1 true, %183
  br label %cond.end138

cond.false137:                                    ; preds = %if_block133
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond.res139 = phi i1 [ %184, %cond.true136 ], [ false, %cond.false137 ]
  br i1 %cond.res139, label %if_then134, label %if_end135

dumy_block140:                                    ; No predecessors!
  br label %if_end135

if_block141:                                      ; preds = %if_end135
  %185 = load i8, i8* %ch16
  %186 = icmp eq i8 %185, 61
  br i1 %186, label %cond.true144, label %cond.false145

if_then142:                                       ; preds = %cond.end146
  %187 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %188 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %187, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %188)
  %189 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %189, i32 36)
  ret void

if_end143:                                        ; preds = %dumy_block148, %cond.end146
  br label %if_block149

cond.true144:                                     ; preds = %if_block141
  %190 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %191 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %190)
  %192 = call i1 @isOpChar(i8 %191)
  %193 = xor i1 true, %192
  br label %cond.end146

cond.false145:                                    ; preds = %if_block141
  br label %cond.end146

cond.end146:                                      ; preds = %cond.false145, %cond.true144
  %cond.res147 = phi i1 [ %193, %cond.true144 ], [ false, %cond.false145 ]
  br i1 %cond.res147, label %if_then142, label %if_end143

dumy_block148:                                    ; No predecessors!
  br label %if_end143

if_block149:                                      ; preds = %if_end143
  %194 = load i8, i8* %ch16
  %195 = call i1 @isOpCharDot(i8 %194)
  br i1 %195, label %if_then150, label %if_end151

if_then150:                                       ; preds = %if_block149
  br label %if_block152

if_end151:                                        ; preds = %if_end154, %if_block149
  br label %if_block156

if_block152:                                      ; preds = %if_then150
  %196 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %197 = call i1 @parseOperator(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %196)
  br i1 %197, label %if_then153, label %if_end154

if_then153:                                       ; preds = %if_block152
  %198 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %198, i32 38)
  ret void

if_end154:                                        ; preds = %dumy_block155, %if_block152
  br label %if_end151

dumy_block155:                                    ; No predecessors!
  br label %if_end154

if_block156:                                      ; preds = %if_end151
  %199 = load i8, i8* %ch16
  %200 = icmp eq i8 %199, 46
  br i1 %200, label %cond.true159, label %cond.false160

if_then157:                                       ; preds = %cond.end161
  %201 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %202 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %201, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %202)
  %203 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %203, i32 34)
  ret void

if_end158:                                        ; preds = %dumy_block163, %cond.end161
  br label %if_block164

cond.true159:                                     ; preds = %if_block156
  %204 = load i8, i8* %ch217
  %205 = call i1 @isDigit(i8 %204)
  %206 = xor i1 true, %205
  br label %cond.end161

cond.false160:                                    ; preds = %if_block156
  br label %cond.end161

cond.end161:                                      ; preds = %cond.false160, %cond.true159
  %cond.res162 = phi i1 [ %206, %cond.true159 ], [ false, %cond.false160 ]
  br i1 %cond.res162, label %if_then157, label %if_end158

dumy_block163:                                    ; No predecessors!
  br label %if_end158

if_block164:                                      ; preds = %if_end158
  %207 = load i8, i8* %ch16
  %208 = call i1 @isAlpha(i8 %207)
  br i1 %208, label %cond.true167, label %cond.false168

if_then165:                                       ; preds = %cond.end169
  %209 = load %TokenType*, %TokenType** %_result.addr
  %210 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @parseIdentifer(%TokenType* %209, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %210)
  ret void

if_end166:                                        ; preds = %dumy_block171, %cond.end169
  br label %if_block172

cond.true167:                                     ; preds = %if_block164
  br label %cond.end169

cond.false168:                                    ; preds = %if_block164
  %211 = load i8, i8* %ch16
  %212 = icmp eq i8 %211, 95
  br label %cond.end169

cond.end169:                                      ; preds = %cond.false168, %cond.true167
  %cond.res170 = phi i1 [ true, %cond.true167 ], [ %212, %cond.false168 ]
  br i1 %cond.res170, label %if_then165, label %if_end166

dumy_block171:                                    ; No predecessors!
  br label %if_end166

if_block172:                                      ; preds = %if_end166
  %213 = load i8, i8* %ch16
  %214 = call i1 @isDigit(i8 %213)
  br i1 %214, label %cond.true175, label %cond.false176

if_then173:                                       ; preds = %cond.end177
  %215 = load %TokenType*, %TokenType** %_result.addr
  %216 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @parseNumeric(%TokenType* %215, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %216)
  ret void

if_end174:                                        ; preds = %dumy_block179, %cond.end177
  %217 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %218 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef181, i32 0, i32 0
  %219 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef181, i32 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.41, i32 0, i32 0), i8** %218
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.41, i32 0, i32 26), i8** %219
  %220 = load %StringRef, %StringRef* %tmp.StringRef181
  %221 = load i8, i8* %ch16
  %222 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef182, i32 0, i32 0
  %223 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef182, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.42, i32 0, i32 0), i8** %222
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.42, i32 0, i32 3), i8** %223
  %224 = load %StringRef, %StringRef* %tmp.StringRef182
  %225 = load i8, i8* %ch16
  call void @_ass_32_8z(i32* %tmp.v183, i8 %225)
  %226 = load i32, i32* %tmp.v183
  call void @toString.378(%String* %"$tmpC180", %StringRef %220, i8 %221, %StringRef %224, i32 %226, i8 41)
  call void @reportError.352(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %217, %String* %"$tmpC180")
  call void @dtor.229(%String* %"$tmpC180")
  %227 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %228 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %227, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %228)
  %229 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %229, i32 0)
  ret void

cond.true175:                                     ; preds = %if_block172
  br label %cond.end177

cond.false176:                                    ; preds = %if_block172
  %230 = load i8, i8* %ch16
  %231 = icmp eq i8 %230, 46
  br label %cond.end177

cond.end177:                                      ; preds = %cond.false176, %cond.true175
  %cond.res178 = phi i1 [ true, %cond.true175 ], [ %231, %cond.false176 ]
  br i1 %cond.res178, label %if_then173, label %if_end174

dumy_block179:                                    ; No predecessors!
  br label %if_end174

dumy_block184:                                    ; No predecessors!
  br label %while_step
}

; Function Attrs: inlinehint nounwind
define internal i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #4 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %2 = call i8 @front.321(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  ret i8 %2
}

; Function Attrs: inlinehint nounwind
define internal i8 @front.321(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this) #4 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = call i8 @front.322(%"RangeWithLookahead[_CharSource]"* %2)
  ret i8 %3
}

; Function Attrs: inlinehint nounwind
define internal i8 @front.322(%"RangeWithLookahead[_CharSource]"* %this) #4 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  %3 = call i8* @front.323(%"Vector[Char]"* %2)
  %4 = load i8, i8* %3
  ret i8 %4
}

; Function Attrs: inlinehint nounwind
define internal i8* @front.323(%"Vector[Char]"* %this) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  %4 = call i8* @value(%"RawPtr[Char]" %3)
  ret i8* %4
}

; Function Attrs: inlinehint nounwind
define internal i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 0
  store i32 1, i32* %tmp.v
  %4 = load i32, i32* %tmp.v
  %5 = call i8 @peek(%"RangeWithLookahead[_CharSource]"* %3, i32 %4)
  ret i8 %5
}

; Function Attrs: inlinehint nounwind
define internal i8 @peek(%"RangeWithLookahead[_CharSource]"* %this, i32 %n) #4 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  %tmp.v = alloca i64
  %"$tmpForRef" = alloca i8
  %tmp.v1 = alloca i64
  %tmp.v2 = alloca i64
  %tmp.v3 = alloca i8
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load i32, i32* %n.addr
  %2 = zext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %5 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %4, i32 0, i32 1
  %6 = call i64 @size.183(%"Vector[Char]"* %5)
  %7 = icmp sge i64 %3, %6
  br i1 %7, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %8 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %8, i32 0, i32 1
  %10 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %10, i32 0, i32 0
  %12 = call i8 @"post_++.303"(%_CharSource* %11)
  store i8 %12, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char]"* %9, i8* %"$tmpForRef")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block

cond.true:                                        ; preds = %while_block
  %13 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %14 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %13, i32 0, i32 0
  %15 = call i1 @"pre_!!"(%_CharSource* %14)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %15, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block:                                         ; preds = %while_end
  %16 = load i32, i32* %n.addr
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %tmp.v1
  %18 = load i64, i64* %tmp.v1
  %19 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %20 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %19, i32 0, i32 1
  %21 = call i64 @size.183(%"Vector[Char]"* %20)
  %22 = icmp slt i64 %18, %21
  br i1 %22, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %23 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %24 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %23, i32 0, i32 1
  %25 = load i32, i32* %n.addr
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %tmp.v2
  %27 = load i64, i64* %tmp.v2
  %28 = call i8* @"().324"(%"Vector[Char]"* %24, i64 %27)
  %29 = load i8, i8* %28
  ret i8 %29

if_else:                                          ; preds = %if_block
  store i8 0, i8* %tmp.v3
  %30 = load i8, i8* %tmp.v3
  ret i8 %30

if_end:                                           ; preds = %dumy_block4, %dumy_block
  unreachable

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block4:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i8* @"().324"(%"Vector[Char]"* %this, i64 %index) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  %4 = load i64, i64* %index.addr
  call void @advance(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %3, i64 %4)
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %6 = call i8* @value(%"RawPtr[Char]" %5)
  ret i8* %6
}

; Function Attrs: inlinehint nounwind
define internal void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this) #4 {
  %this.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %this, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %tmp.v = alloca i32
  %tmp.v1 = alloca i32
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %2 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1, i32 0, i32 0
  %3 = call i8 @"pre_*.326"(%"RangeWithLookahead[_CharSource]"* %2)
  %4 = icmp eq i8 %3, 10
  br i1 %4, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %6 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5, i32 0, i32 1
  %7 = load %Location*, %Location** %6
  store i32 1, i32* %tmp.v
  %8 = load i32, i32* %tmp.v
  call void @addLines(%Location* %7, i32 %8)
  br label %if_end

if_else:                                          ; preds = %if_block
  %9 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %10 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %9, i32 0, i32 1
  %11 = load %Location*, %Location** %10
  store i32 1, i32* %tmp.v1
  %12 = load i32, i32* %tmp.v1
  call void @addColumns(%Location* %11, i32 %12)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  %13 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %this.addr
  %14 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13, i32 0, i32 0
  call void @popFront.327(%"RangeWithLookahead[_CharSource]"* %14)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8 @"pre_*.326"(%"RangeWithLookahead[_CharSource]"* %r) #4 {
  %r.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %r, %"RangeWithLookahead[_CharSource]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %r.addr
  %2 = call i8 @front.322(%"RangeWithLookahead[_CharSource]"* %1)
  ret i8 %2
}

; Function Attrs: inlinehint nounwind
define internal void @addLines(%Location* %l, i32 %count) #4 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %count.addr = alloca i32
  store i32 %count, i32* %count.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %l.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 2
  %3 = getelementptr inbounds %LineCol, %LineCol* %2, i32 0, i32 0
  %4 = load i32, i32* %3
  %5 = load i32, i32* %count.addr
  %6 = add i32 %4, %5
  %7 = load %Location*, %Location** %l.addr
  %8 = getelementptr inbounds %Location, %Location* %7, i32 0, i32 2
  %9 = getelementptr inbounds %LineCol, %LineCol* %8, i32 0, i32 0
  store i32 %6, i32* %9
  store i32 1, i32* %tmp.v
  %10 = load i32, i32* %tmp.v
  %11 = load %Location*, %Location** %l.addr
  %12 = getelementptr inbounds %Location, %Location* %11, i32 0, i32 2
  %13 = getelementptr inbounds %LineCol, %LineCol* %12, i32 0, i32 1
  store i32 %10, i32* %13
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @addColumns(%Location* %l, i32 %count) #4 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %count.addr = alloca i32
  store i32 %count, i32* %count.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %l.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 2
  %3 = getelementptr inbounds %LineCol, %LineCol* %2, i32 0, i32 1
  %4 = load i32, i32* %3
  %5 = load i32, i32* %count.addr
  %6 = add i32 %4, %5
  %7 = load %Location*, %Location** %l.addr
  %8 = getelementptr inbounds %Location, %Location* %7, i32 0, i32 2
  %9 = getelementptr inbounds %LineCol, %LineCol* %8, i32 0, i32 1
  store i32 %6, i32* %9
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront.327(%"RangeWithLookahead[_CharSource]"* %this) #4 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %tmp.v = alloca i64
  %"$tmpForRef" = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %1, i32 0, i32 1
  store i64 0, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  call void @remove.328(%"Vector[Char]"* %2, i64 %3)
  br label %if_block

if_block:                                         ; preds = %code
  %4 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %5 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %4, i32 0, i32 1
  %6 = call i1 @isEmpty.318(%"Vector[Char]"* %5)
  br i1 %6, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %7 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %7, i32 0, i32 1
  %9 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %10 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %9, i32 0, i32 0
  %11 = call i8 @"post_++.303"(%_CharSource* %10)
  store i8 %11, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char]"* %8, i8* %"$tmpForRef")
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  ret void

cond.true:                                        ; preds = %if_block
  %12 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %13 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %12, i32 0, i32 0
  %14 = call i1 @"pre_!!"(%_CharSource* %13)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %14, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @remove.328(%"Vector[Char]"* %this, i64 %index) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %r = alloca %"ContiguousMemoryRange[Char]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  call void @all.329(%"ContiguousMemoryRange[Char]"* %r, %"Vector[Char]"* %1)
  %2 = load i64, i64* %index.addr
  call void @popFront.331(%"ContiguousMemoryRange[Char]"* %r, i64 %2)
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %4 = call i64 @size.183(%"Vector[Char]"* %3)
  %5 = load i64, i64* %index.addr
  %6 = call i64 @_SizeType_opMinus(i64 %4, i64 %5)
  store i64 1, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = call i64 @_SizeType_opMinus(i64 %6, i64 %7)
  call void @popBack.332(%"ContiguousMemoryRange[Char]"* %r, i64 %8)
  %9 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %10 = load %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %r
  call void @remove.333(%"Vector[Char]"* %9, %"ContiguousMemoryRange[Char]" %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @all.329(%"ContiguousMemoryRange[Char]"* sret %_result, %"Vector[Char]"* %this) #4 {
  %_result.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %_result, %"ContiguousMemoryRange[Char]"** %_result.addr
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %_result.addr
  %2 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %3 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char]", %"RawPtr[Char]"* %3
  %5 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[Char]", %"RawPtr[Char]"* %6
  call void @ctor.330(%"ContiguousMemoryRange[Char]"* %1, %"RawPtr[Char]" %4, %"RawPtr[Char]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.330(%"ContiguousMemoryRange[Char]"* %this, %"RawPtr[Char]" %f_begin, %"RawPtr[Char]" %f_end) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"** %this.addr
  %f_begin.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %f_begin, %"RawPtr[Char]"* %f_begin.addr
  %f_end.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %f_end, %"RawPtr[Char]"* %f_end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %1, i32 0, i32 0
  call void @ctor.187(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %f_begin.addr)
  %3 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %3, i32 0, i32 1
  call void @ctor.187(%"RawPtr[Char]"* %4, %"RawPtr[Char]"* %f_end.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront.331(%"ContiguousMemoryRange[Char]"* %this, i64 %n) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %4
  %6 = load i64, i64* %n.addr
  store i64 %6, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %5, i64 %7)
  call void @"=.184"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %"$tmpC")
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack.332(%"ContiguousMemoryRange[Char]"* %this, i64 %n) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %4
  %6 = load i64, i64* %n.addr
  store i64 %6, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = sub i64 0, %7
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %5, i64 %8)
  call void @"=.184"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove.333(%"Vector[Char]"* %this, %"ContiguousMemoryRange[Char]" %range) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %range.addr = alloca %"ContiguousMemoryRange[Char]"
  store %"ContiguousMemoryRange[Char]" %range, %"ContiguousMemoryRange[Char]"* %range.addr
  %rBegin = alloca %"RawPtr[Char]"
  %rEnd = alloca %"RawPtr[Char]"
  %"$rangeVar" = alloca %"ContiguousMemoryRange[Char]"
  %el = alloca i8*
  %"$tmpC" = alloca %"RawPtr[Char]"
  %"$tmpC5" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %range.addr
  call void @frontPtr(%"RawPtr[Char]"* %rBegin, %"ContiguousMemoryRange[Char]" %1)
  %2 = load %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %range.addr
  call void @backPtr(%"RawPtr[Char]"* %rEnd, %"ContiguousMemoryRange[Char]" %2)
  call void @ctor.334(%"ContiguousMemoryRange[Char]"* %"$rangeVar", %"ContiguousMemoryRange[Char]"* %range.addr)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %"$rangeVar"
  %4 = call i1 @isEmpty.335(%"ContiguousMemoryRange[Char]" %3)
  %5 = xor i1 true, %4
  br i1 %5, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %6 = load %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %"$rangeVar"
  %7 = call i8* @front.336(%"ContiguousMemoryRange[Char]" %6)
  store i8* %7, i8** %el
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront.337(%"ContiguousMemoryRange[Char]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %while_block1

while_block1:                                     ; preds = %while_step3, %while_end
  %8 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %9 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %8, i32 0, i32 1
  %10 = call i1 @"==.188"(%"RawPtr[Char]"* %rEnd, %"RawPtr[Char]"* %9)
  %11 = xor i1 true, %10
  br i1 %11, label %while_body2, label %while_end4

while_body2:                                      ; preds = %while_block1
  %12 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rEnd
  %13 = call i8* @value(%"RawPtr[Char]" %12)
  %14 = load i8, i8* %13
  %15 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rBegin
  %16 = call i8* @value(%"RawPtr[Char]" %15)
  store i8 %14, i8* %16
  %17 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rEnd
  %18 = call i8* @value(%"RawPtr[Char]" %17)
  %19 = load i8, i8* %18
  %20 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rBegin
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %20)
  call void @"=.184"(%"RawPtr[Char]"* %rBegin, %"RawPtr[Char]"* %"$tmpC")
  %21 = load %"RawPtr[Char]", %"RawPtr[Char]"* %rEnd
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC5", %"RawPtr[Char]" %21)
  call void @"=.184"(%"RawPtr[Char]"* %rEnd, %"RawPtr[Char]"* %"$tmpC5")
  br label %while_step3

while_step3:                                      ; preds = %while_body2
  br label %while_block1

while_end4:                                       ; preds = %while_block1
  %22 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %23 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %22, i32 0, i32 1
  call void @"=.184"(%"RawPtr[Char]"* %23, %"RawPtr[Char]"* %rBegin)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @frontPtr(%"RawPtr[Char]"* sret %_result, %"ContiguousMemoryRange[Char]" %this) #4 {
  %_result.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %_result, %"RawPtr[Char]"** %_result.addr
  %this.addr = alloca %"ContiguousMemoryRange[Char]"
  store %"ContiguousMemoryRange[Char]" %this, %"ContiguousMemoryRange[Char]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %_result.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %this.addr, i32 0, i32 0
  call void @ctor.187(%"RawPtr[Char]"* %1, %"RawPtr[Char]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @backPtr(%"RawPtr[Char]"* sret %_result, %"ContiguousMemoryRange[Char]" %this) #4 {
  %_result.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %_result, %"RawPtr[Char]"** %_result.addr
  %this.addr = alloca %"ContiguousMemoryRange[Char]"
  store %"ContiguousMemoryRange[Char]" %this, %"ContiguousMemoryRange[Char]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %_result.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %this.addr, i32 0, i32 1
  call void @ctor.187(%"RawPtr[Char]"* %1, %"RawPtr[Char]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.334(%"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %other, %"ContiguousMemoryRange[Char]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %3, i32 0, i32 0
  call void @ctor.187(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  %5 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %6 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %7, i32 0, i32 1
  call void @ctor.187(%"RawPtr[Char]"* %6, %"RawPtr[Char]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.335(%"ContiguousMemoryRange[Char]" %this) #4 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"
  store %"ContiguousMemoryRange[Char]" %this, %"ContiguousMemoryRange[Char]"* %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %this.addr, i32 0, i32 1
  %2 = load %"RawPtr[Char]", %"RawPtr[Char]"* %1
  %3 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %this.addr, i32 0, i32 0
  %4 = load %"RawPtr[Char]", %"RawPtr[Char]"* %3
  %5 = call i64 @diff(%"RawPtr[Char]" %2, %"RawPtr[Char]" %4)
  store i64 0, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  %7 = icmp sle i64 %5, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal i8* @front.336(%"ContiguousMemoryRange[Char]" %this) #4 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"
  store %"ContiguousMemoryRange[Char]" %this, %"ContiguousMemoryRange[Char]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %this.addr, i32 0, i32 0
  %2 = load %"RawPtr[Char]", %"RawPtr[Char]"* %1
  %3 = call i8* @value(%"RawPtr[Char]" %2)
  ret i8* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront.337(%"ContiguousMemoryRange[Char]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %4
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %5)
  call void @"=.184"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosureData" %pred) #4 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosureData"
  store %"$lambdaEnclosureData" %pred, %"$lambdaEnclosureData"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty.316(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front.321(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"().338"(%"$lambdaEnclosureData"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"().338"(%"$lambdaEnclosureData"* %this, i8 %c) #3 {
  %this.addr = alloca %"$lambdaEnclosureData"*
  store %"$lambdaEnclosureData"* %this, %"$lambdaEnclosureData"** %this.addr
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  %2 = icmp ne i8 %1, 10
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.339(%"$lambdaEnclosureData"* %this) #3 {
  %this.addr = alloca %"$lambdaEnclosureData"*
  store %"$lambdaEnclosureData"* %this, %"$lambdaEnclosureData"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.340(%"$lambdaEnclosureData"* %this, %"$lambdaEnclosureData"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData"*
  store %"$lambdaEnclosureData"* %this, %"$lambdaEnclosureData"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData"*
  store %"$lambdaEnclosureData"* %other, %"$lambdaEnclosureData"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.341(%"$lambdaEnclosureData"* %this) #3 {
  %this.addr = alloca %"$lambdaEnclosureData"*
  store %"$lambdaEnclosureData"* %this, %"$lambdaEnclosureData"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.342"(%"$lambdaEnclosureData"* %this, %"$lambdaEnclosureData"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData"*
  store %"$lambdaEnclosureData"* %this, %"$lambdaEnclosureData"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData"*
  store %"$lambdaEnclosureData"* %other, %"$lambdaEnclosureData"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.343"(%"$lambdaEnclosureData"* %this, %"$lambdaEnclosureData"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData"*
  store %"$lambdaEnclosureData"* %this, %"$lambdaEnclosureData"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData"*
  store %"$lambdaEnclosureData"* %other, %"$lambdaEnclosureData"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: inlinehint nounwind
define internal i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #4 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %2 = call i1 @isEmpty.316(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf.345(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosureData.0" %pred) #4 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosureData.0"
  store %"$lambdaEnclosureData.0" %pred, %"$lambdaEnclosureData.0"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty.316(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front.321(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"().346"(%"$lambdaEnclosureData.0"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"().346"(%"$lambdaEnclosureData.0"* %this, i8 %c) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.0"*
  store %"$lambdaEnclosureData.0"* %this, %"$lambdaEnclosureData.0"** %this.addr
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  %2 = icmp eq i8 %1, 32
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.347(%"$lambdaEnclosureData.0"* %this) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.0"*
  store %"$lambdaEnclosureData.0"* %this, %"$lambdaEnclosureData.0"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.348(%"$lambdaEnclosureData.0"* %this, %"$lambdaEnclosureData.0"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.0"*
  store %"$lambdaEnclosureData.0"* %this, %"$lambdaEnclosureData.0"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData.0"*
  store %"$lambdaEnclosureData.0"* %other, %"$lambdaEnclosureData.0"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.349(%"$lambdaEnclosureData.0"* %this) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.0"*
  store %"$lambdaEnclosureData.0"* %this, %"$lambdaEnclosureData.0"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.350"(%"$lambdaEnclosureData.0"* %this, %"$lambdaEnclosureData.0"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.0"*
  store %"$lambdaEnclosureData.0"* %this, %"$lambdaEnclosureData.0"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData.0"*
  store %"$lambdaEnclosureData.0"* %other, %"$lambdaEnclosureData.0"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.351"(%"$lambdaEnclosureData.0"* %this, %"$lambdaEnclosureData.0"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.0"*
  store %"$lambdaEnclosureData.0"* %this, %"$lambdaEnclosureData.0"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData.0"*
  store %"$lambdaEnclosureData.0"* %other, %"$lambdaEnclosureData.0"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: inlinehint nounwind
define internal void @reportError.352(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %String* %msg) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %msg.addr = alloca %String*
  store %String* %msg, %String** %msg.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 4
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4, i32 0, i32 1
  %6 = load %Location*, %Location** %5
  %7 = load %Location, %Location* %6
  %8 = load %String*, %String** %msg.addr
  call void @reportError(%ExternalErrorReporter* %2, %Location %7, %String* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString.353(%String* sret %_result, %StringRef %a1) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor.295(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = load %String*, %String** %_result.addr
  %3 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %s, i32 0, i32 0
  call void @ctor.192(%String* %2, %String* %3)
  call void @dtor.297(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.297(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf.354(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosureData.1" %pred) #4 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosureData.1"
  store %"$lambdaEnclosureData.1" %pred, %"$lambdaEnclosureData.1"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty.316(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front.321(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"().355"(%"$lambdaEnclosureData.1"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"().355"(%"$lambdaEnclosureData.1"* %this, i8 %c) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.1"*
  store %"$lambdaEnclosureData.1"* %this, %"$lambdaEnclosureData.1"** %this.addr
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  %2 = icmp eq i8 %1, 9
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.356(%"$lambdaEnclosureData.1"* %this) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.1"*
  store %"$lambdaEnclosureData.1"* %this, %"$lambdaEnclosureData.1"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.357(%"$lambdaEnclosureData.1"* %this, %"$lambdaEnclosureData.1"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.1"*
  store %"$lambdaEnclosureData.1"* %this, %"$lambdaEnclosureData.1"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData.1"*
  store %"$lambdaEnclosureData.1"* %other, %"$lambdaEnclosureData.1"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.358(%"$lambdaEnclosureData.1"* %this) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.1"*
  store %"$lambdaEnclosureData.1"* %this, %"$lambdaEnclosureData.1"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.359"(%"$lambdaEnclosureData.1"* %this, %"$lambdaEnclosureData.1"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.1"*
  store %"$lambdaEnclosureData.1"* %this, %"$lambdaEnclosureData.1"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData.1"*
  store %"$lambdaEnclosureData.1"* %other, %"$lambdaEnclosureData.1"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.360"(%"$lambdaEnclosureData.1"* %this, %"$lambdaEnclosureData.1"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.1"*
  store %"$lambdaEnclosureData.1"* %this, %"$lambdaEnclosureData.1"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData.1"*
  store %"$lambdaEnclosureData.1"* %other, %"$lambdaEnclosureData.1"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: inlinehint nounwind
define internal void @advanceIf.361(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"$lambdaEnclosureData.2" %pred) #4 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %pred.addr = alloca %"$lambdaEnclosureData.2"
  store %"$lambdaEnclosureData.2" %pred, %"$lambdaEnclosureData.2"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %2 = call i1 @isEmpty.316(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %3 = xor i1 true, %2
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %6 = call i8 @front.321(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  %7 = call i1 @"().362"(%"$lambdaEnclosureData.2"* %pred.addr, i8 %6)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"().362"(%"$lambdaEnclosureData.2"* %this, i8 %c) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.2"*
  store %"$lambdaEnclosureData.2"* %this, %"$lambdaEnclosureData.2"** %this.addr
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  %2 = icmp ne i8 %1, 10
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.363(%"$lambdaEnclosureData.2"* %this) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.2"*
  store %"$lambdaEnclosureData.2"* %this, %"$lambdaEnclosureData.2"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.364(%"$lambdaEnclosureData.2"* %this, %"$lambdaEnclosureData.2"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.2"*
  store %"$lambdaEnclosureData.2"* %this, %"$lambdaEnclosureData.2"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData.2"*
  store %"$lambdaEnclosureData.2"* %other, %"$lambdaEnclosureData.2"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.365(%"$lambdaEnclosureData.2"* %this) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.2"*
  store %"$lambdaEnclosureData.2"* %this, %"$lambdaEnclosureData.2"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.366"(%"$lambdaEnclosureData.2"* %this, %"$lambdaEnclosureData.2"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.2"*
  store %"$lambdaEnclosureData.2"* %this, %"$lambdaEnclosureData.2"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData.2"*
  store %"$lambdaEnclosureData.2"* %other, %"$lambdaEnclosureData.2"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.367"(%"$lambdaEnclosureData.2"* %this, %"$lambdaEnclosureData.2"* %other) #3 {
  %this.addr = alloca %"$lambdaEnclosureData.2"*
  store %"$lambdaEnclosureData.2"* %this, %"$lambdaEnclosureData.2"** %this.addr
  %other.addr = alloca %"$lambdaEnclosureData.2"*
  store %"$lambdaEnclosureData.2"* %other, %"$lambdaEnclosureData.2"** %other.addr
  br label %code

code:                                             ; preds = %0
  ret i1 true
}

; Function Attrs: inlinehint nounwind
define internal void @advance.368(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, i64 %n) #4 {
  %range.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %range, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = call i64 @post_--.52(i64* %n.addr)
  store i64 0, i64* %tmp.v
  %2 = load i64, i64* %tmp.v
  %3 = icmp sgt i64 %1, %2
  br i1 %3, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %4 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %range.addr
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %4)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8 @"pre_++.369"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #4 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  %2 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %3 = call i8 @front.321(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  ret i8 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r) #4 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %2 = call i1 @isEmpty.316(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %1)
  ret i1 %2
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.370(%String* %this, %StringRef* %other) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %StringRef*
  store %StringRef* %other, %StringRef** %other.addr
  %size = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %other.addr
  %2 = call i64 @size(%StringRef* %1)
  store i64 %2, i64* %size
  %3 = load %String*, %String** %this.addr
  %4 = load i64, i64* %size
  call void @ctor.194(%String* %3, i64 %4)
  %5 = load %String*, %String** %this.addr
  %6 = getelementptr inbounds %String, %String* %5, i32 0, i32 0
  %7 = load %"RawPtr[Char]", %"RawPtr[Char]"* %6
  %8 = call i8* @bytePtr(%"RawPtr[Char]" %7)
  %9 = load %StringRef*, %StringRef** %other.addr
  %10 = getelementptr inbounds %StringRef, %StringRef* %9, i32 0, i32 0
  %11 = load i8*, i8** %10
  %12 = load i64, i64* %size
  call void @_spr_memcpy(i8* %8, i8* %11, i64 %12)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseString(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, i8 %endChar) #4 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %endChar.addr = alloca i8
  store i8 %endChar, i8* %endChar.addr
  %tmp.v = alloca i32
  %tmp.v1 = alloca %String
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %tmp.v8 = alloca %String
  %"$tmpForRef9" = alloca %StringRef
  %tmp.StringRef10 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i32 1, i32* %tmp.v
  %4 = load i32, i32* %tmp.v
  %5 = call i1 @hasLessThan(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3, i32 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %8 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.13, i32 0, i32 0), i8** %7
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.13, i32 0, i32 39), i8** %8
  %9 = load %StringRef, %StringRef* %tmp.StringRef
  store %StringRef %9, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %tmp.v1, %StringRef* %"$tmpForRef")
  call void @reportError.352(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, %String* %tmp.v1)
  call void @dtor.229(%String* %tmp.v1)
  %10 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %10, i32 0)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 1
  %13 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %12)
  br i1 %13, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block2

while_step:                                       ; preds = %if_end4
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block5

cond.true:                                        ; preds = %while_block
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 1
  %16 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %15)
  %17 = load i8, i8* %endChar.addr
  %18 = icmp ne i8 %16, %17
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %18, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block2:                                        ; preds = %while_body
  %19 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %20 = call i1 @checkEscapeChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %19)
  %21 = xor i1 true, %20
  br i1 %21, label %if_then3, label %if_end4

if_then3:                                         ; preds = %if_block2
  %22 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %22)
  br label %if_end4

if_end4:                                          ; preds = %if_then3, %if_block2
  br label %while_step

if_block5:                                        ; preds = %while_end
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, i32 0, i32 1
  %25 = call i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %24)
  br i1 %25, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %26 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %27 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef10, i32 0, i32 0
  %28 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef10, i32 0, i32 1
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.15, i32 0, i32 0), i8** %27
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.15, i32 0, i32 39), i8** %28
  %29 = load %StringRef, %StringRef* %tmp.StringRef10
  store %StringRef %29, %StringRef* %"$tmpForRef9"
  call void @ctor.370(%String* %tmp.v8, %StringRef* %"$tmpForRef9")
  call void @reportError.352(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %26, %String* %tmp.v8)
  call void @dtor.229(%String* %tmp.v8)
  %30 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %30, i32 0)
  ret void

if_end7:                                          ; preds = %dumy_block11, %if_block5
  %31 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %32 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %31, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %32)
  %33 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %33, i32 40)
  ret void

dumy_block11:                                     ; No predecessors!
  br label %if_end7
}

; Function Attrs: inlinehint nounwind
define internal i1 @hasLessThan(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, i32 %n) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 0
  %4 = load i32, i32* %n.addr
  %5 = call i1 @hasLessThan.371(%"RangeWithLookahead[_CharSource]"* %3, i32 %4)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal i1 @hasLessThan.371(%"RangeWithLookahead[_CharSource]"* %this, i32 %n) #4 {
  %this.addr = alloca %"RangeWithLookahead[_CharSource]"*
  store %"RangeWithLookahead[_CharSource]"* %this, %"RangeWithLookahead[_CharSource]"** %this.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  %tmp.v = alloca i64
  %"$tmpForRef" = alloca i8
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load i32, i32* %n.addr
  %2 = zext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %5 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %4, i32 0, i32 1
  %6 = call i64 @size.183(%"Vector[Char]"* %5)
  %7 = icmp sge i64 %3, %6
  br i1 %7, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %8 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %8, i32 0, i32 1
  %10 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %10, i32 0, i32 0
  %12 = call i8 @"post_++.303"(%_CharSource* %11)
  store i8 %12, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char]"* %9, i8* %"$tmpForRef")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  %13 = load i32, i32* %n.addr
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %tmp.v1
  %15 = load i64, i64* %tmp.v1
  %16 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %17 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %16, i32 0, i32 1
  %18 = call i64 @size.183(%"Vector[Char]"* %17)
  %19 = icmp sge i64 %15, %18
  ret i1 %19

cond.true:                                        ; preds = %while_block
  %20 = load %"RangeWithLookahead[_CharSource]"*, %"RangeWithLookahead[_CharSource]"** %this.addr
  %21 = getelementptr inbounds %"RangeWithLookahead[_CharSource]", %"RangeWithLookahead[_CharSource]"* %20, i32 0, i32 0
  %22 = call i1 @"pre_!!"(%_CharSource* %21)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %22, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: noinline nounwind
define i1 @checkEscapeChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #5 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %ch = alloca i8
  %tmp.v = alloca i32
  %tmp.v39 = alloca %String
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %charVal = alloca i32
  %tmp.v40 = alloca i8
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  store i8 %3, i8* %ch
  br label %if_block

if_block:                                         ; preds = %code
  %4 = load i8, i8* %ch
  %5 = icmp eq i8 %4, 92
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, i32 0, i32 1
  %8 = call i8 @"pre_++.369"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %7)
  store i8 %8, i8* %ch
  br label %if_block1

if_end:                                           ; preds = %dumy_block41, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %9 = load i8, i8* %ch
  %10 = icmp eq i8 %9, 114
  br i1 %10, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 0, i32 2
  %13 = getelementptr inbounds %Token, %Token* %12, i32 0, i32 2
  call void @"+=.372"(%String* %13, i8 13)
  br label %if_end3

if_else:                                          ; preds = %if_block1
  br label %if_block4

if_end3:                                          ; preds = %if_end7, %if_then2
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %15)
  ret i1 true

if_block4:                                        ; preds = %if_else
  %16 = load i8, i8* %ch
  %17 = icmp eq i8 %16, 110
  br i1 %17, label %if_then5, label %if_else6

if_then5:                                         ; preds = %if_block4
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, i32 0, i32 2
  %20 = getelementptr inbounds %Token, %Token* %19, i32 0, i32 2
  call void @"+=.372"(%String* %20, i8 10)
  br label %if_end7

if_else6:                                         ; preds = %if_block4
  br label %if_block8

if_end7:                                          ; preds = %if_end11, %if_then5
  br label %if_end3

if_block8:                                        ; preds = %if_else6
  %21 = load i8, i8* %ch
  %22 = icmp eq i8 %21, 98
  br i1 %22, label %if_then9, label %if_else10

if_then9:                                         ; preds = %if_block8
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, i32 0, i32 2
  %25 = getelementptr inbounds %Token, %Token* %24, i32 0, i32 2
  call void @"+=.372"(%String* %25, i8 8)
  br label %if_end11

if_else10:                                        ; preds = %if_block8
  br label %if_block12

if_end11:                                         ; preds = %if_end15, %if_then9
  br label %if_end7

if_block12:                                       ; preds = %if_else10
  %26 = load i8, i8* %ch
  %27 = icmp eq i8 %26, 102
  br i1 %27, label %if_then13, label %if_else14

if_then13:                                        ; preds = %if_block12
  %28 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %29 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %28, i32 0, i32 2
  %30 = getelementptr inbounds %Token, %Token* %29, i32 0, i32 2
  call void @"+=.372"(%String* %30, i8 12)
  br label %if_end15

if_else14:                                        ; preds = %if_block12
  br label %if_block16

if_end15:                                         ; preds = %if_end19, %if_then13
  br label %if_end11

if_block16:                                       ; preds = %if_else14
  %31 = load i8, i8* %ch
  %32 = icmp eq i8 %31, 116
  br i1 %32, label %if_then17, label %if_else18

if_then17:                                        ; preds = %if_block16
  %33 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %34 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %33, i32 0, i32 2
  %35 = getelementptr inbounds %Token, %Token* %34, i32 0, i32 2
  call void @"+=.372"(%String* %35, i8 9)
  br label %if_end19

if_else18:                                        ; preds = %if_block16
  br label %if_block20

if_end19:                                         ; preds = %if_end23, %if_then17
  br label %if_end15

if_block20:                                       ; preds = %if_else18
  %36 = load i8, i8* %ch
  %37 = icmp eq i8 %36, 92
  br i1 %37, label %if_then21, label %if_else22

if_then21:                                        ; preds = %if_block20
  %38 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %39 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %38, i32 0, i32 2
  %40 = getelementptr inbounds %Token, %Token* %39, i32 0, i32 2
  call void @"+=.372"(%String* %40, i8 92)
  br label %if_end23

if_else22:                                        ; preds = %if_block20
  br label %if_block24

if_end23:                                         ; preds = %if_end27, %if_then21
  br label %if_end19

if_block24:                                       ; preds = %if_else22
  %41 = load i8, i8* %ch
  %42 = icmp eq i8 %41, 39
  br i1 %42, label %if_then25, label %if_else26

if_then25:                                        ; preds = %if_block24
  %43 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %44 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %43, i32 0, i32 2
  %45 = getelementptr inbounds %Token, %Token* %44, i32 0, i32 2
  call void @"+=.372"(%String* %45, i8 39)
  br label %if_end27

if_else26:                                        ; preds = %if_block24
  br label %if_block28

if_end27:                                         ; preds = %if_end31, %if_then25
  br label %if_end23

if_block28:                                       ; preds = %if_else26
  %46 = load i8, i8* %ch
  %47 = icmp eq i8 %46, 34
  br i1 %47, label %if_then29, label %if_else30

if_then29:                                        ; preds = %if_block28
  %48 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %49 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %48, i32 0, i32 2
  %50 = getelementptr inbounds %Token, %Token* %49, i32 0, i32 2
  call void @"+=.372"(%String* %50, i8 34)
  br label %if_end31

if_else30:                                        ; preds = %if_block28
  br label %if_block32

if_end31:                                         ; preds = %if_end35, %if_then29
  br label %if_end27

if_block32:                                       ; preds = %if_else30
  %51 = load i8, i8* %ch
  %52 = icmp eq i8 %51, 120
  br i1 %52, label %cond.true, label %cond.false

if_then33:                                        ; preds = %cond.end
  br label %if_block36

if_else34:                                        ; preds = %cond.end
  %53 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %54 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %53, i32 0, i32 2
  %55 = getelementptr inbounds %Token, %Token* %54, i32 0, i32 2
  %56 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %57 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %56, i32 0, i32 1
  %58 = call i8 @"pre_++.369"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %57)
  call void @"+=.372"(%String* %55, i8 %58)
  br label %if_end35

if_end35:                                         ; preds = %if_else34, %if_end38
  br label %if_end31

cond.true:                                        ; preds = %if_block32
  br label %cond.end

cond.false:                                       ; preds = %if_block32
  %59 = load i8, i8* %ch
  %60 = icmp eq i8 %59, 88
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %60, %cond.false ]
  br i1 %cond.res, label %if_then33, label %if_else34

if_block36:                                       ; preds = %if_then33
  %61 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i32 2, i32* %tmp.v
  %62 = load i32, i32* %tmp.v
  %63 = call i1 @hasLessThan(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %61, i32 %62)
  br i1 %63, label %if_then37, label %if_end38

if_then37:                                        ; preds = %if_block36
  %64 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %65 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %66 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.14, i32 0, i32 0), i8** %65
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.14, i32 0, i32 36), i8** %66
  %67 = load %StringRef, %StringRef* %tmp.StringRef
  store %StringRef %67, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %tmp.v39, %StringRef* %"$tmpForRef")
  call void @reportError.352(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %64, %String* %tmp.v39)
  call void @dtor.229(%String* %tmp.v39)
  ret i1 true

if_end38:                                         ; preds = %dumy_block, %if_block36
  %68 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %69 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %68, i32 0, i32 1
  %70 = call i8 @"pre_++.369"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %69)
  %71 = call i32 @getXdigitVal(i8 %70)
  %72 = mul i32 16, %71
  store i32 %72, i32* %charVal
  %73 = load i32, i32* %charVal
  %74 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %75 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %74, i32 0, i32 1
  %76 = call i8 @"pre_++.369"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %75)
  %77 = call i32 @getXdigitVal(i8 %76)
  %78 = add i32 %73, %77
  store i32 %78, i32* %charVal
  %79 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %80 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %79, i32 0, i32 2
  %81 = getelementptr inbounds %Token, %Token* %80, i32 0, i32 2
  %82 = load i32, i32* %charVal
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %tmp.v40
  %84 = load i8, i8* %tmp.v40
  call void @"+=.372"(%String* %81, i8 %84)
  br label %if_end35

dumy_block:                                       ; No predecessors!
  br label %if_end38

dumy_block41:                                     ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @"+=.372"(%String* %this, i8 %value) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = load i8, i8* %value.addr
  call void @pushBack.373(%String* %1, i8 %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack.373(%String* %this, i8 %value) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %t = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v5 = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 1
  %3 = load %String*, %String** %this.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 2
  %5 = call i1 @"==.188"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  store i64 2, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  %7 = load %String*, %String** %this.addr
  %8 = call i64 @capacity(%String* %7)
  %9 = mul i64 %6, %8
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load i8, i8* %value.addr
  %11 = load %String*, %String** %this.addr
  %12 = getelementptr inbounds %String, %String* %11, i32 0, i32 1
  %13 = load %"RawPtr[Char]", %"RawPtr[Char]"* %12
  %14 = call i8* @value(%"RawPtr[Char]" %13)
  store i8 %10, i8* %14
  %15 = load %String*, %String** %this.addr
  %16 = getelementptr inbounds %String, %String* %15, i32 0, i32 1
  %17 = load %String*, %String** %this.addr
  %18 = getelementptr inbounds %String, %String* %17, i32 0, i32 1
  %19 = load %"RawPtr[Char]", %"RawPtr[Char]"* %18
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %19)
  call void @"=.184"(%"RawPtr[Char]"* %16, %"RawPtr[Char]"* %"$tmpC")
  ret void

if_block1:                                        ; preds = %if_then
  %20 = load i64, i64* %t
  store i64 2, i64* %tmp.v4
  %21 = load i64, i64* %tmp.v4
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %tmp.v5
  %23 = load i64, i64* %tmp.v5
  store i64 %23, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %24 = load %String*, %String** %this.addr
  %25 = load i64, i64* %t
  call void @reserve(%String* %24, i64 %25)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i32 @getXdigitVal(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  %tmp.v1 = alloca i32
  %tmp.v2 = alloca i32
  %tmp.v3 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  %2 = call i1 @isDigit(i8 %1)
  br i1 %2, label %cond_alt1, label %cond_alt2

cond_alt1:                                        ; preds = %code
  %3 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %3)
  %4 = load i32, i32* %tmp.v
  call void @_ass_32_8z(i32* %tmp.v1, i8 48)
  %5 = load i32, i32* %tmp.v1
  %6 = sub i32 %4, %5
  br label %cond_end

cond_alt2:                                        ; preds = %code
  %7 = load i8, i8* %c.addr
  %8 = call i8 @toLower(i8 %7)
  call void @_ass_32_8z(i32* %tmp.v2, i8 %8)
  %9 = load i32, i32* %tmp.v2
  %10 = add i32 10, %9
  call void @_ass_32_8z(i32* %tmp.v3, i8 97)
  %11 = load i32, i32* %tmp.v3
  %12 = sub i32 %10, %11
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi i32 [ %6, %cond_alt1 ], [ %12, %cond_alt2 ]
  br i1 %2, label %cond_destruct_alt1, label %cond_destruct_alt2

cond_destruct_alt1:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret i32 %cond

cond_destruct_alt14:                              ; preds = %dumy_block
  br label %cond_destruct_end6

cond_destruct_alt25:                              ; preds = %dumy_block
  br label %cond_destruct_end6

cond_destruct_end6:                               ; preds = %cond_destruct_alt25, %cond_destruct_alt14
  unreachable

dumy_block:                                       ; No predecessors!
  br i1 %2, label %cond_destruct_alt14, label %cond_destruct_alt25
}

; Function Attrs: inlinehint nounwind
define internal i1 @isDigit(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @isdigit(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @isdigit(i32)

; Function Attrs: inlinehint nounwind
define internal i8 @toLower(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i8
  %tmp.v1 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v1, i8 %1)
  %2 = load i32, i32* %tmp.v1
  %3 = call i32 @tolower(i32 %2)
  %4 = trunc i32 %3 to i8
  store i8 %4, i8* %tmp.v
  %5 = load i8, i8* %tmp.v
  ret i8 %5
}

declare i32 @tolower(i32)

; Function Attrs: inlinehint nounwind
define internal void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 2
  %3 = getelementptr inbounds %Token, %Token* %2, i32 0, i32 2
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  call void @"+=.372"(%String* %3, i8 %6)
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseStringNE(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca i64
  %tmp.v5 = alloca %String
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %tmp.v6 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  store i64 2, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  call void @advance.368(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i64 %3)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  br i1 %6, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block

cond.true:                                        ; preds = %while_block
  %8 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %8, i32 0, i32 1
  %10 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %9)
  %11 = icmp eq i8 %10, 125
  br i1 %11, label %cond.true1, label %cond.false2

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.end3
  %cond.res4 = phi i1 [ %15, %cond.end3 ], [ false, %cond.false ]
  br i1 %cond.res4, label %while_body, label %while_end

cond.true1:                                       ; preds = %cond.true
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %13 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12)
  %14 = icmp eq i8 %13, 62
  br label %cond.end3

cond.false2:                                      ; preds = %cond.true
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %14, %cond.true1 ], [ false, %cond.false2 ]
  %15 = xor i1 true, %cond.res
  br label %cond.end

if_block:                                         ; preds = %while_end
  %16 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %17 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16, i32 0, i32 1
  %18 = call i1 @"pre_!"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %17)
  br i1 %18, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %19 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %20 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %21 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.16, i32 0, i32 0), i8** %20
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.16, i32 0, i32 39), i8** %21
  %22 = load %StringRef, %StringRef* %tmp.StringRef
  store %StringRef %22, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %tmp.v5, %StringRef* %"$tmpForRef")
  call void @reportError.352(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %19, %String* %tmp.v5)
  call void @dtor.229(%String* %tmp.v5)
  %23 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %23, i32 0)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %24 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %25 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %24, i32 0, i32 1
  store i64 2, i64* %tmp.v6
  %26 = load i64, i64* %tmp.v6
  call void @advance.368(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %25, i64 %26)
  %27 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %27, i32 40)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOpChar(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  %2 = icmp eq i8 %1, 126
  br i1 %2, label %cond.true49, label %cond.false50

cond.true:                                        ; preds = %cond.end3
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  %3 = load i8, i8* %c.addr
  %4 = icmp eq i8 %3, 42
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res68 = phi i1 [ true, %cond.true ], [ %4, %cond.false ]
  ret i1 %cond.res68

cond.true1:                                       ; preds = %cond.end6
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  %5 = load i8, i8* %c.addr
  %6 = icmp eq i8 %5, 47
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res67 = phi i1 [ true, %cond.true1 ], [ %6, %cond.false2 ]
  br i1 %cond.res67, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  %7 = load i8, i8* %c.addr
  %8 = icmp eq i8 %7, 63
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res66 = phi i1 [ true, %cond.true4 ], [ %8, %cond.false5 ]
  br i1 %cond.res66, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  %9 = load i8, i8* %c.addr
  %10 = icmp eq i8 %9, 62
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res65 = phi i1 [ true, %cond.true7 ], [ %10, %cond.false8 ]
  br i1 %cond.res65, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %cond.end15
  br label %cond.end12

cond.false11:                                     ; preds = %cond.end15
  %11 = load i8, i8* %c.addr
  %12 = icmp eq i8 %11, 60
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res64 = phi i1 [ true, %cond.true10 ], [ %12, %cond.false11 ]
  br i1 %cond.res64, label %cond.true7, label %cond.false8

cond.true13:                                      ; preds = %cond.end18
  br label %cond.end15

cond.false14:                                     ; preds = %cond.end18
  %13 = load i8, i8* %c.addr
  %14 = icmp eq i8 %13, 58
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res63 = phi i1 [ true, %cond.true13 ], [ %14, %cond.false14 ]
  br i1 %cond.res63, label %cond.true10, label %cond.false11

cond.true16:                                      ; preds = %cond.end21
  br label %cond.end18

cond.false17:                                     ; preds = %cond.end21
  %15 = load i8, i8* %c.addr
  %16 = icmp eq i8 %15, 92
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond.res62 = phi i1 [ true, %cond.true16 ], [ %16, %cond.false17 ]
  br i1 %cond.res62, label %cond.true13, label %cond.false14

cond.true19:                                      ; preds = %cond.end24
  br label %cond.end21

cond.false20:                                     ; preds = %cond.end24
  %17 = load i8, i8* %c.addr
  %18 = icmp eq i8 %17, 124
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res61 = phi i1 [ true, %cond.true19 ], [ %18, %cond.false20 ]
  br i1 %cond.res61, label %cond.true16, label %cond.false17

cond.true22:                                      ; preds = %cond.end27
  br label %cond.end24

cond.false23:                                     ; preds = %cond.end27
  %19 = load i8, i8* %c.addr
  %20 = icmp eq i8 %19, 61
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond.res60 = phi i1 [ true, %cond.true22 ], [ %20, %cond.false23 ]
  br i1 %cond.res60, label %cond.true19, label %cond.false20

cond.true25:                                      ; preds = %cond.end30
  br label %cond.end27

cond.false26:                                     ; preds = %cond.end30
  %21 = load i8, i8* %c.addr
  %22 = icmp eq i8 %21, 43
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res59 = phi i1 [ true, %cond.true25 ], [ %22, %cond.false26 ]
  br i1 %cond.res59, label %cond.true22, label %cond.false23

cond.true28:                                      ; preds = %cond.end33
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end33
  %23 = load i8, i8* %c.addr
  %24 = icmp eq i8 %23, 45
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond.res58 = phi i1 [ true, %cond.true28 ], [ %24, %cond.false29 ]
  br i1 %cond.res58, label %cond.true25, label %cond.false26

cond.true31:                                      ; preds = %cond.end36
  br label %cond.end33

cond.false32:                                     ; preds = %cond.end36
  %25 = load i8, i8* %c.addr
  %26 = icmp eq i8 %25, 38
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond.res57 = phi i1 [ true, %cond.true31 ], [ %26, %cond.false32 ]
  br i1 %cond.res57, label %cond.true28, label %cond.false29

cond.true34:                                      ; preds = %cond.end39
  br label %cond.end36

cond.false35:                                     ; preds = %cond.end39
  %27 = load i8, i8* %c.addr
  %28 = icmp eq i8 %27, 94
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond.res56 = phi i1 [ true, %cond.true34 ], [ %28, %cond.false35 ]
  br i1 %cond.res56, label %cond.true31, label %cond.false32

cond.true37:                                      ; preds = %cond.end42
  br label %cond.end39

cond.false38:                                     ; preds = %cond.end42
  %29 = load i8, i8* %c.addr
  %30 = icmp eq i8 %29, 37
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond.res55 = phi i1 [ true, %cond.true37 ], [ %30, %cond.false38 ]
  br i1 %cond.res55, label %cond.true34, label %cond.false35

cond.true40:                                      ; preds = %cond.end45
  br label %cond.end42

cond.false41:                                     ; preds = %cond.end45
  %31 = load i8, i8* %c.addr
  %32 = icmp eq i8 %31, 36
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false41, %cond.true40
  %cond.res54 = phi i1 [ true, %cond.true40 ], [ %32, %cond.false41 ]
  br i1 %cond.res54, label %cond.true37, label %cond.false38

cond.true43:                                      ; preds = %cond.end48
  br label %cond.end45

cond.false44:                                     ; preds = %cond.end48
  %33 = load i8, i8* %c.addr
  %34 = icmp eq i8 %33, 35
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond.res53 = phi i1 [ true, %cond.true43 ], [ %34, %cond.false44 ]
  br i1 %cond.res53, label %cond.true40, label %cond.false41

cond.true46:                                      ; preds = %cond.end51
  br label %cond.end48

cond.false47:                                     ; preds = %cond.end51
  %35 = load i8, i8* %c.addr
  %36 = icmp eq i8 %35, 64
  br label %cond.end48

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond.res52 = phi i1 [ true, %cond.true46 ], [ %36, %cond.false47 ]
  br i1 %cond.res52, label %cond.true43, label %cond.false44

cond.true49:                                      ; preds = %code
  br label %cond.end51

cond.false50:                                     ; preds = %code
  %37 = load i8, i8* %c.addr
  %38 = icmp eq i8 %37, 33
  br label %cond.end51

cond.end51:                                       ; preds = %cond.false50, %cond.true49
  %cond.res = phi i1 [ true, %cond.true49 ], [ %38, %cond.false50 ]
  br i1 %cond.res, label %cond.true46, label %cond.false47
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOpCharDot(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  %2 = icmp eq i8 %1, 46
  br i1 %2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  br label %cond.end

cond.false:                                       ; preds = %code
  %3 = load i8, i8* %c.addr
  %4 = call i1 @isOpChar(i8 %3)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %4, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseOperator(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %ch = alloca i8
  %funptr = alloca i1 (i8)*
  %i = alloca i32
  %c = alloca i8
  %tmp.v = alloca i32
  %tmp.v4 = alloca i32
  %hasOtherDot = alloca i1
  %funptr8 = alloca i1 (i8)*
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  store i8 %3, i8* %ch
  br label %if_block

if_block:                                         ; preds = %code
  %4 = load i8, i8* %ch
  %5 = call i1 @isOpChar(i8 %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i1 (i8)* @isOpCharDot, i1 (i8)** %funptr
  %7 = bitcast i1 (i8)** %funptr to %"FunctionPtr1[Bool, Char]"*
  %8 = load %"FunctionPtr1[Bool, Char]", %"FunctionPtr1[Bool, Char]"* %7
  call void @advanceAndCapture(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, %"FunctionPtr1[Bool, Char]" %8)
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %9 = load i8, i8* %ch
  %10 = icmp eq i8 %9, 46
  br i1 %10, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i32 1, i32* %i
  %11 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %12 = load i32, i32* %i
  store i32 %12, i32* %tmp.v
  %13 = load i32, i32* %tmp.v
  %14 = call i8 @peekChar.375(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %11, i32 %13)
  store i8 %14, i8* %c
  br label %while_block

if_end3:                                          ; preds = %if_end7, %if_block1
  ret i1 false

while_block:                                      ; preds = %while_step, %if_then2
  %15 = load i8, i8* %c
  %16 = call i1 @isOpChar(i8 %15)
  br i1 %16, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %17 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %18 = call i32 @"pre_++.21"(i32* %i)
  store i32 %18, i32* %tmp.v4
  %19 = load i32, i32* %tmp.v4
  %20 = call i8 @peekChar.375(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, i32 %19)
  store i8 %20, i8* %c
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %21 = load i8, i8* %c
  %22 = icmp eq i8 %21, 46
  store i1 %22, i1* %hasOtherDot
  br label %if_block5

if_block5:                                        ; preds = %while_end
  %23 = load i1, i1* %hasOtherDot
  br i1 %23, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %24 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i1 (i8)* @isOpCharDot, i1 (i8)** %funptr8
  %25 = bitcast i1 (i8)** %funptr8 to %"FunctionPtr1[Bool, Char]"*
  %26 = load %"FunctionPtr1[Bool, Char]", %"FunctionPtr1[Bool, Char]"* %25
  call void @advanceAndCapture(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %24, %"FunctionPtr1[Bool, Char]" %26)
  ret i1 true

if_end7:                                          ; preds = %dumy_block9, %if_block5
  br label %if_end3

dumy_block9:                                      ; No predecessors!
  br label %if_end7
}

; Function Attrs: inlinehint nounwind
define internal void @advanceAndCapture(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"FunctionPtr1[Bool, Char]" %pred) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %pred.addr = alloca %"FunctionPtr1[Bool, Char]"
  store %"FunctionPtr1[Bool, Char]" %pred, %"FunctionPtr1[Bool, Char]"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 2
  %6 = getelementptr inbounds %Token, %Token* %5, i32 0, i32 2
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  %9 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  call void @"+=.372"(%String* %6, i8 %9)
  br label %while_step

while_step:                                       ; preds = %while_body
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11)
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13)
  %15 = call i1 @"().374"(%"FunctionPtr1[Bool, Char]"* %pred.addr, i8 %14)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %15, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @"().374"(%"FunctionPtr1[Bool, Char]"* %this, i8 %p1) #4 {
  %this.addr = alloca %"FunctionPtr1[Bool, Char]"*
  store %"FunctionPtr1[Bool, Char]"* %this, %"FunctionPtr1[Bool, Char]"** %this.addr
  %p1.addr = alloca i8
  store i8 %p1, i8* %p1.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"FunctionPtr1[Bool, Char]"*, %"FunctionPtr1[Bool, Char]"** %this.addr
  %2 = load i8, i8* %p1.addr
  %3 = bitcast %"FunctionPtr1[Bool, Char]"* %1 to i1 (i8)**
  %4 = load i1 (i8)*, i1 (i8)** %3
  %5 = call i1 %4(i8 %2)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal i8 @peekChar.375(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, i32 %n) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = getelementptr inbounds %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]", %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2, i32 0, i32 0
  %4 = load i32, i32* %n.addr
  %5 = call i8 @peek(%"RangeWithLookahead[_CharSource]"* %3, i32 %4)
  ret i8 %5
}

; Function Attrs: inlinehint nounwind
define internal i1 @isAlpha(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @isalpha(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @isalpha(i32)

; Function Attrs: noinline nounwind
define void @parseIdentifer(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #5 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %allowSymbolChars = alloca i1
  %firstDot = alloca i1
  %ch = alloca i8
  %data = alloca %StringRef*
  %"$tmpC" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %tmp.StringRef24 = alloca %StringRef
  %tmp.StringRef30 = alloca %StringRef
  %tmp.StringRef36 = alloca %StringRef
  %tmp.StringRef42 = alloca %StringRef
  %tmp.StringRef48 = alloca %StringRef
  %tmp.StringRef54 = alloca %StringRef
  %tmp.StringRef60 = alloca %StringRef
  %tmp.StringRef66 = alloca %StringRef
  %tmp.StringRef72 = alloca %StringRef
  %tmp.StringRef78 = alloca %StringRef
  %tmp.StringRef84 = alloca %StringRef
  %tmp.StringRef90 = alloca %StringRef
  %tmp.StringRef96 = alloca %StringRef
  %tmp.StringRef102 = alloca %StringRef
  %tmp.StringRef108 = alloca %StringRef
  %tmp.StringRef114 = alloca %StringRef
  %tmp.StringRef120 = alloca %StringRef
  %tmp.StringRef126 = alloca %StringRef
  %tmp.StringRef132 = alloca %StringRef
  %tmp.StringRef138 = alloca %StringRef
  %tmp.StringRef144 = alloca %StringRef
  %tmp.StringRef150 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  store i1 false, i1* %allowSymbolChars
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 2
  %3 = getelementptr inbounds %Token, %Token* %2, i32 0, i32 2
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  call void @"+=.372"(%String* %3, i8 %6)
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  store i1 true, i1* %firstDot
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %9 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %10 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %9, i32 0, i32 1
  %11 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %13)
  store i8 %14, i8* %ch
  br label %if_block

while_step:                                       ; preds = %if_end7
  %15 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %15, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %16)
  br label %while_block

while_end:                                        ; preds = %if_then, %while_block
  %17 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %18 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %17, i32 0, i32 2
  %19 = getelementptr inbounds %Token, %Token* %18, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %19)
  store %StringRef* %"$tmpC", %StringRef** %data
  br label %if_block16

if_block:                                         ; preds = %while_body
  %20 = load i8, i8* %ch
  %21 = call i1 @isAlpha(i8 %20)
  %22 = xor i1 true, %21
  br i1 %22, label %cond.true1, label %cond.false2

if_then:                                          ; preds = %cond.end
  br label %while_end

if_end:                                           ; preds = %dumy_block, %cond.end
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, i32 0, i32 2
  %25 = getelementptr inbounds %Token, %Token* %24, i32 0, i32 2
  %26 = load i8, i8* %ch
  call void @"+=.372"(%String* %25, i8 %26)
  br label %if_block5

cond.true:                                        ; preds = %cond.end3
  %27 = load i8, i8* %ch
  %28 = call i1 @isDigit(i8 %27)
  %29 = xor i1 true, %28
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %29, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res4, label %if_then, label %if_end

cond.true1:                                       ; preds = %if_block
  %30 = load i8, i8* %ch
  %31 = icmp ne i8 %30, 95
  br label %cond.end3

cond.false2:                                      ; preds = %if_block
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %31, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block5:                                        ; preds = %if_end
  %32 = load i8, i8* %ch
  %33 = icmp eq i8 %32, 95
  br i1 %33, label %cond.true8, label %cond.false9

if_then6:                                         ; preds = %cond.end10
  %34 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %35 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %34, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %35)
  br label %if_block12

if_end7:                                          ; preds = %if_end14, %cond.end10
  br label %while_step

cond.true8:                                       ; preds = %if_block5
  %36 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %37 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %36)
  %38 = call i1 @isOpCharDot(i8 %37)
  br label %cond.end10

cond.false9:                                      ; preds = %if_block5
  br label %cond.end10

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond.res11 = phi i1 [ %38, %cond.true8 ], [ false, %cond.false9 ]
  br i1 %cond.res11, label %if_then6, label %if_end7

if_block12:                                       ; preds = %if_then6
  %39 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %40 = call i1 @parseOperator(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %39)
  br i1 %40, label %if_then13, label %if_end14

if_then13:                                        ; preds = %if_block12
  %41 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %41, i32 37)
  ret void

if_end14:                                         ; preds = %dumy_block15, %if_block12
  br label %if_end7

dumy_block15:                                     ; No predecessors!
  br label %if_end14

if_block16:                                       ; preds = %while_end
  %42 = load %StringRef*, %StringRef** %data
  %43 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %44 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.17, i32 0, i32 0), i8** %43
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.17, i32 0, i32 5), i8** %44
  %45 = load %StringRef, %StringRef* %tmp.StringRef
  %46 = call i1 @"=="(%StringRef* %42, %StringRef %45)
  br i1 %46, label %if_then17, label %if_else

if_then17:                                        ; preds = %if_block16
  %47 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %47, i32 11)
  ret void

if_else:                                          ; preds = %if_block16
  br label %if_block20

if_end18:                                         ; preds = %if_end23, %dumy_block19
  ret void

dumy_block19:                                     ; No predecessors!
  br label %if_end18

if_block20:                                       ; preds = %if_else
  %48 = load %StringRef*, %StringRef** %data
  %49 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef24, i32 0, i32 0
  %50 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef24, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.18, i32 0, i32 0), i8** %49
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.18, i32 0, i32 5), i8** %50
  %51 = load %StringRef, %StringRef* %tmp.StringRef24
  %52 = call i1 @"=="(%StringRef* %48, %StringRef %51)
  br i1 %52, label %if_then21, label %if_else22

if_then21:                                        ; preds = %if_block20
  %53 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %53, i32 12)
  ret void

if_else22:                                        ; preds = %if_block20
  br label %if_block26

if_end23:                                         ; preds = %if_end29, %dumy_block25
  br label %if_end18

dumy_block25:                                     ; No predecessors!
  br label %if_end23

if_block26:                                       ; preds = %if_else22
  %54 = load %StringRef*, %StringRef** %data
  %55 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef30, i32 0, i32 0
  %56 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef30, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.19, i32 0, i32 0), i8** %55
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.19, i32 0, i32 7), i8** %56
  %57 = load %StringRef, %StringRef* %tmp.StringRef30
  %58 = call i1 @"=="(%StringRef* %54, %StringRef %57)
  br i1 %58, label %if_then27, label %if_else28

if_then27:                                        ; preds = %if_block26
  %59 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %59, i32 4)
  ret void

if_else28:                                        ; preds = %if_block26
  br label %if_block32

if_end29:                                         ; preds = %if_end35, %dumy_block31
  br label %if_end23

dumy_block31:                                     ; No predecessors!
  br label %if_end29

if_block32:                                       ; preds = %if_else28
  %60 = load %StringRef*, %StringRef** %data
  %61 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef36, i32 0, i32 0
  %62 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef36, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.20, i32 0, i32 0), i8** %61
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.20, i32 0, i32 8), i8** %62
  %63 = load %StringRef, %StringRef* %tmp.StringRef36
  %64 = call i1 @"=="(%StringRef* %60, %StringRef %63)
  br i1 %64, label %if_then33, label %if_else34

if_then33:                                        ; preds = %if_block32
  %65 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %65, i32 13)
  ret void

if_else34:                                        ; preds = %if_block32
  br label %if_block38

if_end35:                                         ; preds = %if_end41, %dumy_block37
  br label %if_end29

dumy_block37:                                     ; No predecessors!
  br label %if_end35

if_block38:                                       ; preds = %if_else34
  %66 = load %StringRef*, %StringRef** %data
  %67 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef42, i32 0, i32 0
  %68 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef42, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.21, i32 0, i32 0), i8** %67
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.21, i32 0, i32 8), i8** %68
  %69 = load %StringRef, %StringRef* %tmp.StringRef42
  %70 = call i1 @"=="(%StringRef* %66, %StringRef %69)
  br i1 %70, label %if_then39, label %if_else40

if_then39:                                        ; preds = %if_block38
  %71 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %71, i32 5)
  ret void

if_else40:                                        ; preds = %if_block38
  br label %if_block44

if_end41:                                         ; preds = %if_end47, %dumy_block43
  br label %if_end35

dumy_block43:                                     ; No predecessors!
  br label %if_end41

if_block44:                                       ; preds = %if_else40
  %72 = load %StringRef*, %StringRef** %data
  %73 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef48, i32 0, i32 0
  %74 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef48, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.22, i32 0, i32 0), i8** %73
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.22, i32 0, i32 3), i8** %74
  %75 = load %StringRef, %StringRef* %tmp.StringRef48
  %76 = call i1 @"=="(%StringRef* %72, %StringRef %75)
  br i1 %76, label %if_then45, label %if_else46

if_then45:                                        ; preds = %if_block44
  %77 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %77, i32 6)
  ret void

if_else46:                                        ; preds = %if_block44
  br label %if_block50

if_end47:                                         ; preds = %if_end53, %dumy_block49
  br label %if_end41

dumy_block49:                                     ; No predecessors!
  br label %if_end47

if_block50:                                       ; preds = %if_else46
  %78 = load %StringRef*, %StringRef** %data
  %79 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef54, i32 0, i32 0
  %80 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef54, i32 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.23, i32 0, i32 0), i8** %79
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.23, i32 0, i32 2), i8** %80
  %81 = load %StringRef, %StringRef* %tmp.StringRef54
  %82 = call i1 @"=="(%StringRef* %78, %StringRef %81)
  br i1 %82, label %if_then51, label %if_else52

if_then51:                                        ; preds = %if_block50
  %83 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %83, i32 16)
  ret void

if_else52:                                        ; preds = %if_block50
  br label %if_block56

if_end53:                                         ; preds = %if_end59, %dumy_block55
  br label %if_end47

dumy_block55:                                     ; No predecessors!
  br label %if_end53

if_block56:                                       ; preds = %if_else52
  %84 = load %StringRef*, %StringRef** %data
  %85 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef60, i32 0, i32 0
  %86 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef60, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.24, i32 0, i32 0), i8** %85
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.24, i32 0, i32 4), i8** %86
  %87 = load %StringRef, %StringRef* %tmp.StringRef60
  %88 = call i1 @"=="(%StringRef* %84, %StringRef %87)
  br i1 %88, label %if_then57, label %if_else58

if_then57:                                        ; preds = %if_block56
  %89 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %89, i32 24)
  ret void

if_else58:                                        ; preds = %if_block56
  br label %if_block62

if_end59:                                         ; preds = %if_end65, %dumy_block61
  br label %if_end53

dumy_block61:                                     ; No predecessors!
  br label %if_end59

if_block62:                                       ; preds = %if_else58
  %90 = load %StringRef*, %StringRef** %data
  %91 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef66, i32 0, i32 0
  %92 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef66, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.25, i32 0, i32 0), i8** %91
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.25, i32 0, i32 5), i8** %92
  %93 = load %StringRef, %StringRef* %tmp.StringRef66
  %94 = call i1 @"=="(%StringRef* %90, %StringRef %93)
  br i1 %94, label %if_then63, label %if_else64

if_then63:                                        ; preds = %if_block62
  %95 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %95, i32 21)
  ret void

if_else64:                                        ; preds = %if_block62
  br label %if_block68

if_end65:                                         ; preds = %if_end71, %dumy_block67
  br label %if_end59

dumy_block67:                                     ; No predecessors!
  br label %if_end65

if_block68:                                       ; preds = %if_else64
  %96 = load %StringRef*, %StringRef** %data
  %97 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef72, i32 0, i32 0
  %98 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef72, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.26, i32 0, i32 0), i8** %97
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.26, i32 0, i32 7), i8** %98
  %99 = load %StringRef, %StringRef* %tmp.StringRef72
  %100 = call i1 @"=="(%StringRef* %96, %StringRef %99)
  br i1 %100, label %if_then69, label %if_else70

if_then69:                                        ; preds = %if_block68
  %101 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %101, i32 14)
  ret void

if_else70:                                        ; preds = %if_block68
  br label %if_block74

if_end71:                                         ; preds = %if_end77, %dumy_block73
  br label %if_end65

dumy_block73:                                     ; No predecessors!
  br label %if_end71

if_block74:                                       ; preds = %if_else70
  %102 = load %StringRef*, %StringRef** %data
  %103 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef78, i32 0, i32 0
  %104 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef78, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.27, i32 0, i32 0), i8** %103
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.27, i32 0, i32 3), i8** %104
  %105 = load %StringRef, %StringRef* %tmp.StringRef78
  %106 = call i1 @"=="(%StringRef* %102, %StringRef %105)
  br i1 %106, label %if_then75, label %if_else76

if_then75:                                        ; preds = %if_block74
  %107 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %107, i32 15)
  ret void

if_else76:                                        ; preds = %if_block74
  br label %if_block80

if_end77:                                         ; preds = %if_end83, %dumy_block79
  br label %if_end71

dumy_block79:                                     ; No predecessors!
  br label %if_end77

if_block80:                                       ; preds = %if_else76
  %108 = load %StringRef*, %StringRef** %data
  %109 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef84, i32 0, i32 0
  %110 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef84, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.28, i32 0, i32 0), i8** %109
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.28, i32 0, i32 6), i8** %110
  %111 = load %StringRef, %StringRef* %tmp.StringRef84
  %112 = call i1 @"=="(%StringRef* %108, %StringRef %111)
  br i1 %112, label %if_then81, label %if_else82

if_then81:                                        ; preds = %if_block80
  %113 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %113, i32 3)
  ret void

if_else82:                                        ; preds = %if_block80
  br label %if_block86

if_end83:                                         ; preds = %if_end89, %dumy_block85
  br label %if_end77

dumy_block85:                                     ; No predecessors!
  br label %if_end83

if_block86:                                       ; preds = %if_else82
  %114 = load %StringRef*, %StringRef** %data
  %115 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef90, i32 0, i32 0
  %116 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef90, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.29, i32 0, i32 0), i8** %115
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.29, i32 0, i32 3), i8** %116
  %117 = load %StringRef, %StringRef* %tmp.StringRef90
  %118 = call i1 @"=="(%StringRef* %114, %StringRef %117)
  br i1 %118, label %if_then87, label %if_else88

if_then87:                                        ; preds = %if_block86
  %119 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %119, i32 7)
  ret void

if_else88:                                        ; preds = %if_block86
  br label %if_block92

if_end89:                                         ; preds = %if_end95, %dumy_block91
  br label %if_end83

dumy_block91:                                     ; No predecessors!
  br label %if_end89

if_block92:                                       ; preds = %if_else88
  %120 = load %StringRef*, %StringRef** %data
  %121 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef96, i32 0, i32 0
  %122 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef96, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.30, i32 0, i32 0), i8** %121
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.30, i32 0, i32 6), i8** %122
  %123 = load %StringRef, %StringRef* %tmp.StringRef96
  %124 = call i1 @"=="(%StringRef* %120, %StringRef %123)
  br i1 %124, label %if_then93, label %if_else94

if_then93:                                        ; preds = %if_block92
  %125 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %125, i32 2)
  ret void

if_else94:                                        ; preds = %if_block92
  br label %if_block98

if_end95:                                         ; preds = %if_end101, %dumy_block97
  br label %if_end89

dumy_block97:                                     ; No predecessors!
  br label %if_end95

if_block98:                                       ; preds = %if_else94
  %126 = load %StringRef*, %StringRef** %data
  %127 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef102, i32 0, i32 0
  %128 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef102, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.31, i32 0, i32 0), i8** %127
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.31, i32 0, i32 4), i8** %128
  %129 = load %StringRef, %StringRef* %tmp.StringRef102
  %130 = call i1 @"=="(%StringRef* %126, %StringRef %129)
  br i1 %130, label %if_then99, label %if_else100

if_then99:                                        ; preds = %if_block98
  %131 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %131, i32 22)
  ret void

if_else100:                                       ; preds = %if_block98
  br label %if_block104

if_end101:                                        ; preds = %if_end107, %dumy_block103
  br label %if_end95

dumy_block103:                                    ; No predecessors!
  br label %if_end101

if_block104:                                      ; preds = %if_else100
  %132 = load %StringRef*, %StringRef** %data
  %133 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef108, i32 0, i32 0
  %134 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef108, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.32, i32 0, i32 0), i8** %133
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.32, i32 0, i32 7), i8** %134
  %135 = load %StringRef, %StringRef* %tmp.StringRef108
  %136 = call i1 @"=="(%StringRef* %132, %StringRef %135)
  br i1 %136, label %if_then105, label %if_else106

if_then105:                                       ; preds = %if_block104
  %137 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %137, i32 8)
  ret void

if_else106:                                       ; preds = %if_block104
  br label %if_block110

if_end107:                                        ; preds = %if_end113, %dumy_block109
  br label %if_end101

dumy_block109:                                    ; No predecessors!
  br label %if_end107

if_block110:                                      ; preds = %if_else106
  %138 = load %StringRef*, %StringRef** %data
  %139 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef114, i32 0, i32 0
  %140 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef114, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.33, i32 0, i32 0), i8** %139
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.33, i32 0, i32 6), i8** %140
  %141 = load %StringRef, %StringRef* %tmp.StringRef114
  %142 = call i1 @"=="(%StringRef* %138, %StringRef %141)
  br i1 %142, label %if_then111, label %if_else112

if_then111:                                       ; preds = %if_block110
  %143 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %143, i32 17)
  ret void

if_else112:                                       ; preds = %if_block110
  br label %if_block116

if_end113:                                        ; preds = %if_end119, %dumy_block115
  br label %if_end107

dumy_block115:                                    ; No predecessors!
  br label %if_end113

if_block116:                                      ; preds = %if_else112
  %144 = load %StringRef*, %StringRef** %data
  %145 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef120, i32 0, i32 0
  %146 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef120, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.34, i32 0, i32 0), i8** %145
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.34, i32 0, i32 5), i8** %146
  %147 = load %StringRef, %StringRef* %tmp.StringRef120
  %148 = call i1 @"=="(%StringRef* %144, %StringRef %147)
  br i1 %148, label %if_then117, label %if_else118

if_then117:                                       ; preds = %if_block116
  %149 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %149, i32 18)
  ret void

if_else118:                                       ; preds = %if_block116
  br label %if_block122

if_end119:                                        ; preds = %if_end125, %dumy_block121
  br label %if_end113

dumy_block121:                                    ; No predecessors!
  br label %if_end119

if_block122:                                      ; preds = %if_else118
  %150 = load %StringRef*, %StringRef** %data
  %151 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef126, i32 0, i32 0
  %152 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef126, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.35, i32 0, i32 0), i8** %151
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.35, i32 0, i32 4), i8** %152
  %153 = load %StringRef, %StringRef* %tmp.StringRef126
  %154 = call i1 @"=="(%StringRef* %150, %StringRef %153)
  br i1 %154, label %if_then123, label %if_else124

if_then123:                                       ; preds = %if_block122
  %155 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %155, i32 23)
  ret void

if_else124:                                       ; preds = %if_block122
  br label %if_block128

if_end125:                                        ; preds = %if_end131, %dumy_block127
  br label %if_end119

dumy_block127:                                    ; No predecessors!
  br label %if_end125

if_block128:                                      ; preds = %if_else124
  %156 = load %StringRef*, %StringRef** %data
  %157 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef132, i32 0, i32 0
  %158 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef132, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.36, i32 0, i32 0), i8** %157
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.36, i32 0, i32 3), i8** %158
  %159 = load %StringRef, %StringRef* %tmp.StringRef132
  %160 = call i1 @"=="(%StringRef* %156, %StringRef %159)
  br i1 %160, label %if_then129, label %if_else130

if_then129:                                       ; preds = %if_block128
  %161 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %161, i32 19)
  ret void

if_else130:                                       ; preds = %if_block128
  br label %if_block134

if_end131:                                        ; preds = %if_end137, %dumy_block133
  br label %if_end125

dumy_block133:                                    ; No predecessors!
  br label %if_end131

if_block134:                                      ; preds = %if_else130
  %162 = load %StringRef*, %StringRef** %data
  %163 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef138, i32 0, i32 0
  %164 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef138, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.37, i32 0, i32 0), i8** %163
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.37, i32 0, i32 5), i8** %164
  %165 = load %StringRef, %StringRef* %tmp.StringRef138
  %166 = call i1 @"=="(%StringRef* %162, %StringRef %165)
  br i1 %166, label %if_then135, label %if_else136

if_then135:                                       ; preds = %if_block134
  %167 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %167, i32 9)
  ret void

if_else136:                                       ; preds = %if_block134
  br label %if_block140

if_end137:                                        ; preds = %if_end143, %dumy_block139
  br label %if_end131

dumy_block139:                                    ; No predecessors!
  br label %if_end137

if_block140:                                      ; preds = %if_else136
  %168 = load %StringRef*, %StringRef** %data
  %169 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef144, i32 0, i32 0
  %170 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef144, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.38, i32 0, i32 0), i8** %169
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.38, i32 0, i32 3), i8** %170
  %171 = load %StringRef, %StringRef* %tmp.StringRef144
  %172 = call i1 @"=="(%StringRef* %168, %StringRef %171)
  br i1 %172, label %if_then141, label %if_else142

if_then141:                                       ; preds = %if_block140
  %173 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %173, i32 10)
  ret void

if_else142:                                       ; preds = %if_block140
  br label %if_block146

if_end143:                                        ; preds = %if_end149, %dumy_block145
  br label %if_end137

dumy_block145:                                    ; No predecessors!
  br label %if_end143

if_block146:                                      ; preds = %if_else142
  %174 = load %StringRef*, %StringRef** %data
  %175 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef150, i32 0, i32 0
  %176 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef150, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.39, i32 0, i32 0), i8** %175
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.39, i32 0, i32 5), i8** %176
  %177 = load %StringRef, %StringRef* %tmp.StringRef150
  %178 = call i1 @"=="(%StringRef* %174, %StringRef %177)
  br i1 %178, label %if_then147, label %if_else148

if_then147:                                       ; preds = %if_block146
  %179 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %179, i32 20)
  ret void

if_else148:                                       ; preds = %if_block146
  %180 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %180, i32 37)
  ret void

if_end149:                                        ; preds = %dumy_block152, %dumy_block151
  br label %if_end143

dumy_block151:                                    ; No predecessors!
  br label %if_end149

dumy_block152:                                    ; No predecessors!
  br label %if_end149
}

; Function Attrs: noinline nounwind
define void @parseNumeric(%TokenType* sret %_result, %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this) #5 {
  %_result.addr = alloca %TokenType*
  store %TokenType* %_result, %TokenType** %_result.addr
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %isLong = alloca i1
  %isUnsigned = alloca i1
  %isFloating = alloca i1
  %type = alloca i32
  %ch = alloca i8
  %ch2 = alloca i8
  %ch3 = alloca i8
  %tmp.v = alloca i32
  %tmp.v1 = alloca i64
  %tmp.v2 = alloca i64
  %tmp.v11 = alloca i64
  %tmp.v12 = alloca i64
  %tmp.v21 = alloca i64
  %tmp.v22 = alloca i64
  %tmp.v23 = alloca i64
  %funptr = alloca i1 (i8)*
  %funptr55 = alloca i1 (i8)*
  %tmp.v69 = alloca %String
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %tmp.v90 = alloca i8
  %"$tmpC" = alloca %StringRef
  %tmp.v91 = alloca %TokenType
  %tmp.v92 = alloca %TokenType
  %tmp.v104 = alloca %TokenType
  %tmp.v105 = alloca %TokenType
  %tmp.v117 = alloca %TokenType
  %tmp.v118 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  store i1 false, i1* %isLong
  store i1 false, i1* %isUnsigned
  store i1 false, i1* %isFloating
  store i32 0, i32* %type
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  store i8 %3, i8* %ch
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4)
  %6 = call i8 @toLower(i8 %5)
  store i8 %6, i8* %ch2
  %7 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i32 2, i32* %tmp.v
  %8 = load i32, i32* %tmp.v
  %9 = call i8 @peekChar.375(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %7, i32 %8)
  %10 = call i8 @toLower(i8 %9)
  store i8 %10, i8* %ch3
  br label %if_block

if_block:                                         ; preds = %code
  %11 = load i8, i8* %ch
  %12 = icmp eq i8 %11, 48
  br i1 %12, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %13 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %14 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %13, i32 0, i32 1
  store i64 2, i64* %tmp.v1
  %15 = load i64, i64* %tmp.v1
  call void @advance.368(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %14, i64 %15)
  %16 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %17 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %16, i32 0, i32 1
  store i64 16, i64* %tmp.v2
  %18 = load i64, i64* %tmp.v2
  %19 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %20 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %19, i32 0, i32 2
  %21 = getelementptr inbounds %Token, %Token* %20, i32 0, i32 2
  %22 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %17, i64 %18, %String* %21)
  %23 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %23, i32 0, i32 2
  %25 = getelementptr inbounds %Token, %Token* %24, i32 0, i32 3
  store i64 %22, i64* %25
  br label %if_end

if_else:                                          ; preds = %cond.end
  br label %if_block3

if_end:                                           ; preds = %if_end6, %if_then
  br label %if_block66

cond.true:                                        ; preds = %if_block
  %26 = load i8, i8* %ch2
  %27 = icmp eq i8 %26, 120
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %27, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_else

if_block3:                                        ; preds = %if_else
  %28 = load i8, i8* %ch
  %29 = icmp eq i8 %28, 48
  br i1 %29, label %cond.true7, label %cond.false8

if_then4:                                         ; preds = %cond.end9
  %30 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %31 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %30, i32 0, i32 1
  store i64 2, i64* %tmp.v11
  %32 = load i64, i64* %tmp.v11
  call void @advance.368(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %31, i64 %32)
  %33 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %34 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %33, i32 0, i32 1
  store i64 2, i64* %tmp.v12
  %35 = load i64, i64* %tmp.v12
  %36 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %37 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %36, i32 0, i32 2
  %38 = getelementptr inbounds %Token, %Token* %37, i32 0, i32 2
  %39 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %34, i64 %35, %String* %38)
  %40 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %41 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %40, i32 0, i32 2
  %42 = getelementptr inbounds %Token, %Token* %41, i32 0, i32 3
  store i64 %39, i64* %42
  br label %if_end6

if_else5:                                         ; preds = %cond.end9
  br label %if_block13

if_end6:                                          ; preds = %if_end16, %if_then4
  br label %if_end

cond.true7:                                       ; preds = %if_block3
  %43 = load i8, i8* %ch2
  %44 = icmp eq i8 %43, 98
  br label %cond.end9

cond.false8:                                      ; preds = %if_block3
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res10 = phi i1 [ %44, %cond.true7 ], [ false, %cond.false8 ]
  br i1 %cond.res10, label %if_then4, label %if_else5

if_block13:                                       ; preds = %if_else5
  %45 = load i8, i8* %ch
  %46 = icmp eq i8 %45, 48
  br i1 %46, label %cond.true17, label %cond.false18

if_then14:                                        ; preds = %cond.end19
  %47 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %48 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %47, i32 0, i32 1
  store i64 1, i64* %tmp.v21
  %49 = load i64, i64* %tmp.v21
  call void @advance.368(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %48, i64 %49)
  %50 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %51 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %50, i32 0, i32 1
  store i64 8, i64* %tmp.v22
  %52 = load i64, i64* %tmp.v22
  %53 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %54 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %53, i32 0, i32 2
  %55 = getelementptr inbounds %Token, %Token* %54, i32 0, i32 2
  %56 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %51, i64 %52, %String* %55)
  %57 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %58 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %57, i32 0, i32 2
  %59 = getelementptr inbounds %Token, %Token* %58, i32 0, i32 3
  store i64 %56, i64* %59
  br label %if_end16

if_else15:                                        ; preds = %cond.end19
  %60 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %61 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %60, i32 0, i32 1
  store i64 10, i64* %tmp.v23
  %62 = load i64, i64* %tmp.v23
  %63 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %64 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %63, i32 0, i32 2
  %65 = getelementptr inbounds %Token, %Token* %64, i32 0, i32 2
  %66 = call i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %61, i64 %62, %String* %65)
  %67 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %68 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %67, i32 0, i32 2
  %69 = getelementptr inbounds %Token, %Token* %68, i32 0, i32 3
  store i64 %66, i64* %69
  br label %if_block24

if_end16:                                         ; preds = %if_end26, %if_then14
  br label %if_end6

cond.true17:                                      ; preds = %if_block13
  %70 = load i8, i8* %ch2
  %71 = icmp eq i8 %70, 111
  br label %cond.end19

cond.false18:                                     ; preds = %if_block13
  br label %cond.end19

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond.res20 = phi i1 [ %71, %cond.true17 ], [ false, %cond.false18 ]
  br i1 %cond.res20, label %if_then14, label %if_else15

if_block24:                                       ; preds = %if_else15
  %72 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %73 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %72, i32 0, i32 1
  %74 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %73)
  br i1 %74, label %if_then25, label %if_end26

if_then25:                                        ; preds = %if_block24
  %75 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %76 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %75, i32 0, i32 1
  %77 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %76)
  %78 = call i8 @toLower(i8 %77)
  store i8 %78, i8* %ch
  br label %if_block27

if_end26:                                         ; preds = %if_end29, %if_block24
  br label %if_end16

if_block27:                                       ; preds = %if_then25
  %79 = load i8, i8* %ch
  %80 = icmp eq i8 %79, 46
  br i1 %80, label %cond.true39, label %cond.false40

if_then28:                                        ; preds = %cond.end32
  store i1 true, i1* %isFloating
  br label %if_block46

if_end29:                                         ; preds = %if_end58, %cond.end32
  br label %if_end26

cond.true30:                                      ; preds = %cond.end35
  br label %cond.end32

cond.false31:                                     ; preds = %cond.end35
  %81 = load i8, i8* %ch
  %82 = icmp eq i8 %81, 100
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond.res45 = phi i1 [ true, %cond.true30 ], [ %82, %cond.false31 ]
  br i1 %cond.res45, label %if_then28, label %if_end29

cond.true33:                                      ; preds = %cond.end38
  br label %cond.end35

cond.false34:                                     ; preds = %cond.end38
  %83 = load i8, i8* %ch
  %84 = icmp eq i8 %83, 102
  br label %cond.end35

cond.end35:                                       ; preds = %cond.false34, %cond.true33
  %cond.res44 = phi i1 [ true, %cond.true33 ], [ %84, %cond.false34 ]
  br i1 %cond.res44, label %cond.true30, label %cond.false31

cond.true36:                                      ; preds = %cond.end41
  br label %cond.end38

cond.false37:                                     ; preds = %cond.end41
  %85 = load i8, i8* %ch
  %86 = icmp eq i8 %85, 101
  br label %cond.end38

cond.end38:                                       ; preds = %cond.false37, %cond.true36
  %cond.res43 = phi i1 [ true, %cond.true36 ], [ %86, %cond.false37 ]
  br i1 %cond.res43, label %cond.true33, label %cond.false34

cond.true39:                                      ; preds = %if_block27
  %87 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %88 = call i8 @peekChar(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %87)
  %89 = call i1 @isOpCharDot(i8 %88)
  %90 = xor i1 true, %89
  br label %cond.end41

cond.false40:                                     ; preds = %if_block27
  br label %cond.end41

cond.end41:                                       ; preds = %cond.false40, %cond.true39
  %cond.res42 = phi i1 [ %90, %cond.true39 ], [ false, %cond.false40 ]
  br i1 %cond.res42, label %cond.true36, label %cond.false37

if_block46:                                       ; preds = %if_then28
  %91 = load i8, i8* %ch
  %92 = icmp eq i8 %91, 46
  br i1 %92, label %if_then47, label %if_end48

if_then47:                                        ; preds = %if_block46
  %93 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %93)
  %94 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i1 (i8)* @isDigit, i1 (i8)** %funptr
  %95 = bitcast i1 (i8)** %funptr to %"FunctionPtr1[Bool, Char]"*
  %96 = load %"FunctionPtr1[Bool, Char]", %"FunctionPtr1[Bool, Char]"* %95
  call void @advanceAndCaptureDigit(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %94, %"FunctionPtr1[Bool, Char]" %96)
  br label %if_end48

if_end48:                                         ; preds = %if_then47, %if_block46
  br label %if_block49

if_block49:                                       ; preds = %if_end48
  %97 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %98 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %97, i32 0, i32 1
  %99 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %98)
  br i1 %99, label %if_then50, label %if_end51

if_then50:                                        ; preds = %if_block49
  %100 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %101 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %100, i32 0, i32 1
  %102 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %101)
  %103 = call i8 @toLower(i8 %102)
  store i8 %103, i8* %ch
  br label %if_block52

if_end51:                                         ; preds = %if_end54, %if_block49
  br label %if_block56

if_block52:                                       ; preds = %if_then50
  %104 = load i8, i8* %ch
  %105 = icmp eq i8 %104, 101
  br i1 %105, label %if_then53, label %if_end54

if_then53:                                        ; preds = %if_block52
  %106 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  call void @advanceAndCapture1(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %106)
  %107 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  store i1 (i8)* @isDigit, i1 (i8)** %funptr55
  %108 = bitcast i1 (i8)** %funptr55 to %"FunctionPtr1[Bool, Char]"*
  %109 = load %"FunctionPtr1[Bool, Char]", %"FunctionPtr1[Bool, Char]"* %108
  call void @advanceAndCaptureDigit(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %107, %"FunctionPtr1[Bool, Char]" %109)
  br label %if_end54

if_end54:                                         ; preds = %if_then53, %if_block52
  br label %if_end51

if_block56:                                       ; preds = %if_end51
  %110 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %111 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %110, i32 0, i32 1
  %112 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %111)
  br i1 %112, label %if_then57, label %if_end58

if_then57:                                        ; preds = %if_block56
  store i1 true, i1* %isLong
  %113 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %114 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %113, i32 0, i32 1
  %115 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %114)
  %116 = call i8 @toLower(i8 %115)
  store i8 %116, i8* %ch
  br label %if_block59

if_end58:                                         ; preds = %if_end62, %if_block56
  br label %if_end29

if_block59:                                       ; preds = %if_then57
  %117 = load i8, i8* %ch
  %118 = icmp eq i8 %117, 102
  br i1 %118, label %if_then60, label %if_else61

if_then60:                                        ; preds = %if_block59
  store i1 false, i1* %isLong
  %119 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %120 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %119, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %120)
  br label %if_end62

if_else61:                                        ; preds = %if_block59
  br label %if_block63

if_end62:                                         ; preds = %if_end65, %if_then60
  br label %if_end58

if_block63:                                       ; preds = %if_else61
  %121 = load i8, i8* %ch
  %122 = icmp eq i8 %121, 100
  br i1 %122, label %if_then64, label %if_end65

if_then64:                                        ; preds = %if_block63
  %123 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %124 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %123, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %124)
  br label %if_end65

if_end65:                                         ; preds = %if_then64, %if_block63
  br label %if_end62

if_block66:                                       ; preds = %if_end
  %125 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %126 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %125, i32 0, i32 2
  %127 = getelementptr inbounds %Token, %Token* %126, i32 0, i32 2
  %128 = call i1 @isEmpty.376(%String* %127)
  br i1 %128, label %if_then67, label %if_end68

if_then67:                                        ; preds = %if_block66
  %129 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %130 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %131 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.40, i32 0, i32 0), i8** %130
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.40, i32 0, i32 23), i8** %131
  %132 = load %StringRef, %StringRef* %tmp.StringRef
  store %StringRef %132, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %tmp.v69, %StringRef* %"$tmpForRef")
  call void @reportError.352(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %129, %String* %tmp.v69)
  call void @dtor.229(%String* %tmp.v69)
  %133 = load %TokenType*, %TokenType** %_result.addr
  call void @ctor.319(%TokenType* %133, i32 0)
  ret void

if_end68:                                         ; preds = %dumy_block, %if_block66
  br label %if_block70

dumy_block:                                       ; No predecessors!
  br label %if_end68

if_block70:                                       ; preds = %if_end68
  %134 = load i1, i1* %isFloating
  %135 = xor i1 true, %134
  br i1 %135, label %if_then71, label %if_end72

if_then71:                                        ; preds = %if_block70
  br label %if_block73

if_end72:                                         ; preds = %if_end82, %if_block70
  br label %if_block87

if_block73:                                       ; preds = %if_then71
  %136 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %137 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %136, i32 0, i32 1
  %138 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %137)
  br i1 %138, label %cond.true76, label %cond.false77

if_then74:                                        ; preds = %cond.end78
  store i1 true, i1* %isUnsigned
  %139 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %140 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %139, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %140)
  br label %if_end75

if_end75:                                         ; preds = %if_then74, %cond.end78
  br label %if_block80

cond.true76:                                      ; preds = %if_block73
  %141 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %142 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %141, i32 0, i32 1
  %143 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %142)
  %144 = call i8 @toLower(i8 %143)
  %145 = icmp eq i8 %144, 117
  br label %cond.end78

cond.false77:                                     ; preds = %if_block73
  br label %cond.end78

cond.end78:                                       ; preds = %cond.false77, %cond.true76
  %cond.res79 = phi i1 [ %145, %cond.true76 ], [ false, %cond.false77 ]
  br i1 %cond.res79, label %if_then74, label %if_end75

if_block80:                                       ; preds = %if_end75
  %146 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %147 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %146, i32 0, i32 1
  %148 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %147)
  br i1 %148, label %cond.true83, label %cond.false84

if_then81:                                        ; preds = %cond.end85
  store i1 true, i1* %isLong
  %149 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %150 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %149, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %150)
  br label %if_end82

if_end82:                                         ; preds = %if_then81, %cond.end85
  br label %if_end72

cond.true83:                                      ; preds = %if_block80
  %151 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %152 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %151, i32 0, i32 1
  %153 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %152)
  %154 = call i8 @toLower(i8 %153)
  %155 = icmp eq i8 %154, 108
  br label %cond.end85

cond.false84:                                     ; preds = %if_block80
  br label %cond.end85

cond.end85:                                       ; preds = %cond.false84, %cond.true83
  %cond.res86 = phi i1 [ %155, %cond.true83 ], [ false, %cond.false84 ]
  br i1 %cond.res86, label %if_then81, label %if_end82

if_block87:                                       ; preds = %if_end72
  %156 = load i1, i1* %isFloating
  br i1 %156, label %if_then88, label %if_end89

if_then88:                                        ; preds = %if_block87
  %157 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %158 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %157, i32 0, i32 2
  %159 = getelementptr inbounds %Token, %Token* %158, i32 0, i32 2
  store i8 0, i8* %tmp.v90
  %160 = load i8, i8* %tmp.v90
  call void @"+=.372"(%String* %159, i8 %160)
  %161 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %162 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %161, i32 0, i32 2
  %163 = getelementptr inbounds %Token, %Token* %162, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %163)
  %164 = load %StringRef, %StringRef* %"$tmpC"
  %165 = call double @asDouble(%StringRef %164)
  %166 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %167 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %166, i32 0, i32 2
  %168 = getelementptr inbounds %Token, %Token* %167, i32 0, i32 4
  store double %165, double* %168
  %169 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %170 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %169, i32 0, i32 2
  %171 = getelementptr inbounds %Token, %Token* %170, i32 0, i32 2
  call void @popBack.377(%String* %171)
  %172 = load %TokenType*, %TokenType** %_result.addr
  %173 = load i1, i1* %isLong
  br i1 %173, label %cond_alt1, label %cond_alt2

if_end89:                                         ; preds = %cond_destruct_end95, %if_block87
  br label %if_block97

cond_alt1:                                        ; preds = %if_then88
  call void @ctor.319(%TokenType* %tmp.v91, i32 46)
  br label %cond_end

cond_alt2:                                        ; preds = %if_then88
  call void @ctor.319(%TokenType* %tmp.v92, i32 45)
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi %TokenType* [ %tmp.v91, %cond_alt1 ], [ %tmp.v92, %cond_alt2 ]
  call void @ctor.191(%TokenType* %172, %TokenType* %cond)
  br i1 %173, label %cond_destruct_alt1, label %cond_destruct_alt2

cond_destruct_alt1:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

cond_destruct_alt193:                             ; preds = %dumy_block96
  br label %cond_destruct_end95

cond_destruct_alt294:                             ; preds = %dumy_block96
  br label %cond_destruct_end95

cond_destruct_end95:                              ; preds = %cond_destruct_alt294, %cond_destruct_alt193
  br label %if_end89

dumy_block96:                                     ; No predecessors!
  br i1 %173, label %cond_destruct_alt193, label %cond_destruct_alt294

if_block97:                                       ; preds = %if_end89
  %174 = load i1, i1* %isUnsigned
  br i1 %174, label %if_then98, label %if_else99

if_then98:                                        ; preds = %if_block97
  %175 = load %TokenType*, %TokenType** %_result.addr
  %176 = load i1, i1* %isLong
  br i1 %176, label %cond_alt1101, label %cond_alt2102

if_else99:                                        ; preds = %if_block97
  %177 = load %TokenType*, %TokenType** %_result.addr
  %178 = load i1, i1* %isLong
  br i1 %178, label %cond_alt1114, label %cond_alt2115

if_end100:                                        ; preds = %cond_destruct_end125, %cond_destruct_end112
  ret void

cond_alt1101:                                     ; preds = %if_then98
  call void @ctor.319(%TokenType* %tmp.v104, i32 44)
  br label %cond_end103

cond_alt2102:                                     ; preds = %if_then98
  call void @ctor.319(%TokenType* %tmp.v105, i32 43)
  br label %cond_end103

cond_end103:                                      ; preds = %cond_alt2102, %cond_alt1101
  %cond106 = phi %TokenType* [ %tmp.v104, %cond_alt1101 ], [ %tmp.v105, %cond_alt2102 ]
  call void @ctor.191(%TokenType* %175, %TokenType* %cond106)
  br i1 %176, label %cond_destruct_alt1107, label %cond_destruct_alt2108

cond_destruct_alt1107:                            ; preds = %cond_end103
  br label %cond_destruct_end109

cond_destruct_alt2108:                            ; preds = %cond_end103
  br label %cond_destruct_end109

cond_destruct_end109:                             ; preds = %cond_destruct_alt2108, %cond_destruct_alt1107
  ret void

cond_destruct_alt1110:                            ; preds = %dumy_block113
  br label %cond_destruct_end112

cond_destruct_alt2111:                            ; preds = %dumy_block113
  br label %cond_destruct_end112

cond_destruct_end112:                             ; preds = %cond_destruct_alt2111, %cond_destruct_alt1110
  br label %if_end100

dumy_block113:                                    ; No predecessors!
  br i1 %176, label %cond_destruct_alt1110, label %cond_destruct_alt2111

cond_alt1114:                                     ; preds = %if_else99
  call void @ctor.319(%TokenType* %tmp.v117, i32 42)
  br label %cond_end116

cond_alt2115:                                     ; preds = %if_else99
  call void @ctor.319(%TokenType* %tmp.v118, i32 41)
  br label %cond_end116

cond_end116:                                      ; preds = %cond_alt2115, %cond_alt1114
  %cond119 = phi %TokenType* [ %tmp.v117, %cond_alt1114 ], [ %tmp.v118, %cond_alt2115 ]
  call void @ctor.191(%TokenType* %177, %TokenType* %cond119)
  br i1 %178, label %cond_destruct_alt1120, label %cond_destruct_alt2121

cond_destruct_alt1120:                            ; preds = %cond_end116
  br label %cond_destruct_end122

cond_destruct_alt2121:                            ; preds = %cond_end116
  br label %cond_destruct_end122

cond_destruct_end122:                             ; preds = %cond_destruct_alt2121, %cond_destruct_alt1120
  ret void

cond_destruct_alt1123:                            ; preds = %dumy_block126
  br label %cond_destruct_end125

cond_destruct_alt2124:                            ; preds = %dumy_block126
  br label %cond_destruct_end125

cond_destruct_end125:                             ; preds = %cond_destruct_alt2124, %cond_destruct_alt1123
  br label %if_end100

dumy_block126:                                    ; No predecessors!
  br i1 %178, label %cond_destruct_alt1123, label %cond_destruct_alt2124
}

; Function Attrs: inlinehint nounwind
define internal i64 @consumeDigits(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, i64 %base, %String* %capture) #4 {
  %r.addr = alloca %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*
  store %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %r, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %base.addr = alloca i64
  store i64 %base, i64* %base.addr
  %capture.addr = alloca %String*
  store %String* %capture, %String** %capture.addr
  %res = alloca i64
  %tmp.v = alloca i64
  %tmp.v8 = alloca i64
  %tmp.v24 = alloca i64
  br label %code

code:                                             ; preds = %0
  store i64 0, i64* %res
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load i64, i64* %base.addr
  store i64 16, i64* %tmp.v
  %2 = load i64, i64* %tmp.v
  %3 = icmp eq i64 %1, %2
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  br label %while_block

if_else:                                          ; preds = %if_block
  br label %while_block9

if_end:                                           ; preds = %while_end12, %while_end
  %4 = load i64, i64* %res
  ret i64 %4

while_block:                                      ; preds = %while_step, %if_then
  %5 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %6 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  br i1 %6, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block5

while_step:                                       ; preds = %if_end7
  %7 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %7)
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_end

cond.true:                                        ; preds = %while_block
  %8 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %9 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %8)
  %10 = call i1 @isXdigit(i8 %9)
  br i1 %10, label %cond.true1, label %cond.false2

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.end3
  %cond.res4 = phi i1 [ %cond.res, %cond.end3 ], [ false, %cond.false ]
  br i1 %cond.res4, label %while_body, label %while_end

cond.true1:                                       ; preds = %cond.true
  br label %cond.end3

cond.false2:                                      ; preds = %cond.true
  %11 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %12 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11)
  %13 = icmp eq i8 %12, 95
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ true, %cond.true1 ], [ %13, %cond.false2 ]
  br label %cond.end

if_block5:                                        ; preds = %while_body
  %14 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %15 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %14)
  %16 = icmp ne i8 %15, 95
  br i1 %16, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %17 = load %String*, %String** %capture.addr
  %18 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %19 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %18)
  call void @"+=.372"(%String* %17, i8 %19)
  %20 = load i64, i64* %res
  %21 = load i64, i64* %base.addr
  %22 = mul i64 %20, %21
  store i64 %22, i64* %res
  %23 = load i64, i64* %res
  %24 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %25 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %24)
  %26 = call i32 @getXdigitVal(i8 %25)
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %tmp.v8
  %28 = load i64, i64* %tmp.v8
  %29 = add i64 %23, %28
  store i64 %29, i64* %res
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  br label %while_step

while_block9:                                     ; preds = %while_step11, %if_else
  %30 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %31 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %30)
  br i1 %31, label %cond.true13, label %cond.false14

while_body10:                                     ; preds = %cond.end15
  br label %if_block21

while_step11:                                     ; preds = %if_end23
  %32 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %32)
  br label %while_block9

while_end12:                                      ; preds = %cond.end15
  br label %if_end

cond.true13:                                      ; preds = %while_block9
  %33 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %34 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %33)
  %35 = call i1 @isXdigit(i8 %34)
  br i1 %35, label %cond.true16, label %cond.false17

cond.false14:                                     ; preds = %while_block9
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.end18
  %cond.res20 = phi i1 [ %cond.res19, %cond.end18 ], [ false, %cond.false14 ]
  br i1 %cond.res20, label %while_body10, label %while_end12

cond.true16:                                      ; preds = %cond.true13
  br label %cond.end18

cond.false17:                                     ; preds = %cond.true13
  %36 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %37 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %36)
  %38 = icmp eq i8 %37, 95
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond.res19 = phi i1 [ true, %cond.true16 ], [ %38, %cond.false17 ]
  br label %cond.end15

if_block21:                                       ; preds = %while_body10
  %39 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %40 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %39)
  %41 = icmp ne i8 %40, 95
  br i1 %41, label %if_then22, label %if_end23

if_then22:                                        ; preds = %if_block21
  %42 = load %String*, %String** %capture.addr
  %43 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %44 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %43)
  call void @"+=.372"(%String* %42, i8 %44)
  %45 = load i64, i64* %res
  %46 = load i64, i64* %base.addr
  %47 = mul i64 %45, %46
  store i64 %47, i64* %res
  %48 = load i64, i64* %res
  %49 = load %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"*, %"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"** %r.addr
  %50 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %49)
  %51 = call i32 @getDigitVal(i8 %50)
  %52 = zext i32 %51 to i64
  store i64 %52, i64* %tmp.v24
  %53 = load i64, i64* %tmp.v24
  %54 = add i64 %48, %53
  store i64 %54, i64* %res
  br label %if_end23

if_end23:                                         ; preds = %if_then22, %if_block21
  br label %while_step11
}

; Function Attrs: inlinehint nounwind
define internal i1 @isXdigit(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @isxdigit(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @isxdigit(i32)

; Function Attrs: inlinehint nounwind
define internal i32 @getDigitVal(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  %tmp.v1 = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  call void @_ass_32_8z(i32* %tmp.v1, i8 48)
  %3 = load i32, i32* %tmp.v1
  %4 = sub i32 %2, %3
  ret i32 %4
}

; Function Attrs: inlinehint nounwind
define internal void @advanceAndCaptureDigit(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"FunctionPtr1[Bool, Char]" %pred) #4 {
  %this.addr = alloca %"SparrowScanner[_CharSource, ExternalErrorReporter]"*
  store %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %this, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %pred.addr = alloca %"FunctionPtr1[Bool, Char]"
  store %"FunctionPtr1[Bool, Char]" %pred, %"FunctionPtr1[Bool, Char]"* %pred.addr
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %1, i32 0, i32 1
  %3 = call i1 @"pre_!!.344"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %2)
  br i1 %3, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %if_block

while_step:                                       ; preds = %if_end
  %4 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %4, i32 0, i32 1
  call void @popFront.325(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %5)
  br label %while_block

while_end:                                        ; preds = %cond.end
  ret void

cond.true:                                        ; preds = %while_block
  %6 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %6, i32 0, i32 1
  %8 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %7)
  %9 = call i1 @"().374"(%"FunctionPtr1[Bool, Char]"* %pred.addr, i8 %8)
  br i1 %9, label %cond.true1, label %cond.false2

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.end3
  %cond.res4 = phi i1 [ %cond.res, %cond.end3 ], [ false, %cond.false ]
  br i1 %cond.res4, label %while_body, label %while_end

cond.true1:                                       ; preds = %cond.true
  br label %cond.end3

cond.false2:                                      ; preds = %cond.true
  %10 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %11)
  %13 = icmp eq i8 %12, 95
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ true, %cond.true1 ], [ %13, %cond.false2 ]
  br label %cond.end

if_block:                                         ; preds = %while_body
  %14 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %14, i32 0, i32 1
  %16 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %15)
  %17 = icmp ne i8 %16, 95
  br i1 %17, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %18 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %18, i32 0, i32 2
  %20 = getelementptr inbounds %Token, %Token* %19, i32 0, i32 2
  %21 = load %"SparrowScanner[_CharSource, ExternalErrorReporter]"*, %"SparrowScanner[_CharSource, ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowScanner[_CharSource, ExternalErrorReporter]", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = call i8 @"pre_*"(%"LocationSyncCharRange[RangeWithLookahead[_CharSource]]"* %22)
  call void @"+=.372"(%String* %20, i8 %23)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  br label %while_step
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.376(%String* %this) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  %3 = load %String*, %String** %this.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 1
  %5 = call i1 @"==.188"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal void @popBack.377(%String* %this) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 1
  %3 = load %String*, %String** %this.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %4
  store i64 -1, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %5, i64 %6)
  call void @"=.184"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %"$tmpC")
  %7 = load %String*, %String** %this.addr
  %8 = getelementptr inbounds %String, %String* %7, i32 0, i32 1
  %9 = load %"RawPtr[Char]", %"RawPtr[Char]"* %8
  %10 = call i8* @value(%"RawPtr[Char]" %9)
  %11 = load i8, i8* %10
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString.378(%String* sret %_result, %StringRef %a1, i8 %a2, %StringRef %a3, i32 %a4, i8 %a5) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca i8
  store i8 %a2, i8* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %a4.addr = alloca i32
  store i32 %a4, i32* %a4.addr
  %a5.addr = alloca i8
  store i8 %a5, i8* %a5.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor.295(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<.379"(%StringOutputStream* %1, i8* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = call %StringOutputStream* @"<<.383"(%StringOutputStream* %3, i32* %a4.addr)
  %5 = call %StringOutputStream* @"<<.379"(%StringOutputStream* %4, i8* %a5.addr)
  %6 = load %String*, %String** %_result.addr
  %7 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %s, i32 0, i32 0
  call void @ctor.192(%String* %6, %String* %7)
  call void @dtor.297(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.297(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<.379"(%StringOutputStream* %s, i8* %x) #4 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca i8*
  store i8* %x, i8** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %s.addr
  %2 = load i8*, i8** %x.addr
  %3 = load i8, i8* %2
  call void @"<<<.380"(%StringOutputStream* %1, i8 %3)
  %4 = load %StringOutputStream*, %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<.380"(%StringOutputStream* %this, i8 %x) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %x.addr = alloca i8
  store i8 %x, i8* %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  %3 = load i8, i8* %x.addr
  call void @append.381(%String* %2, i8 %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @append.381(%String* %this, i8 %value) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %tmp.v = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = load i8, i8* %value.addr
  %3 = load %String*, %String** %this.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %4
  %6 = call i8* @bytePtr(%"RawPtr[Char]" %5)
  %7 = load %String*, %String** %this.addr
  %8 = getelementptr inbounds %String, %String* %7, i32 0, i32 1
  %9 = load %"RawPtr[Char]", %"RawPtr[Char]"* %8
  %10 = call i8* @bytePtr(%"RawPtr[Char]" %9)
  call void @ctor.57(%StringRef* %tmp.v, i8* %6, i8* %10)
  %11 = load %StringRef, %StringRef* %tmp.v
  call void @insertBefore.382(%String* %1, i8 %2, %StringRef %11)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @insertBefore.382(%String* %this, i8 %value, %StringRef %pos) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %pos.addr = alloca %StringRef
  store %StringRef %pos, %StringRef* %pos.addr
  %posCount = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  %p = alloca %"RawPtr[Char]"
  %tmp.v1 = alloca i64
  %q = alloca %"RawPtr[Char]"
  %tmp.v2 = alloca i64
  %"$tmpC3" = alloca %"RawPtr[Char]"
  %"$tmpC4" = alloca %"RawPtr[Char]"
  %tmp.v5 = alloca i64
  %"$tmpC6" = alloca %"RawPtr[Char]"
  %"$tmpC7" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef, %StringRef* %pos.addr
  call void @_frontPtr(%"RawPtr[Char]"* %"$tmpC", %StringRef %1)
  %2 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %3 = load %String*, %String** %this.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %4
  %6 = call i64 @diff(%"RawPtr[Char]" %2, %"RawPtr[Char]" %5)
  store i64 %6, i64* %posCount
  %7 = load %String*, %String** %this.addr
  %8 = load %String*, %String** %this.addr
  %9 = call i64 @size.193(%String* %8)
  store i64 1, i64* %tmp.v
  %10 = load i64, i64* %tmp.v
  %11 = add i64 %9, %10
  call void @reserve(%String* %7, i64 %11)
  %12 = load %String*, %String** %this.addr
  %13 = getelementptr inbounds %String, %String* %12, i32 0, i32 1
  %14 = load %"RawPtr[Char]", %"RawPtr[Char]"* %13
  store i64 -1, i64* %tmp.v1
  %15 = load i64, i64* %tmp.v1
  call void @advance.195(%"RawPtr[Char]"* %p, %"RawPtr[Char]" %14, i64 %15)
  %16 = load %String*, %String** %this.addr
  %17 = getelementptr inbounds %String, %String* %16, i32 0, i32 0
  %18 = load %"RawPtr[Char]", %"RawPtr[Char]"* %17
  %19 = load i64, i64* %posCount
  store i64 1, i64* %tmp.v2
  %20 = load i64, i64* %tmp.v2
  %21 = call i64 @_DiffType_opMinus(i64 %19, i64 %20)
  call void @advance.195(%"RawPtr[Char]"* %q, %"RawPtr[Char]" %18, i64 %21)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %22 = call i1 @"==.188"(%"RawPtr[Char]"* %p, %"RawPtr[Char]"* %q)
  %23 = xor i1 true, %22
  br i1 %23, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %24 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  %25 = call i8* @value(%"RawPtr[Char]" %24)
  %26 = load i8, i8* %25
  %27 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC3", %"RawPtr[Char]" %27)
  %28 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC3"
  %29 = call i8* @value(%"RawPtr[Char]" %28)
  store i8 %26, i8* %29
  %30 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  %31 = call i8* @value(%"RawPtr[Char]" %30)
  %32 = load i8, i8* %31
  br label %while_step

while_step:                                       ; preds = %while_body
  %33 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  store i64 -1, i64* %tmp.v5
  %34 = load i64, i64* %tmp.v5
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC4", %"RawPtr[Char]" %33, i64 %34)
  call void @"=.184"(%"RawPtr[Char]"* %p, %"RawPtr[Char]"* %"$tmpC4")
  br label %while_block

while_end:                                        ; preds = %while_block
  %35 = load i8, i8* %value.addr
  %36 = load %"RawPtr[Char]", %"RawPtr[Char]"* %p
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC6", %"RawPtr[Char]" %36)
  %37 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC6"
  %38 = call i8* @value(%"RawPtr[Char]" %37)
  store i8 %35, i8* %38
  %39 = load %String*, %String** %this.addr
  %40 = getelementptr inbounds %String, %String* %39, i32 0, i32 1
  %41 = load %String*, %String** %this.addr
  %42 = getelementptr inbounds %String, %String* %41, i32 0, i32 1
  %43 = load %"RawPtr[Char]", %"RawPtr[Char]"* %42
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC7", %"RawPtr[Char]" %43)
  call void @"=.184"(%"RawPtr[Char]"* %40, %"RawPtr[Char]"* %"$tmpC7")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<.383"(%StringOutputStream* %s, i32* %x) #4 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca i32*
  store i32* %x, i32** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %s.addr
  %2 = load i32*, i32** %x.addr
  %3 = load i32, i32* %2
  call void @"<<<.384"(%StringOutputStream* %1, i32 %3)
  %4 = load %StringOutputStream*, %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<.384"(%StringOutputStream* %this, i32 %x) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %"$tmpC" = alloca %StringRef
  %"$tmpC1" = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  %3 = load i32, i32* %x.addr
  call void @intToString(%String* %"$tmpC1", i32 %3)
  call void @all.385(%StringRef* %"$tmpC", %String* %"$tmpC1")
  %4 = load %StringRef, %StringRef* %"$tmpC"
  call void @append(%String* %2, %StringRef %4)
  call void @dtor.229(%String* %"$tmpC1")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @all.385(%StringRef* sret %_result, %String* %this) #4 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %_result.addr
  %2 = load %String*, %String** %this.addr
  %3 = getelementptr inbounds %String, %String* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char]", %"RawPtr[Char]"* %3
  %5 = call i8* @bytePtr(%"RawPtr[Char]" %4)
  %6 = load %String*, %String** %this.addr
  %7 = getelementptr inbounds %String, %String* %6, i32 0, i32 1
  %8 = load %"RawPtr[Char]", %"RawPtr[Char]"* %7
  %9 = call i8* @bytePtr(%"RawPtr[Char]" %8)
  call void @ctor.57(%StringRef* %1, i8* %5, i8* %9)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @intToString(%String* sret %_result, i32 %x) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca i32
  store i32 %x, i32* %x.addr
  %buf = alloca [12 x i8]
  %"$tmpForRef" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = bitcast [12 x i8]* %buf to i8*
  store i8 0, i8* %1
  %2 = load i32, i32* %x.addr
  %3 = bitcast [12 x i8]* %buf to i8*
  call void @_Int_to_CString(i32 %2, i8* %3)
  %4 = load %String*, %String** %_result.addr
  %5 = bitcast [12 x i8]* %buf to i8*
  %6 = call %StringRef @_String_fromCString(i8* %5)
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %4, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+=.386"(%"Vector[UInt]"* %this, i32* %value) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %value.addr = alloca i32*
  store i32* %value, i32** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = load i32*, i32** %value.addr
  call void @pushBack.387(%"Vector[UInt]"* %1, i32* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack.387(%"Vector[UInt]"* %this, i32* %value) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %value.addr = alloca i32*
  store i32* %value, i32** %value.addr
  %t = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v5 = alloca i64
  %"$tmpC" = alloca %"RawPtr[UInt]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 1
  %3 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %3, i32 0, i32 2
  %5 = call i1 @"==.221"(%"RawPtr[UInt]"* %2, %"RawPtr[UInt]"* %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  store i64 2, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  %7 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %8 = call i64 @capacity.388(%"Vector[UInt]"* %7)
  %9 = mul i64 %6, %8
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load i32*, i32** %value.addr
  %11 = load i32, i32* %10
  %12 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %13 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %12, i32 0, i32 1
  %14 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %13
  %15 = call i32* @value.222(%"RawPtr[UInt]" %14)
  store i32 %11, i32* %15
  %16 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %17 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %16, i32 0, i32 1
  %18 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %19 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %18, i32 0, i32 1
  %20 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %19
  call void @advance.223(%"RawPtr[UInt]"* %"$tmpC", %"RawPtr[UInt]" %20)
  call void @"=.215"(%"RawPtr[UInt]"* %17, %"RawPtr[UInt]"* %"$tmpC")
  ret void

if_block1:                                        ; preds = %if_then
  %21 = load i64, i64* %t
  store i64 2, i64* %tmp.v4
  %22 = load i64, i64* %tmp.v4
  %23 = icmp slt i64 %21, %22
  br i1 %23, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %tmp.v5
  %24 = load i64, i64* %tmp.v5
  store i64 %24, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %25 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %26 = load i64, i64* %t
  call void @reserve.389(%"Vector[UInt]"* %25, i64 %26)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i64 @capacity.388(%"Vector[UInt]"* %this) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 2
  %3 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %2
  %4 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %5 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %5
  %7 = call i64 @diff.213(%"RawPtr[UInt]" %3, %"RawPtr[UInt]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @reserve.389(%"Vector[UInt]"* %this, i64 %n) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v8 = alloca double
  %tmp.v9 = alloca double
  %tmp.v10 = alloca i64
  %tmp.v11 = alloca double
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[UInt]"
  %"$tmpC12" = alloca %"RawPtr[UInt]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = call i64 @capacity.388(%"Vector[UInt]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64, i64* %n.addr
  %4 = load i64, i64* %curCapacity
  %5 = icmp sle i64 %3, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64, i64* %n.addr
  store i64 8, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = icmp slt i64 %6, %7
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %tmp.v4
  %9 = load i64, i64* %tmp.v4
  store i64 %9, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block5

if_block5:                                        ; preds = %if_end3
  %10 = load i64, i64* %n.addr
  %11 = sitofp i64 %10 to double
  store double %11, double* %tmp.v8
  %12 = load double, double* %tmp.v8
  %13 = load i64, i64* %curCapacity
  %14 = sitofp i64 %13 to double
  store double %14, double* %tmp.v9
  %15 = load double, double* %tmp.v9
  %16 = call double @_Double_opMul(double 2.000000e+00, double %15)
  %17 = call i1 @_Double_opLT(double %12, double %16)
  br i1 %17, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %18 = load i64, i64* %curCapacity
  %19 = sitofp i64 %18 to double
  store double %19, double* %tmp.v11
  %20 = load double, double* %tmp.v11
  %21 = call double @_Double_opMul(double 2.000000e+00, double %20)
  %22 = fptoui double %21 to i64
  store i64 %22, i64* %tmp.v10
  %23 = load i64, i64* %tmp.v10
  store i64 %23, i64* %n.addr
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  %24 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %25 = call i64 @size.212(%"Vector[UInt]"* %24)
  store i64 %25, i64* %curSize
  %26 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %27 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %26, i32 0, i32 0
  %28 = load i64, i64* %n.addr
  call void @reallocPtr.390(%"RawPtr[UInt]"* %27, i64 %28)
  %29 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %30 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %29, i32 0, i32 1
  %31 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %32 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %31, i32 0, i32 0
  %33 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %32
  %34 = load i64, i64* %curSize
  call void @advance.218(%"RawPtr[UInt]"* %"$tmpC", %"RawPtr[UInt]" %33, i64 %34)
  call void @"=.215"(%"RawPtr[UInt]"* %30, %"RawPtr[UInt]"* %"$tmpC")
  %35 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %36 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %35, i32 0, i32 2
  %37 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %38 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %37, i32 0, i32 0
  %39 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %38
  %40 = load i64, i64* %n.addr
  call void @advance.218(%"RawPtr[UInt]"* %"$tmpC12", %"RawPtr[UInt]" %39, i64 %40)
  call void @"=.215"(%"RawPtr[UInt]"* %36, %"RawPtr[UInt]"* %"$tmpC12")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr.390(%"RawPtr[UInt]"* %this, i64 %n) #4 {
  %this.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %this, %"RawPtr[UInt]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %this.addr
  %2 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %1
  %3 = call i8* @bytePtr.214(%"RawPtr[UInt]" %2)
  %4 = load i64, i64* %n.addr
  %5 = mul i64 %4, 4
  %6 = call i8* @realloc(i8* %3, i64 %5)
  %7 = bitcast i8* %6 to i32*
  %8 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %this.addr
  %9 = getelementptr inbounds %"RawPtr[UInt]", %"RawPtr[UInt]"* %8, i32 0, i32 0
  store i32* %7, i32** %9
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.391(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this) #4 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 1
  %3 = call i1 @isEmpty.392(%"Vector[Token]"* %2)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.392(%"Vector[Token]"* %this) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %3, i32 0, i32 1
  %5 = call i1 @"==.208"(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %4)
  ret i1 %5
}

; Function Attrs: inlinehint nounwind
define internal void @front.393(%Token* sret %_result, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this) #4 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token*, %Token** %_result.addr
  %2 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2, i32 0, i32 1
  %4 = call %Token* @front.394(%"Vector[Token]"* %3)
  call void @ctor.190(%Token* %1, %Token* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %Token* @front.394(%"Vector[Token]"* %this) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Token]", %"RawPtr[Token]"* %2
  %4 = call %Token* @value.209(%"RawPtr[Token]" %3)
  ret %Token* %4
}

; Function Attrs: noinline nounwind
define void @popFront.395(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this) #5 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %oldType = alloca %TokenType
  %"$tmpC" = alloca %Token
  %changeLine = alloca i1
  %"$tmpC1" = alloca %Token
  %tmp.v2 = alloca %TokenType
  %"$tmpC3" = alloca %Token
  %tmp.v4 = alloca %TokenType
  %"$tmpC5" = alloca %Token
  %tmp.v6 = alloca %TokenType
  %tk = alloca %Token
  %outsideParens = alloca i1
  %newCol = alloca i32
  %oldCol = alloca i32
  %tmp.v21 = alloca %TokenType
  %tmp.v22 = alloca i32
  %tmp.v35 = alloca %TokenType
  %tmp.v37 = alloca %TokenType
  %tmp.v39 = alloca %TokenType
  %tmp.v41 = alloca %TokenType
  %tmp.v57 = alloca %TokenType
  %tmp.v59 = alloca %TokenType
  %tmp.v69 = alloca i32
  %numDedents = alloca i32
  %tmp.v75 = alloca %TokenType
  %"$tmpC79" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %tmp.StringRef80 = alloca %StringRef
  %tmp.v87 = alloca %TokenType
  %"$tmpForRef" = alloca i8
  %tmp.v92 = alloca %TokenType
  %"$tmpForRef93" = alloca i8
  %tmp.v98 = alloca %TokenType
  %"$tmpForRef99" = alloca i8
  %tmp.v107 = alloca %TokenType
  %tmp.v116 = alloca %TokenType
  %tmp.v124 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 5
  %3 = load i32, i32* %2
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 5
  %7 = call i32 @post_--.48(i32* %6)
  %8 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 4
  call void @ctor.319(%TokenType* %tmp.v, i32 26)
  call void @"=.255"(%TokenType* %9, %TokenType* %tmp.v)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %10 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @front.396(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %10)
  %11 = getelementptr inbounds %Token, %Token* %"$tmpC", i32 0, i32 1
  call void @ctor.191(%TokenType* %oldType, %TokenType* %11)
  call void @dtor.228(%Token* %"$tmpC")
  %12 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 0
  call void @popFront.397(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %13)
  %14 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %15 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %14, i32 0, i32 0
  call void @front.393(%Token* %"$tmpC1", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %15)
  %16 = getelementptr inbounds %Token, %Token* %"$tmpC1", i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v2, i32 1)
  %17 = call i1 @"==.279"(%TokenType* %16, %TokenType* %tmp.v2)
  br i1 %17, label %cond.true, label %cond.false

dumy_block:                                       ; No predecessors!
  br label %if_end

cond.true:                                        ; preds = %if_end
  br label %cond.end

cond.false:                                       ; preds = %if_end
  %18 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 0
  call void @front.393(%Token* %"$tmpC3", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %19)
  %20 = getelementptr inbounds %Token, %Token* %"$tmpC3", i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v4, i32 0)
  %21 = call i1 @"==.279"(%TokenType* %20, %TokenType* %tmp.v4)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %21, %cond.false ]
  store i1 %cond.res, i1* %changeLine
  br i1 %17, label %cond_destruct_alt1, label %cond_destruct_alt2

cond_destruct_alt1:                               ; preds = %cond.end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond.end
  call void @dtor.228(%Token* %"$tmpC3")
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  call void @dtor.228(%Token* %"$tmpC1")
  br label %while_block

while_block:                                      ; preds = %while_step, %cond_destruct_end
  %22 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %23 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %22, i32 0, i32 0
  call void @front.393(%Token* %"$tmpC5", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %23)
  %24 = getelementptr inbounds %Token, %Token* %"$tmpC5", i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v6, i32 1)
  %25 = call i1 @"==.279"(%TokenType* %24, %TokenType* %tmp.v6)
  br i1 %25, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %26 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %27 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %26, i32 0, i32 0
  call void @popFront.397(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %27)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @dtor.228(%Token* %"$tmpC5")
  %28 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %29 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %28, i32 0, i32 0
  call void @front.393(%Token* %tk, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %29)
  %30 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %31 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %30, i32 0, i32 3
  %32 = call i1 @isEmpty.318(%"Vector[Char]"* %31)
  br i1 %32, label %cond.true7, label %cond.false8

cond.true7:                                       ; preds = %while_end
  br label %cond.end9

cond.false8:                                      ; preds = %while_end
  %33 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %34 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %33, i32 0, i32 3
  %35 = call i8* @back.411(%"Vector[Char]"* %34)
  %36 = load i8, i8* %35
  %37 = icmp eq i8 %36, 123
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res10 = phi i1 [ true, %cond.true7 ], [ %37, %cond.false8 ]
  store i1 %cond.res10, i1* %outsideParens
  br label %if_block11

if_block11:                                       ; preds = %cond.end9
  %38 = load i1, i1* %changeLine
  br i1 %38, label %cond.true14, label %cond.false15

if_then12:                                        ; preds = %cond.end16
  %39 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 0
  %40 = getelementptr inbounds %Location, %Location* %39, i32 0, i32 1
  %41 = getelementptr inbounds %LineCol, %LineCol* %40, i32 0, i32 1
  %42 = load i32, i32* %41
  store i32 %42, i32* %newCol
  %43 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %44 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %43, i32 0, i32 2
  %45 = call i32* @back.412(%"Vector[UInt]"* %44)
  %46 = load i32, i32* %45
  store i32 %46, i32* %oldCol
  br label %if_block18

if_end13:                                         ; preds = %cond_destruct_end83, %cond.end16
  br label %if_block84

cond.true14:                                      ; preds = %if_block11
  %47 = load i1, i1* %outsideParens
  br label %cond.end16

cond.false15:                                     ; preds = %if_block11
  br label %cond.end16

cond.end16:                                       ; preds = %cond.false15, %cond.true14
  %cond.res17 = phi i1 [ %47, %cond.true14 ], [ false, %cond.false15 ]
  br i1 %cond.res17, label %if_then12, label %if_end13

if_block18:                                       ; preds = %if_then12
  %48 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v21, i32 0)
  %49 = call i1 @"==.279"(%TokenType* %48, %TokenType* %tmp.v21)
  br i1 %49, label %if_then19, label %if_end20

if_then19:                                        ; preds = %if_block18
  store i32 1, i32* %tmp.v22
  %50 = load i32, i32* %tmp.v22
  store i32 %50, i32* %newCol
  br label %if_end20

if_end20:                                         ; preds = %if_then19, %if_block18
  br label %if_block23

if_block23:                                       ; preds = %if_end20
  %51 = load i32, i32* %newCol
  %52 = load i32, i32* %oldCol
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %cond.true32, label %cond.false33

if_then24:                                        ; preds = %cond.end28
  %54 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %55 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %54, i32 0, i32 4
  call void @ctor.319(%TokenType* %tmp.v41, i32 32)
  call void @"=.255"(%TokenType* %55, %TokenType* %tmp.v41)
  %56 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %57 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %56, i32 0, i32 5
  store i32 1, i32* %57
  br label %if_end25

if_end25:                                         ; preds = %if_then24, %cond.end28
  br i1 %cond.res38, label %cond_destruct_alt142, label %cond_destruct_alt243

cond.true26:                                      ; preds = %cond.end31
  call void @ctor.319(%TokenType* %tmp.v39, i32 26)
  %58 = call i1 @"==.279"(%TokenType* %oldType, %TokenType* %tmp.v39)
  %59 = xor i1 true, %58
  br label %cond.end28

cond.false27:                                     ; preds = %cond.end31
  br label %cond.end28

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond.res40 = phi i1 [ %59, %cond.true26 ], [ false, %cond.false27 ]
  br i1 %cond.res40, label %if_then24, label %if_end25

cond.true29:                                      ; preds = %cond.end34
  call void @ctor.319(%TokenType* %tmp.v37, i32 32)
  %60 = call i1 @"==.279"(%TokenType* %oldType, %TokenType* %tmp.v37)
  %61 = xor i1 true, %60
  br label %cond.end31

cond.false30:                                     ; preds = %cond.end34
  br label %cond.end31

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond.res38 = phi i1 [ %61, %cond.true29 ], [ false, %cond.false30 ]
  br i1 %cond.res38, label %cond.true26, label %cond.false27

cond.true32:                                      ; preds = %if_block23
  %62 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v35, i32 25)
  %63 = call i1 @"==.279"(%TokenType* %62, %TokenType* %tmp.v35)
  %64 = xor i1 true, %63
  br label %cond.end34

cond.false33:                                     ; preds = %if_block23
  br label %cond.end34

cond.end34:                                       ; preds = %cond.false33, %cond.true32
  %cond.res36 = phi i1 [ %64, %cond.true32 ], [ false, %cond.false33 ]
  br i1 %cond.res36, label %cond.true29, label %cond.false30

cond_destruct_alt142:                             ; preds = %if_end25
  br label %cond_destruct_end44

cond_destruct_alt243:                             ; preds = %if_end25
  br label %cond_destruct_end44

cond_destruct_end44:                              ; preds = %cond_destruct_alt243, %cond_destruct_alt142
  br i1 %cond.res36, label %cond_destruct_alt145, label %cond_destruct_alt246

cond_destruct_alt145:                             ; preds = %cond_destruct_end44
  br label %cond_destruct_end47

cond_destruct_alt246:                             ; preds = %cond_destruct_end44
  br label %cond_destruct_end47

cond_destruct_end47:                              ; preds = %cond_destruct_alt246, %cond_destruct_alt145
  br i1 %53, label %cond_destruct_alt148, label %cond_destruct_alt249

cond_destruct_alt148:                             ; preds = %cond_destruct_end47
  br label %cond_destruct_end50

cond_destruct_alt249:                             ; preds = %cond_destruct_end47
  br label %cond_destruct_end50

cond_destruct_end50:                              ; preds = %cond_destruct_alt249, %cond_destruct_alt148
  br label %if_block51

if_block51:                                       ; preds = %cond_destruct_end50
  %65 = load i32, i32* %newCol
  %66 = load i32, i32* %oldCol
  %67 = icmp sgt i32 %65, %66
  br i1 %67, label %cond.true54, label %cond.false55

if_then52:                                        ; preds = %cond.end56
  %68 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %69 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %68, i32 0, i32 4
  call void @ctor.319(%TokenType* %tmp.v59, i32 25)
  call void @"=.255"(%TokenType* %69, %TokenType* %tmp.v59)
  %70 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %71 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %70, i32 0, i32 5
  store i32 1, i32* %71
  %72 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %73 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %72, i32 0, i32 2
  call void @"+=.386"(%"Vector[UInt]"* %73, i32* %newCol)
  br label %if_end53

if_end53:                                         ; preds = %if_then52, %cond.end56
  br i1 %67, label %cond_destruct_alt160, label %cond_destruct_alt261

cond.true54:                                      ; preds = %if_block51
  %74 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v57, i32 0)
  %75 = call i1 @"==.279"(%TokenType* %74, %TokenType* %tmp.v57)
  %76 = xor i1 true, %75
  br label %cond.end56

cond.false55:                                     ; preds = %if_block51
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false55, %cond.true54
  %cond.res58 = phi i1 [ %76, %cond.true54 ], [ false, %cond.false55 ]
  br i1 %cond.res58, label %if_then52, label %if_end53

cond_destruct_alt160:                             ; preds = %if_end53
  br label %cond_destruct_end62

cond_destruct_alt261:                             ; preds = %if_end53
  br label %cond_destruct_end62

cond_destruct_end62:                              ; preds = %cond_destruct_alt261, %cond_destruct_alt160
  br label %if_block63

if_block63:                                       ; preds = %cond_destruct_end62
  %77 = load i32, i32* %newCol
  %78 = load i32, i32* %oldCol
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %cond.true66, label %cond.false67

if_then64:                                        ; preds = %cond.end68
  store i32 0, i32* %numDedents
  br label %while_block71

if_end65:                                         ; preds = %if_end78, %cond.end68
  br i1 %79, label %cond_destruct_alt181, label %cond_destruct_alt282

cond.true66:                                      ; preds = %if_block63
  %80 = load i32, i32* %newCol
  store i32 1, i32* %tmp.v69
  %81 = load i32, i32* %tmp.v69
  %82 = icmp sge i32 %80, %81
  br label %cond.end68

cond.false67:                                     ; preds = %if_block63
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false67, %cond.true66
  %cond.res70 = phi i1 [ %82, %cond.true66 ], [ false, %cond.false67 ]
  br i1 %cond.res70, label %if_then64, label %if_end65

while_block71:                                    ; preds = %while_step73, %if_then64
  %83 = load i32, i32* %newCol
  %84 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %85 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %84, i32 0, i32 2
  %86 = call i32* @back.412(%"Vector[UInt]"* %85)
  %87 = load i32, i32* %86
  %88 = icmp slt i32 %83, %87
  br i1 %88, label %while_body72, label %while_end74

while_body72:                                     ; preds = %while_block71
  %89 = call i32 @"post_++.39"(i32* %numDedents)
  %90 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %91 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %90, i32 0, i32 2
  call void @popBack.414(%"Vector[UInt]"* %91)
  br label %while_step73

while_step73:                                     ; preds = %while_body72
  br label %while_block71

while_end74:                                      ; preds = %while_block71
  %92 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %93 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %92, i32 0, i32 4
  call void @ctor.319(%TokenType* %tmp.v75, i32 32)
  call void @"=.255"(%TokenType* %93, %TokenType* %tmp.v75)
  %94 = load i32, i32* %numDedents
  %95 = add i32 1, %94
  %96 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %97 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %96, i32 0, i32 5
  store i32 %95, i32* %97
  br label %if_block76

if_block76:                                       ; preds = %while_end74
  %98 = load i32, i32* %newCol
  %99 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %100 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %99, i32 0, i32 2
  %101 = call i32* @back.412(%"Vector[UInt]"* %100)
  %102 = load i32, i32* %101
  %103 = icmp ne i32 %98, %102
  br i1 %103, label %if_then77, label %if_end78

if_then77:                                        ; preds = %if_block76
  %104 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %105 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %104, i32 0, i32 1
  %106 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 0
  %107 = load %Location, %Location* %106
  %108 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %109 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.43, i32 0, i32 0), i8** %108
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.43, i32 0, i32 31), i8** %109
  %110 = load %StringRef, %StringRef* %tmp.StringRef
  %111 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %112 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %111, i32 0, i32 2
  %113 = call i32* @back.412(%"Vector[UInt]"* %112)
  %114 = load i32, i32* %113
  %115 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef80, i32 0, i32 0
  %116 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef80, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.44, i32 0, i32 0), i8** %115
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.44, i32 0, i32 6), i8** %116
  %117 = load %StringRef, %StringRef* %tmp.StringRef80
  %118 = load i32, i32* %newCol
  call void @toString.415(%String* %"$tmpC79", %StringRef %110, i32 %114, %StringRef %117, i32 %118)
  call void @reportError(%ExternalErrorReporter* %105, %Location %107, %String* %"$tmpC79")
  call void @dtor.229(%String* %"$tmpC79")
  br label %if_end78

if_end78:                                         ; preds = %if_then77, %if_block76
  br label %if_end65

cond_destruct_alt181:                             ; preds = %if_end65
  br label %cond_destruct_end83

cond_destruct_alt282:                             ; preds = %if_end65
  br label %cond_destruct_end83

cond_destruct_end83:                              ; preds = %cond_destruct_alt282, %cond_destruct_alt181
  br label %if_end13

if_block84:                                       ; preds = %if_end13
  %119 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v87, i32 29)
  %120 = call i1 @"==.279"(%TokenType* %119, %TokenType* %tmp.v87)
  br i1 %120, label %if_then85, label %if_else

if_then85:                                        ; preds = %if_block84
  %121 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %122 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %121, i32 0, i32 3
  store i8 40, i8* %"$tmpForRef"
  call void @"+="(%"Vector[Char]"* %122, i8* %"$tmpForRef")
  br label %if_end86

if_else:                                          ; preds = %if_block84
  br label %if_block88

if_end86:                                         ; preds = %if_end91, %if_then85
  call void @dtor.228(%Token* %tk)
  ret void

if_block88:                                       ; preds = %if_else
  %123 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v92, i32 27)
  %124 = call i1 @"==.279"(%TokenType* %123, %TokenType* %tmp.v92)
  br i1 %124, label %if_then89, label %if_else90

if_then89:                                        ; preds = %if_block88
  %125 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %126 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %125, i32 0, i32 3
  store i8 91, i8* %"$tmpForRef93"
  call void @"+="(%"Vector[Char]"* %126, i8* %"$tmpForRef93")
  br label %if_end91

if_else90:                                        ; preds = %if_block88
  br label %if_block94

if_end91:                                         ; preds = %if_end97, %if_then89
  br label %if_end86

if_block94:                                       ; preds = %if_else90
  %127 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v98, i32 25)
  %128 = call i1 @"==.279"(%TokenType* %127, %TokenType* %tmp.v98)
  br i1 %128, label %if_then95, label %if_else96

if_then95:                                        ; preds = %if_block94
  %129 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %130 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %129, i32 0, i32 3
  store i8 123, i8* %"$tmpForRef99"
  call void @"+="(%"Vector[Char]"* %130, i8* %"$tmpForRef99")
  br label %if_end97

if_else96:                                        ; preds = %if_block94
  br label %if_block100

if_end97:                                         ; preds = %if_end103, %if_then95
  br label %if_end91

if_block100:                                      ; preds = %if_else96
  %131 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v107, i32 30)
  %132 = call i1 @"==.279"(%TokenType* %131, %TokenType* %tmp.v107)
  br i1 %132, label %cond.true104, label %cond.false105

if_then101:                                       ; preds = %cond.end106
  %133 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %134 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %133, i32 0, i32 3
  call void @popBack.418(%"Vector[Char]"* %134)
  br label %if_end103

if_else102:                                       ; preds = %cond.end106
  br label %if_block109

if_end103:                                        ; preds = %if_end112, %if_then101
  br label %if_end97

cond.true104:                                     ; preds = %if_block100
  %135 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %136 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %135, i32 0, i32 3
  %137 = call i8* @back.411(%"Vector[Char]"* %136)
  %138 = load i8, i8* %137
  %139 = icmp eq i8 %138, 40
  br label %cond.end106

cond.false105:                                    ; preds = %if_block100
  br label %cond.end106

cond.end106:                                      ; preds = %cond.false105, %cond.true104
  %cond.res108 = phi i1 [ %139, %cond.true104 ], [ false, %cond.false105 ]
  br i1 %cond.res108, label %if_then101, label %if_else102

if_block109:                                      ; preds = %if_else102
  %140 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v116, i32 28)
  %141 = call i1 @"==.279"(%TokenType* %140, %TokenType* %tmp.v116)
  br i1 %141, label %cond.true113, label %cond.false114

if_then110:                                       ; preds = %cond.end115
  %142 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %143 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %142, i32 0, i32 3
  call void @popBack.418(%"Vector[Char]"* %143)
  br label %if_end112

if_else111:                                       ; preds = %cond.end115
  br label %if_block118

if_end112:                                        ; preds = %if_end120, %if_then110
  br label %if_end103

cond.true113:                                     ; preds = %if_block109
  %144 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %145 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %144, i32 0, i32 3
  %146 = call i8* @back.411(%"Vector[Char]"* %145)
  %147 = load i8, i8* %146
  %148 = icmp eq i8 %147, 91
  br label %cond.end115

cond.false114:                                    ; preds = %if_block109
  br label %cond.end115

cond.end115:                                      ; preds = %cond.false114, %cond.true113
  %cond.res117 = phi i1 [ %148, %cond.true113 ], [ false, %cond.false114 ]
  br i1 %cond.res117, label %if_then110, label %if_else111

if_block118:                                      ; preds = %if_else111
  %149 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v124, i32 26)
  %150 = call i1 @"==.279"(%TokenType* %149, %TokenType* %tmp.v124)
  br i1 %150, label %cond.true121, label %cond.false122

if_then119:                                       ; preds = %cond.end123
  %151 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %152 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %151, i32 0, i32 3
  call void @popBack.418(%"Vector[Char]"* %152)
  br label %if_end120

if_end120:                                        ; preds = %if_then119, %cond.end123
  br label %if_end112

cond.true121:                                     ; preds = %if_block118
  %153 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %154 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %153, i32 0, i32 3
  %155 = call i8* @back.411(%"Vector[Char]"* %154)
  %156 = load i8, i8* %155
  %157 = icmp eq i8 %156, 123
  br label %cond.end123

cond.false122:                                    ; preds = %if_block118
  br label %cond.end123

cond.end123:                                      ; preds = %cond.false122, %cond.true121
  %cond.res125 = phi i1 [ %157, %cond.true121 ], [ false, %cond.false122 ]
  br i1 %cond.res125, label %if_then119, label %if_end120
}

; Function Attrs: inlinehint nounwind
define internal void @front.396(%Token* sret %_result, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tk = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @front.393(%Token* %tk, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %2)
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 5
  %5 = load i32, i32* %4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %7 = getelementptr inbounds %Token, %Token* %tk, i32 0, i32 1
  %8 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 4
  call void @"=.255"(%TokenType* %7, %TokenType* %9)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %10 = load %Token*, %Token** %_result.addr
  call void @ctor.190(%Token* %10, %Token* %tk)
  call void @dtor.228(%Token* %tk)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.228(%Token* %tk)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront.397(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this) #4 {
  %this.addr = alloca %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %tmp.v = alloca i64
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %1, i32 0, i32 1
  store i64 0, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  call void @remove.398(%"Vector[Token]"* %2, i64 %3)
  br label %if_block

if_block:                                         ; preds = %code
  %4 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %5 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %4, i32 0, i32 1
  %6 = call i1 @isEmpty.392(%"Vector[Token]"* %5)
  br i1 %6, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %7 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %7, i32 0, i32 1
  %9 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %10 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %9, i32 0, i32 0
  call void @"post_++.313"(%Token* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %10)
  call void @"+=.311"(%"Vector[Token]"* %8, %Token* %"$tmpC")
  call void @dtor.228(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  ret void

cond.true:                                        ; preds = %if_block
  %11 = load %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"** %this.addr
  %12 = getelementptr inbounds %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]", %"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %11, i32 0, i32 0
  %13 = call i1 @"pre_!!.309"(%"SparrowScanner[_CharSource, ExternalErrorReporter]"* %12)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %13, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @remove.398(%"Vector[Token]"* %this, i64 %index) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %r = alloca %"ContiguousMemoryRange[Token]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  call void @all.399(%"ContiguousMemoryRange[Token]"* %r, %"Vector[Token]"* %1)
  %2 = load i64, i64* %index.addr
  call void @popFront.401(%"ContiguousMemoryRange[Token]"* %r, i64 %2)
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %4 = call i64 @size.199(%"Vector[Token]"* %3)
  %5 = load i64, i64* %index.addr
  %6 = call i64 @_SizeType_opMinus(i64 %4, i64 %5)
  store i64 1, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = call i64 @_SizeType_opMinus(i64 %6, i64 %7)
  call void @popBack.403(%"ContiguousMemoryRange[Token]"* %r, i64 %8)
  %9 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %10 = load %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %r
  call void @remove.404(%"Vector[Token]"* %9, %"ContiguousMemoryRange[Token]" %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @all.399(%"ContiguousMemoryRange[Token]"* sret %_result, %"Vector[Token]"* %this) #4 {
  %_result.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %_result, %"ContiguousMemoryRange[Token]"** %_result.addr
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %_result.addr
  %2 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %3 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[Token]", %"RawPtr[Token]"* %3
  %5 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[Token]", %"RawPtr[Token]"* %6
  call void @ctor.400(%"ContiguousMemoryRange[Token]"* %1, %"RawPtr[Token]" %4, %"RawPtr[Token]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.400(%"ContiguousMemoryRange[Token]"* %this, %"RawPtr[Token]" %f_begin, %"RawPtr[Token]" %f_end) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %f_begin.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %f_begin, %"RawPtr[Token]"* %f_begin.addr
  %f_end.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %f_end, %"RawPtr[Token]"* %f_end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  call void @ctor.207(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %f_begin.addr)
  %3 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 1
  call void @ctor.207(%"RawPtr[Token]"* %4, %"RawPtr[Token]"* %f_end.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront.401(%"ContiguousMemoryRange[Token]"* %this, i64 %n) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Token]", %"RawPtr[Token]"* %4
  %6 = load i64, i64* %n.addr
  store i64 %6, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  call void @advance.402(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %5, i64 %7)
  call void @"=.202"(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance.402(%"RawPtr[Token]"* sret %_result, %"RawPtr[Token]" %this, i64 %n) #4 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %this.addr = alloca %"RawPtr[Token]"
  store %"RawPtr[Token]" %this, %"RawPtr[Token]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %_result.addr
  %2 = load %"RawPtr[Token]", %"RawPtr[Token]"* %this.addr
  %3 = call i8* @bytePtr.201(%"RawPtr[Token]" %2)
  %4 = load i64, i64* %n.addr
  store i64 72, i64* %tmp.v1
  %5 = load i64, i64* %tmp.v1
  %6 = mul i64 %4, %5
  store i64 %6, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  call void @ctor.206(%"RawPtr[Token]"* %1, i8* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @popBack.403(%"ContiguousMemoryRange[Token]"* %this, i64 %n) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 1
  %3 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Token]", %"RawPtr[Token]"* %4
  %6 = load i64, i64* %n.addr
  store i64 %6, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = sub i64 0, %7
  call void @advance.402(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %5, i64 %8)
  call void @"=.202"(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove.404(%"Vector[Token]"* %this, %"ContiguousMemoryRange[Token]" %range) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %range.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %range, %"ContiguousMemoryRange[Token]"* %range.addr
  %rBegin = alloca %"RawPtr[Token]"
  %rEnd = alloca %"RawPtr[Token]"
  %"$rangeVar" = alloca %"ContiguousMemoryRange[Token]"
  %el = alloca %Token*
  %"$tmpC" = alloca %"RawPtr[Token]"
  %"$tmpC5" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %range.addr
  call void @frontPtr.405(%"RawPtr[Token]"* %rBegin, %"ContiguousMemoryRange[Token]" %1)
  %2 = load %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %range.addr
  call void @backPtr.406(%"RawPtr[Token]"* %rEnd, %"ContiguousMemoryRange[Token]" %2)
  call void @ctor.407(%"ContiguousMemoryRange[Token]"* %"$rangeVar", %"ContiguousMemoryRange[Token]"* %range.addr)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %"$rangeVar"
  %4 = call i1 @isEmpty.408(%"ContiguousMemoryRange[Token]" %3)
  %5 = xor i1 true, %4
  br i1 %5, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %6 = load %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %"$rangeVar"
  %7 = call %Token* @front.409(%"ContiguousMemoryRange[Token]" %6)
  store %Token* %7, %Token** %el
  %8 = load %Token*, %Token** %el
  call void @dtor.228(%Token* %8)
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront.410(%"ContiguousMemoryRange[Token]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %while_block1

while_block1:                                     ; preds = %while_step3, %while_end
  %9 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %9, i32 0, i32 1
  %11 = call i1 @"==.208"(%"RawPtr[Token]"* %rEnd, %"RawPtr[Token]"* %10)
  %12 = xor i1 true, %11
  br i1 %12, label %while_body2, label %while_end4

while_body2:                                      ; preds = %while_block1
  %13 = load %"RawPtr[Token]", %"RawPtr[Token]"* %rBegin
  %14 = call %Token* @value.209(%"RawPtr[Token]" %13)
  %15 = load %"RawPtr[Token]", %"RawPtr[Token]"* %rEnd
  %16 = call %Token* @value.209(%"RawPtr[Token]" %15)
  call void @ctor.190(%Token* %14, %Token* %16)
  %17 = load %"RawPtr[Token]", %"RawPtr[Token]"* %rEnd
  %18 = call %Token* @value.209(%"RawPtr[Token]" %17)
  call void @dtor.228(%Token* %18)
  %19 = load %"RawPtr[Token]", %"RawPtr[Token]"* %rBegin
  call void @advance.210(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %19)
  call void @"=.202"(%"RawPtr[Token]"* %rBegin, %"RawPtr[Token]"* %"$tmpC")
  %20 = load %"RawPtr[Token]", %"RawPtr[Token]"* %rEnd
  call void @advance.210(%"RawPtr[Token]"* %"$tmpC5", %"RawPtr[Token]" %20)
  call void @"=.202"(%"RawPtr[Token]"* %rEnd, %"RawPtr[Token]"* %"$tmpC5")
  br label %while_step3

while_step3:                                      ; preds = %while_body2
  br label %while_block1

while_end4:                                       ; preds = %while_block1
  %21 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %22 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %21, i32 0, i32 1
  call void @"=.202"(%"RawPtr[Token]"* %22, %"RawPtr[Token]"* %rBegin)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @frontPtr.405(%"RawPtr[Token]"* sret %_result, %"ContiguousMemoryRange[Token]" %this) #4 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %this.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %this, %"ContiguousMemoryRange[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %_result.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %this.addr, i32 0, i32 0
  call void @ctor.207(%"RawPtr[Token]"* %1, %"RawPtr[Token]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @backPtr.406(%"RawPtr[Token]"* sret %_result, %"ContiguousMemoryRange[Token]" %this) #4 {
  %_result.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %_result, %"RawPtr[Token]"** %_result.addr
  %this.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %this, %"ContiguousMemoryRange[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Token]"*, %"RawPtr[Token]"** %_result.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %this.addr, i32 0, i32 1
  call void @ctor.207(%"RawPtr[Token]"* %1, %"RawPtr[Token]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.407(%"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %other, %"ContiguousMemoryRange[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  call void @ctor.207(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %4)
  %5 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %6 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %7, i32 0, i32 1
  call void @ctor.207(%"RawPtr[Token]"* %6, %"RawPtr[Token]"* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.408(%"ContiguousMemoryRange[Token]" %this) #4 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %this, %"ContiguousMemoryRange[Token]"* %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %this.addr, i32 0, i32 1
  %2 = load %"RawPtr[Token]", %"RawPtr[Token]"* %1
  %3 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %this.addr, i32 0, i32 0
  %4 = load %"RawPtr[Token]", %"RawPtr[Token]"* %3
  %5 = call i64 @diff.200(%"RawPtr[Token]" %2, %"RawPtr[Token]" %4)
  store i64 0, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  %7 = icmp sle i64 %5, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal %Token* @front.409(%"ContiguousMemoryRange[Token]" %this) #4 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"
  store %"ContiguousMemoryRange[Token]" %this, %"ContiguousMemoryRange[Token]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %this.addr, i32 0, i32 0
  %2 = load %"RawPtr[Token]", %"RawPtr[Token]"* %1
  %3 = call %Token* @value.209(%"RawPtr[Token]" %2)
  ret %Token* %3
}

; Function Attrs: alwaysinline nounwind
define internal void @popFront.410(%"ContiguousMemoryRange[Token]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[Token]", %"RawPtr[Token]"* %4
  call void @advance.210(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %5)
  call void @"=.202"(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i8* @back.411(%"Vector[Char]"* %this) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  store i64 -1, i64* %tmp.v
  %4 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %3, i64 %4)
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %6 = call i8* @value(%"RawPtr[Char]" %5)
  ret i8* %6
}

; Function Attrs: inlinehint nounwind
define internal i32* @back.412(%"Vector[UInt]"* %this) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[UInt]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %2
  store i64 -1, i64* %tmp.v
  %4 = load i64, i64* %tmp.v
  call void @advance.413(%"RawPtr[UInt]"* %"$tmpC", %"RawPtr[UInt]" %3, i64 %4)
  %5 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %"$tmpC"
  %6 = call i32* @value.222(%"RawPtr[UInt]" %5)
  ret i32* %6
}

; Function Attrs: inlinehint nounwind
define internal void @advance.413(%"RawPtr[UInt]"* sret %_result, %"RawPtr[UInt]" %this, i64 %n) #4 {
  %_result.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %_result, %"RawPtr[UInt]"** %_result.addr
  %this.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %this, %"RawPtr[UInt]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[UInt]"*, %"RawPtr[UInt]"** %_result.addr
  %2 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %this.addr
  %3 = call i8* @bytePtr.214(%"RawPtr[UInt]" %2)
  %4 = load i64, i64* %n.addr
  store i64 4, i64* %tmp.v1
  %5 = load i64, i64* %tmp.v1
  %6 = mul i64 %4, %5
  store i64 %6, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = call i8* @ptrAdd(i8* %3, i64 %7)
  call void @ctor.219(%"RawPtr[UInt]"* %1, i8* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popBack.414(%"Vector[UInt]"* %this) #4 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[UInt]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 1
  %3 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %4 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %4
  store i64 -1, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  call void @advance.413(%"RawPtr[UInt]"* %"$tmpC", %"RawPtr[UInt]" %5, i64 %6)
  call void @"=.215"(%"RawPtr[UInt]"* %2, %"RawPtr[UInt]"* %"$tmpC")
  %7 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %8 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %7, i32 0, i32 1
  %9 = load %"RawPtr[UInt]", %"RawPtr[UInt]"* %8
  %10 = call i32* @value.222(%"RawPtr[UInt]" %9)
  %11 = load i32, i32* %10
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString.415(%String* sret %_result, %StringRef %a1, i32 %a2, %StringRef %a3, i32 %a4) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca i32
  store i32 %a2, i32* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %a4.addr = alloca i32
  store i32 %a4, i32* %a4.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor.295(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<.416"(%StringOutputStream* %1, i32* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = call %StringOutputStream* @"<<.416"(%StringOutputStream* %3, i32* %a4.addr)
  %5 = load %String*, %String** %_result.addr
  %6 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %s, i32 0, i32 0
  call void @ctor.192(%String* %5, %String* %6)
  call void @dtor.297(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.297(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<.416"(%StringOutputStream* %s, i32* %x) #4 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca i32*
  store i32* %x, i32** %x.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %s.addr
  %2 = load i32*, i32** %x.addr
  %3 = load i32, i32* %2
  %4 = zext i32 %3 to i64
  store i64 %4, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  call void @"<<<.417"(%StringOutputStream* %1, i64 %5)
  %6 = load %StringOutputStream*, %StringOutputStream** %s.addr
  ret %StringOutputStream* %6
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<.417"(%StringOutputStream* %this, i64 %x) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %"$tmpC" = alloca %StringRef
  %"$tmpC1" = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  %3 = load i64, i64* %x.addr
  call void @ulongToString(%String* %"$tmpC1", i64 %3)
  call void @all.385(%StringRef* %"$tmpC", %String* %"$tmpC1")
  %4 = load %StringRef, %StringRef* %"$tmpC"
  call void @append(%String* %2, %StringRef %4)
  call void @dtor.229(%String* %"$tmpC1")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ulongToString(%String* sret %_result, i64 %x) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca i64
  store i64 %x, i64* %x.addr
  %buf = alloca [16 x i8]
  %"$tmpForRef" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = bitcast [16 x i8]* %buf to i8*
  store i8 0, i8* %1
  %2 = load i64, i64* %x.addr
  %3 = bitcast [16 x i8]* %buf to i8*
  call void @_ULong_to_CString(i64 %2, i8* %3)
  %4 = load %String*, %String** %_result.addr
  %5 = bitcast [16 x i8]* %buf to i8*
  %6 = call %StringRef @_String_fromCString(i8* %5)
  store %StringRef %6, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %4, %StringRef* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popBack.418(%"Vector[Char]"* %this) #4 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 1
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %4 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %3, i32 0, i32 1
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %4
  store i64 -1, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %5, i64 %6)
  call void @"=.184"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %"$tmpC")
  %7 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %8 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %7, i32 0, i32 1
  %9 = load %"RawPtr[Char]", %"RawPtr[Char]"* %8
  %10 = call i8* @value(%"RawPtr[Char]" %9)
  %11 = load i8, i8* %10
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.419(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %tokens, %ExternalErrorReporter %errorReporter) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tokens.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %tokens, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %tokens.addr
  %errorReporter.addr = alloca %ExternalErrorReporter
  store %ExternalErrorReporter %errorReporter, %ExternalErrorReporter* %errorReporter.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 1
  call void @ctor.162(%Token* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %tokens.addr
  call void @ctor.420(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %5)
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %7 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, i32 0, i32 2
  store i1 false, i1* %7
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.420(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %src) #4 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %src.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]" %src, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %src.addr
  %tmp.v = alloca i64
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 0
  call void @ctor.165(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %4 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3, i32 0, i32 0
  call void @"=.259"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %4, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %src.addr)
  %5 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %6 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %5, i32 0, i32 1
  call void @ctor.167(%"Vector[Token]"* %6)
  %7 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %7, i32 0, i32 1
  store i64 10, i64* %tmp.v
  %9 = load i64, i64* %tmp.v
  call void @reserve.306(%"Vector[Token]"* %8, i64 %9)
  br label %if_block

if_block:                                         ; preds = %code
  %10 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %10, i32 0, i32 0
  %12 = call i1 @"pre_!!.421"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %11)
  br i1 %12, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %13 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %14 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %13, i32 0, i32 1
  %15 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %16 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %15, i32 0, i32 0
  call void @"post_++.423"(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %16)
  call void @"+=.311"(%"Vector[Token]"* %14, %Token* %"$tmpC")
  call void @dtor.228(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"pre_!!.421"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r) #4 {
  %r.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  %2 = call i1 @isEmpty.422(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %3 = xor i1 true, %2
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.422(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %this.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 5
  %3 = load i32, i32* %2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %5 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 0
  %7 = call i1 @isEmpty.391(%"RangeWithLookahead[SparrowScanner[_CharSource, ExternalErrorReporter]]"* %6)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %7, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal void @"post_++.423"(%Token* sret %_result, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r) #4 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %r, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  %res = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  call void @front.396(%Token* %res, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"** %r.addr
  call void @popFront.395(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Token*, %Token** %_result.addr
  call void @ctor.190(%Token* %3, %Token* %res)
  call void @dtor.228(%Token* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.228(%Token* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %ParserContext* @createScanner(%StringRef %filename, %StringRef %code, %Location* %loc) #4 {
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  %loc.addr = alloca %Location*
  store %Location* %loc, %Location** %loc.addr
  %"$tmpForRef" = alloca i1
  br label %code1

code1:                                            ; preds = %0
  %1 = load %Location*, %Location** %loc.addr
  store i1 true, i1* %"$tmpForRef"
  %2 = call %ParserContext* @new(%StringRef* %filename.addr, %StringRef* %code.addr, %Location* %1, i1* %"$tmpForRef")
  ret %ParserContext* %2
}

; Function Attrs: inlinehint nounwind
define internal %ParserContext* @new(%StringRef* %arg1, %StringRef* %arg2, %Location* %arg3, i1* %arg4) #4 {
  %arg1.addr = alloca %StringRef*
  store %StringRef* %arg1, %StringRef** %arg1.addr
  %arg2.addr = alloca %StringRef*
  store %StringRef* %arg2, %StringRef** %arg2.addr
  %arg3.addr = alloca %Location*
  store %Location* %arg3, %Location** %arg3.addr
  %arg4.addr = alloca i1*
  store i1* %arg4, i1** %arg4.addr
  %res = alloca %ParserContext*
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @malloc(i64 792)
  %2 = bitcast i8* %1 to %ParserContext*
  store %ParserContext* %2, %ParserContext** %res
  %3 = load %ParserContext*, %ParserContext** %res
  %4 = load %StringRef*, %StringRef** %arg1.addr
  %5 = load %StringRef, %StringRef* %4
  %6 = load %StringRef*, %StringRef** %arg2.addr
  %7 = load %StringRef, %StringRef* %6
  %8 = load %Location*, %Location** %arg3.addr
  %9 = load %Location, %Location* %8
  %10 = load i1*, i1** %arg4.addr
  %11 = load i1, i1* %10
  call void @ctor.291(%ParserContext* %3, %StringRef %5, %StringRef %7, %Location %9, i1 %11)
  %12 = load %ParserContext*, %ParserContext** %res
  ret %ParserContext* %12
}

; Function Attrs: noinline nounwind
define %ParserContext* @spr_parserIf_createParser(%StringRef %filename, %StringRef %code, %Location* %loc) #5 {
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %code.addr = alloca %StringRef
  store %StringRef %code, %StringRef* %code.addr
  %loc.addr = alloca %Location*
  store %Location* %loc, %Location** %loc.addr
  %res = alloca %ParserContext*
  br label %code1

code1:                                            ; preds = %0
  %1 = load %Location*, %Location** %loc.addr
  %2 = call %ParserContext* @new.424(%StringRef* %filename.addr, %StringRef* %code.addr, %Location* %1)
  store %ParserContext* %2, %ParserContext** %res
  %3 = load %ParserContext*, %ParserContext** %res
  ret %ParserContext* %3
}

; Function Attrs: inlinehint nounwind
define internal %ParserContext* @new.424(%StringRef* %arg1, %StringRef* %arg2, %Location* %arg3) #4 {
  %arg1.addr = alloca %StringRef*
  store %StringRef* %arg1, %StringRef** %arg1.addr
  %arg2.addr = alloca %StringRef*
  store %StringRef* %arg2, %StringRef** %arg2.addr
  %arg3.addr = alloca %Location*
  store %Location* %arg3, %Location** %arg3.addr
  %res = alloca %ParserContext*
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @malloc(i64 792)
  %2 = bitcast i8* %1 to %ParserContext*
  store %ParserContext* %2, %ParserContext** %res
  %3 = load %ParserContext*, %ParserContext** %res
  %4 = load %StringRef*, %StringRef** %arg1.addr
  %5 = load %StringRef, %StringRef* %4
  %6 = load %StringRef*, %StringRef** %arg2.addr
  %7 = load %StringRef, %StringRef* %6
  %8 = load %Location*, %Location** %arg3.addr
  %9 = load %Location, %Location* %8
  call void @ctor.291(%ParserContext* %3, %StringRef %5, %StringRef %7, %Location %9, i1 false)
  %10 = load %ParserContext*, %ParserContext** %res
  ret %ParserContext* %10
}

; Function Attrs: noinline nounwind
define void @spr_parserIf_destroyParser(%ParserContext* %ctx) #5 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext*, %ParserContext** %ctx.addr
  call void @delete(%ParserContext* %1)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @delete(%ParserContext* %obj) #4 {
  %obj.addr = alloca %ParserContext*
  store %ParserContext* %obj, %ParserContext** %obj.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %ParserContext*, %ParserContext** %obj.addr
  %2 = bitcast %ParserContext* %1 to i8*
  %3 = call i1 @implOpRefNE(i8* %2, i8* null)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %ParserContext*, %ParserContext** %obj.addr
  call void @dtor.226(%ParserContext* %4)
  %5 = load %ParserContext*, %ParserContext** %obj.addr
  %6 = bitcast %ParserContext* %5 to i8*
  call void @free(i8* %6)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: noinline nounwind
define void @spr_parserIf_nextToken(%ParserContext* %ctx, %Token* %outToken) #5 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  %outToken.addr = alloca %Token*
  store %Token* %outToken, %Token** %outToken.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %Token*, %Token** %outToken.addr
  %2 = load %ParserContext*, %ParserContext** %ctx.addr
  %3 = getelementptr inbounds %ParserContext, %ParserContext* %2, i32 0, i32 3
  call void @"post_++.313"(%Token* %"$tmpC", %"SparrowScanner[_CharSource, ExternalErrorReporter]"* %3)
  call void @"=.254"(%Token* %1, %Token* %"$tmpC")
  call void @dtor.228(%Token* %"$tmpC")
  ret void
}

; Function Attrs: noinline nounwind
define %Node @spr_parserIf_parseModule(%ParserContext* %ctx) #5 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext*, %ParserContext** %ctx.addr
  %2 = getelementptr inbounds %ParserContext, %ParserContext* %1, i32 0, i32 5
  call void @parseModule(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Node, %Node* %"$tmpC"
  ret %Node %3
}

; Function Attrs: inlinehint nounwind
define internal void @parseModule(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %loc = alloca %Location
  %moduleName = alloca %Node
  %decls = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC1" = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseModuleName(%Node* %moduleName, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  call void @ctor.436(%Node* %decls)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i1 true, %Node* %decls)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 0)
  %5 = load %TokenType, %TokenType* %tmp.v
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  %7 = load %Node*, %Node** %_result.addr
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC1")
  %9 = load %Node, %Node* %moduleName
  %10 = load %Node, %Node* %decls
  %11 = call %Node @comp_parser_mkModule(%Location* %"$tmpC", %Node %9, %Node %10)
  store %Node %11, %Node* %"$tmpForRef"
  call void @ctor.434(%Node* %7, %Node* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @curLoc(%Location* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %_result.addr
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %3 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %3)
  %4 = getelementptr inbounds %Token, %Token* %"$tmpC", i32 0, i32 0
  call void @ctor.177(%Location* %1, %Location* %4)
  call void @dtor.228(%Token* %"$tmpC")
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.228(%Token* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"pre_*.425"(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r) #4 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token*, %Token** %_result.addr
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  call void @front.426(%Token* %1, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @front.426(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this) #4 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Token*, %Token** %_result.addr
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %3 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, i32 0, i32 1
  %4 = call %Token* @front.394(%"Vector[Token]"* %3)
  call void @ctor.190(%Token* %1, %Token* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseModuleName(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %qid = alloca %Node
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 2)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseQualifiedName(%Node* %qid, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 false)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 32)
  %6 = load %TokenType, %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  %8 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %8, %Node* %qid)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %9 = load %Node*, %Node** %_result.addr
  call void @ctor.436(%Node* %9)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %TokenType %t) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %Token
  %"$tmpC1" = alloca %Token
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = getelementptr inbounds %Token, %Token* %"$tmpC", i32 0, i32 1
  %4 = call i1 @"==.279"(%TokenType* %3, %TokenType* %t.addr)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 0
  call void @"post_++.427"(%Token* %"$tmpC1", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %8)
  call void @"=.254"(%Token* %6, %Token* %"$tmpC1")
  call void @dtor.228(%Token* %"$tmpC1")
  call void @dtor.228(%Token* %"$tmpC")
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  call void @dtor.228(%Token* %"$tmpC")
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @"post_++.427"(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r) #4 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %r.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %r, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  %res = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  call void @front.426(%Token* %res, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1)
  %2 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %r.addr
  call void @popFront.428(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = load %Token*, %Token** %_result.addr
  call void @ctor.190(%Token* %3, %Token* %res)
  call void @dtor.228(%Token* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.228(%Token* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @popFront.428(%"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this) #4 {
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %tmp.v = alloca i64
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %2 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %1, i32 0, i32 1
  store i64 0, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  call void @remove.398(%"Vector[Token]"* %2, i64 %3)
  br label %if_block

if_block:                                         ; preds = %code
  %4 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %5 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4, i32 0, i32 1
  %6 = call i1 @isEmpty.392(%"Vector[Token]"* %5)
  br i1 %6, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %7 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %8 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %7, i32 0, i32 1
  %9 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %10 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %9, i32 0, i32 0
  call void @"post_++.423"(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %10)
  call void @"+=.311"(%"Vector[Token]"* %8, %Token* %"$tmpC")
  call void @dtor.228(%Token* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  ret void

cond.true:                                        ; preds = %if_block
  %11 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %12 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %11, i32 0, i32 0
  %13 = call i1 @"pre_!!.421"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %12)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %13, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseQualifiedName(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %allowStar) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %allowStar.addr = alloca i1
  store i1 %allowStar, i1* %allowStar.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %base = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %lastId = alloca %String
  %tmp.v1 = alloca %TokenType
  %tmp.v2 = alloca %TokenType
  %"$tmpForRef3" = alloca %Node
  %"$tmpC4" = alloca %Location
  %"$tmpC5" = alloca %Location
  %"$tmpC6" = alloca %StringRef
  %tmp.v10 = alloca %TokenType
  %"$tmpForRef11" = alloca %Node
  %"$tmpC12" = alloca %Location
  %"$tmpC13" = alloca %Location
  %"$tmpC14" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 37)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %7)
  %8 = load %StringRef, %StringRef* %"$tmpC"
  %9 = call %Node @comp_parser_mkIdentifier(%Location* %loc, %StringRef %8)
  store %Node %9, %Node* %"$tmpForRef"
  call void @ctor.434(%Node* %base, %Node* %"$tmpForRef")
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = getelementptr inbounds %Token, %Token* %11, i32 0, i32 2
  call void @ctor.192(%String* %lastId, %String* %12)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 34)
  %14 = load %TokenType, %TokenType* %tmp.v1
  %15 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, %TokenType %14)
  br i1 %15, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block

while_step:                                       ; preds = %cond_destruct_end9
  br label %while_block

while_end:                                        ; preds = %cond_destruct_end, %while_block
  %16 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %16, %Node* %base)
  call void @dtor.229(%String* %lastId)
  ret void

if_block:                                         ; preds = %while_body
  %17 = load i1, i1* %allowStar.addr
  br i1 %17, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC5", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18)
  call void @span(%Location* %"$tmpC4", %Location* %loc, %Location* %"$tmpC5")
  %19 = load %Node, %Node* %base
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %21 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20, i32 0, i32 1
  %22 = getelementptr inbounds %Token, %Token* %21, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %22)
  %23 = load %StringRef, %StringRef* %"$tmpC6"
  %24 = call %Node @comp_parser_mkStarExpr(%Location* %"$tmpC4", %Node %19, %StringRef %23)
  store %Node %24, %Node* %"$tmpForRef3"
  call void @"=.435"(%Node* %base, %Node* %"$tmpForRef3")
  br i1 %17, label %cond_destruct_alt1, label %cond_destruct_alt2

if_end:                                           ; preds = %dumy_block, %cond.end
  br i1 %17, label %cond_destruct_alt17, label %cond_destruct_alt28

cond.true:                                        ; preds = %if_block
  %25 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v2, i32 38)
  %26 = load %TokenType, %TokenType* %tmp.v2
  %27 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %25, %TokenType %26)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %27, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

cond_destruct_alt1:                               ; preds = %if_then
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br label %while_end

dumy_block:                                       ; No predecessors!
  br label %if_end

cond_destruct_alt17:                              ; preds = %if_end
  br label %cond_destruct_end9

cond_destruct_alt28:                              ; preds = %if_end
  br label %cond_destruct_end9

cond_destruct_end9:                               ; preds = %cond_destruct_alt28, %cond_destruct_alt17
  %28 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v10, i32 37)
  %29 = load %TokenType, %TokenType* %tmp.v10
  %30 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %28, %TokenType %29)
  %31 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC13", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %31)
  call void @span(%Location* %"$tmpC12", %Location* %loc, %Location* %"$tmpC13")
  %32 = load %Node, %Node* %base
  %33 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %34 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %33, i32 0, i32 1
  %35 = getelementptr inbounds %Token, %Token* %34, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC14", %String* %35)
  %36 = load %StringRef, %StringRef* %"$tmpC14"
  %37 = call %Node @comp_parser_mkCompoundExpr(%Location* %"$tmpC12", %Node %32, %StringRef %36)
  store %Node %37, %Node* %"$tmpForRef11"
  call void @"=.435"(%Node* %base, %Node* %"$tmpForRef11")
  br label %while_step

dumy_block15:                                     ; No predecessors!
  call void @dtor.229(%String* %lastId)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %TokenType %t) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %"$tmpC5" = alloca %Token
  %tmp.StringRef6 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = load %TokenType, %TokenType* %t.addr
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 2
  %6 = load i1, i1* %5
  br i1 %6, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %9 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.92, i32 0, i32 0), i8** %8
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.92, i32 0, i32 25), i8** %9
  %10 = load %StringRef, %StringRef* %tmp.StringRef
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC5", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %12)
  %13 = getelementptr inbounds %Token, %Token* %"$tmpC5", i32 0, i32 1
  %14 = load %TokenType, %TokenType* %13
  %15 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef6, i32 0, i32 0
  %16 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef6, i32 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.93, i32 0, i32 0), i8** %15
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.93, i32 0, i32 12), i8** %16
  %17 = load %StringRef, %StringRef* %tmp.StringRef6
  %18 = load %TokenType, %TokenType* %t.addr
  call void @toString.430(%String* %"$tmpC", %StringRef %10, %TokenType %14, %StringRef %17, %TokenType %18)
  call void @reportError.429(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %String* %"$tmpC")
  call void @dtor.229(%String* %"$tmpC")
  call void @dtor.228(%Token* %"$tmpC5")
  ret i1 false

dumy_block4:                                      ; No predecessors!
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal void @reportError.429(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %String* %msg) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %msg.addr = alloca %String*
  store %String* %msg, %String** %msg.addr
  %"$tmpC" = alloca %Token
  %"$tmpC1" = alloca %Token
  %tmp.v = alloca %TokenType
  %"$tmpC2" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 3
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4)
  %5 = getelementptr inbounds %Token, %Token* %"$tmpC", i32 0, i32 0
  %6 = load %Location, %Location* %5
  %7 = load %String*, %String** %msg.addr
  call void @reportError(%ExternalErrorReporter* %2, %Location %6, %String* %7)
  call void @dtor.228(%Token* %"$tmpC")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC1", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %9)
  %10 = getelementptr inbounds %Token, %Token* %"$tmpC1", i32 0, i32 1
  call void @ctor.319(%TokenType* %tmp.v, i32 0)
  %11 = call i1 @"==.279"(%TokenType* %10, %TokenType* %tmp.v)
  %12 = xor i1 true, %11
  br i1 %12, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %14 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 1
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 0
  call void @"post_++.427"(%Token* %"$tmpC2", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %16)
  call void @"=.254"(%Token* %14, %Token* %"$tmpC2")
  call void @dtor.228(%Token* %"$tmpC2")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @dtor.228(%Token* %"$tmpC1")
  %17 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %18 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %17, i32 0, i32 2
  store i1 true, i1* %18
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString.430(%String* sret %_result, %StringRef %a1, %TokenType %a2, %StringRef %a3, %TokenType %a4) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca %TokenType
  store %TokenType %a2, %TokenType* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %a4.addr = alloca %TokenType
  store %TokenType %a4, %TokenType* %a4.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor.295(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<.431"(%StringOutputStream* %1, %TokenType* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = call %StringOutputStream* @"<<.431"(%StringOutputStream* %3, %TokenType* %a4.addr)
  %5 = load %String*, %String** %_result.addr
  %6 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %s, i32 0, i32 0
  call void @ctor.192(%String* %5, %String* %6)
  call void @dtor.297(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.297(%StringOutputStream* %s)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<.431"(%StringOutputStream* %s, %TokenType* %x) #4 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca %TokenType*
  store %TokenType* %x, %TokenType** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %TokenType*, %TokenType** %x.addr
  %2 = load %TokenType, %TokenType* %1
  %3 = load %StringOutputStream*, %StringOutputStream** %s.addr
  call void @">>"(%TokenType %2, %StringOutputStream* %3)
  %4 = load %StringOutputStream*, %StringOutputStream** %s.addr
  ret %StringOutputStream* %4
}

; Function Attrs: inlinehint nounwind
define internal void @">>"(%TokenType %t, %StringOutputStream* %os) #4 {
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %os.addr = alloca %StringOutputStream*
  store %StringOutputStream* %os, %StringOutputStream** %os.addr
  %"$tmpC" = alloca %String
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %os.addr
  %2 = load %TokenType, %TokenType* %t.addr
  call void @_asString(%String* %"$tmpC", %TokenType %2)
  %3 = call %StringOutputStream* @"<<.432"(%StringOutputStream* %1, %String* %"$tmpC")
  call void @dtor.229(%String* %"$tmpC")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %StringOutputStream* @"<<.432"(%StringOutputStream* %s, %String* %x) #4 {
  %s.addr = alloca %StringOutputStream*
  store %StringOutputStream* %s, %StringOutputStream** %s.addr
  %x.addr = alloca %String*
  store %String* %x, %String** %x.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %x.addr
  %2 = load %StringOutputStream*, %StringOutputStream** %s.addr
  call void @">>.433"(%String* %1, %StringOutputStream* %2)
  %3 = load %StringOutputStream*, %StringOutputStream** %s.addr
  ret %StringOutputStream* %3
}

; Function Attrs: inlinehint nounwind
define internal void @">>.433"(%String* %this, %StringOutputStream* %os) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %os.addr = alloca %StringOutputStream*
  store %StringOutputStream* %os, %StringOutputStream** %os.addr
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %os.addr
  %2 = load %String*, %String** %this.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %2)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %1, %StringRef* %"$tmpC")
  ret void
}

; Function Attrs: noinline nounwind
define void @_asString(%String* sret %_result, %TokenType %t) #5 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %tmp.v = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %tmp.v5 = alloca %TokenType
  %"$tmpForRef6" = alloca %StringRef
  %tmp.StringRef7 = alloca %StringRef
  %tmp.v13 = alloca %TokenType
  %"$tmpForRef14" = alloca %StringRef
  %tmp.StringRef15 = alloca %StringRef
  %tmp.v21 = alloca %TokenType
  %"$tmpForRef22" = alloca %StringRef
  %tmp.StringRef23 = alloca %StringRef
  %tmp.v29 = alloca %TokenType
  %"$tmpForRef30" = alloca %StringRef
  %tmp.StringRef31 = alloca %StringRef
  %tmp.v37 = alloca %TokenType
  %"$tmpForRef38" = alloca %StringRef
  %tmp.StringRef39 = alloca %StringRef
  %tmp.v45 = alloca %TokenType
  %"$tmpForRef46" = alloca %StringRef
  %tmp.StringRef47 = alloca %StringRef
  %tmp.v53 = alloca %TokenType
  %"$tmpForRef54" = alloca %StringRef
  %tmp.StringRef55 = alloca %StringRef
  %tmp.v61 = alloca %TokenType
  %"$tmpForRef62" = alloca %StringRef
  %tmp.StringRef63 = alloca %StringRef
  %tmp.v69 = alloca %TokenType
  %"$tmpForRef70" = alloca %StringRef
  %tmp.StringRef71 = alloca %StringRef
  %tmp.v77 = alloca %TokenType
  %"$tmpForRef78" = alloca %StringRef
  %tmp.StringRef79 = alloca %StringRef
  %tmp.v85 = alloca %TokenType
  %"$tmpForRef86" = alloca %StringRef
  %tmp.StringRef87 = alloca %StringRef
  %tmp.v93 = alloca %TokenType
  %"$tmpForRef94" = alloca %StringRef
  %tmp.StringRef95 = alloca %StringRef
  %tmp.v101 = alloca %TokenType
  %"$tmpForRef102" = alloca %StringRef
  %tmp.StringRef103 = alloca %StringRef
  %tmp.v109 = alloca %TokenType
  %"$tmpForRef110" = alloca %StringRef
  %tmp.StringRef111 = alloca %StringRef
  %tmp.v117 = alloca %TokenType
  %"$tmpForRef118" = alloca %StringRef
  %tmp.StringRef119 = alloca %StringRef
  %tmp.v125 = alloca %TokenType
  %"$tmpForRef126" = alloca %StringRef
  %tmp.StringRef127 = alloca %StringRef
  %tmp.v133 = alloca %TokenType
  %"$tmpForRef134" = alloca %StringRef
  %tmp.StringRef135 = alloca %StringRef
  %tmp.v141 = alloca %TokenType
  %"$tmpForRef142" = alloca %StringRef
  %tmp.StringRef143 = alloca %StringRef
  %tmp.v149 = alloca %TokenType
  %"$tmpForRef150" = alloca %StringRef
  %tmp.StringRef151 = alloca %StringRef
  %tmp.v157 = alloca %TokenType
  %"$tmpForRef158" = alloca %StringRef
  %tmp.StringRef159 = alloca %StringRef
  %tmp.v165 = alloca %TokenType
  %"$tmpForRef166" = alloca %StringRef
  %tmp.StringRef167 = alloca %StringRef
  %tmp.v173 = alloca %TokenType
  %"$tmpForRef174" = alloca %StringRef
  %tmp.StringRef175 = alloca %StringRef
  %tmp.v181 = alloca %TokenType
  %"$tmpForRef182" = alloca %StringRef
  %tmp.StringRef183 = alloca %StringRef
  %tmp.v189 = alloca %TokenType
  %"$tmpForRef190" = alloca %StringRef
  %tmp.StringRef191 = alloca %StringRef
  %tmp.v197 = alloca %TokenType
  %"$tmpForRef198" = alloca %StringRef
  %tmp.StringRef199 = alloca %StringRef
  %tmp.v205 = alloca %TokenType
  %"$tmpForRef206" = alloca %StringRef
  %tmp.StringRef207 = alloca %StringRef
  %tmp.v213 = alloca %TokenType
  %"$tmpForRef214" = alloca %StringRef
  %tmp.StringRef215 = alloca %StringRef
  %tmp.v221 = alloca %TokenType
  %"$tmpForRef222" = alloca %StringRef
  %tmp.StringRef223 = alloca %StringRef
  %tmp.v229 = alloca %TokenType
  %"$tmpForRef230" = alloca %StringRef
  %tmp.StringRef231 = alloca %StringRef
  %tmp.v237 = alloca %TokenType
  %"$tmpForRef238" = alloca %StringRef
  %tmp.StringRef239 = alloca %StringRef
  %tmp.v245 = alloca %TokenType
  %"$tmpForRef246" = alloca %StringRef
  %tmp.StringRef247 = alloca %StringRef
  %tmp.v253 = alloca %TokenType
  %"$tmpForRef254" = alloca %StringRef
  %tmp.StringRef255 = alloca %StringRef
  %tmp.v261 = alloca %TokenType
  %"$tmpForRef262" = alloca %StringRef
  %tmp.StringRef263 = alloca %StringRef
  %tmp.v269 = alloca %TokenType
  %"$tmpForRef270" = alloca %StringRef
  %tmp.StringRef271 = alloca %StringRef
  %tmp.v277 = alloca %TokenType
  %"$tmpForRef278" = alloca %StringRef
  %tmp.StringRef279 = alloca %StringRef
  %tmp.v285 = alloca %TokenType
  %"$tmpForRef286" = alloca %StringRef
  %tmp.StringRef287 = alloca %StringRef
  %tmp.v293 = alloca %TokenType
  %"$tmpForRef294" = alloca %StringRef
  %tmp.StringRef295 = alloca %StringRef
  %tmp.v301 = alloca %TokenType
  %"$tmpForRef302" = alloca %StringRef
  %tmp.StringRef303 = alloca %StringRef
  %tmp.v309 = alloca %TokenType
  %"$tmpForRef310" = alloca %StringRef
  %tmp.StringRef311 = alloca %StringRef
  %tmp.v317 = alloca %TokenType
  %"$tmpForRef318" = alloca %StringRef
  %tmp.StringRef319 = alloca %StringRef
  %tmp.v325 = alloca %TokenType
  %"$tmpForRef326" = alloca %StringRef
  %tmp.StringRef327 = alloca %StringRef
  %tmp.v333 = alloca %TokenType
  %"$tmpForRef334" = alloca %StringRef
  %tmp.StringRef335 = alloca %StringRef
  %tmp.v341 = alloca %TokenType
  %"$tmpForRef342" = alloca %StringRef
  %tmp.StringRef343 = alloca %StringRef
  %tmp.v349 = alloca %TokenType
  %"$tmpForRef350" = alloca %StringRef
  %tmp.StringRef351 = alloca %StringRef
  %tmp.v357 = alloca %TokenType
  %"$tmpForRef358" = alloca %StringRef
  %tmp.StringRef359 = alloca %StringRef
  %tmp.v364 = alloca %TokenType
  %"$tmpForRef365" = alloca %StringRef
  %tmp.StringRef366 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  call void @ctor.319(%TokenType* %tmp.v, i32 0)
  %1 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v)
  br i1 %1, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %2 = load %String*, %String** %_result.addr
  %3 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %4 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.45, i32 0, i32 0), i8** %3
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.45, i32 0, i32 11), i8** %4
  %5 = load %StringRef, %StringRef* %tmp.StringRef
  store %StringRef %5, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %2, %StringRef* %"$tmpForRef")
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %if_end4, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  call void @ctor.319(%TokenType* %tmp.v5, i32 1)
  %6 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v5)
  br i1 %6, label %if_then2, label %if_else3

if_then2:                                         ; preds = %if_block1
  %7 = load %String*, %String** %_result.addr
  %8 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef7, i32 0, i32 0
  %9 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef7, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.46, i32 0, i32 0), i8** %8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.46, i32 0, i32 8), i8** %9
  %10 = load %StringRef, %StringRef* %tmp.StringRef7
  store %StringRef %10, %StringRef* %"$tmpForRef6"
  call void @ctor.370(%String* %7, %StringRef* %"$tmpForRef6")
  ret void

if_else3:                                         ; preds = %if_block1
  br label %if_block9

if_end4:                                          ; preds = %if_end12, %dumy_block8
  br label %if_end

dumy_block8:                                      ; No predecessors!
  br label %if_end4

if_block9:                                        ; preds = %if_else3
  call void @ctor.319(%TokenType* %tmp.v13, i32 2)
  %11 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v13)
  br i1 %11, label %if_then10, label %if_else11

if_then10:                                        ; preds = %if_block9
  %12 = load %String*, %String** %_result.addr
  %13 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef15, i32 0, i32 0
  %14 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef15, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.47, i32 0, i32 0), i8** %13
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.47, i32 0, i32 8), i8** %14
  %15 = load %StringRef, %StringRef* %tmp.StringRef15
  store %StringRef %15, %StringRef* %"$tmpForRef14"
  call void @ctor.370(%String* %12, %StringRef* %"$tmpForRef14")
  ret void

if_else11:                                        ; preds = %if_block9
  br label %if_block17

if_end12:                                         ; preds = %if_end20, %dumy_block16
  br label %if_end4

dumy_block16:                                     ; No predecessors!
  br label %if_end12

if_block17:                                       ; preds = %if_else11
  call void @ctor.319(%TokenType* %tmp.v21, i32 3)
  %16 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v21)
  br i1 %16, label %if_then18, label %if_else19

if_then18:                                        ; preds = %if_block17
  %17 = load %String*, %String** %_result.addr
  %18 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef23, i32 0, i32 0
  %19 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef23, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.48, i32 0, i32 0), i8** %18
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.48, i32 0, i32 8), i8** %19
  %20 = load %StringRef, %StringRef* %tmp.StringRef23
  store %StringRef %20, %StringRef* %"$tmpForRef22"
  call void @ctor.370(%String* %17, %StringRef* %"$tmpForRef22")
  ret void

if_else19:                                        ; preds = %if_block17
  br label %if_block25

if_end20:                                         ; preds = %if_end28, %dumy_block24
  br label %if_end12

dumy_block24:                                     ; No predecessors!
  br label %if_end20

if_block25:                                       ; preds = %if_else19
  call void @ctor.319(%TokenType* %tmp.v29, i32 4)
  %21 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v29)
  br i1 %21, label %if_then26, label %if_else27

if_then26:                                        ; preds = %if_block25
  %22 = load %String*, %String** %_result.addr
  %23 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef31, i32 0, i32 0
  %24 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef31, i32 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.49, i32 0, i32 0), i8** %23
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.49, i32 0, i32 9), i8** %24
  %25 = load %StringRef, %StringRef* %tmp.StringRef31
  store %StringRef %25, %StringRef* %"$tmpForRef30"
  call void @ctor.370(%String* %22, %StringRef* %"$tmpForRef30")
  ret void

if_else27:                                        ; preds = %if_block25
  br label %if_block33

if_end28:                                         ; preds = %if_end36, %dumy_block32
  br label %if_end20

dumy_block32:                                     ; No predecessors!
  br label %if_end28

if_block33:                                       ; preds = %if_else27
  call void @ctor.319(%TokenType* %tmp.v37, i32 5)
  %26 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v37)
  br i1 %26, label %if_then34, label %if_else35

if_then34:                                        ; preds = %if_block33
  %27 = load %String*, %String** %_result.addr
  %28 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef39, i32 0, i32 0
  %29 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef39, i32 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.50, i32 0, i32 0), i8** %28
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.50, i32 0, i32 10), i8** %29
  %30 = load %StringRef, %StringRef* %tmp.StringRef39
  store %StringRef %30, %StringRef* %"$tmpForRef38"
  call void @ctor.370(%String* %27, %StringRef* %"$tmpForRef38")
  ret void

if_else35:                                        ; preds = %if_block33
  br label %if_block41

if_end36:                                         ; preds = %if_end44, %dumy_block40
  br label %if_end28

dumy_block40:                                     ; No predecessors!
  br label %if_end36

if_block41:                                       ; preds = %if_else35
  call void @ctor.319(%TokenType* %tmp.v45, i32 6)
  %31 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v45)
  br i1 %31, label %if_then42, label %if_else43

if_then42:                                        ; preds = %if_block41
  %32 = load %String*, %String** %_result.addr
  %33 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef47, i32 0, i32 0
  %34 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef47, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.51, i32 0, i32 0), i8** %33
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.51, i32 0, i32 5), i8** %34
  %35 = load %StringRef, %StringRef* %tmp.StringRef47
  store %StringRef %35, %StringRef* %"$tmpForRef46"
  call void @ctor.370(%String* %32, %StringRef* %"$tmpForRef46")
  ret void

if_else43:                                        ; preds = %if_block41
  br label %if_block49

if_end44:                                         ; preds = %if_end52, %dumy_block48
  br label %if_end36

dumy_block48:                                     ; No predecessors!
  br label %if_end44

if_block49:                                       ; preds = %if_else43
  call void @ctor.319(%TokenType* %tmp.v53, i32 8)
  %36 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v53)
  br i1 %36, label %if_then50, label %if_else51

if_then50:                                        ; preds = %if_block49
  %37 = load %String*, %String** %_result.addr
  %38 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef55, i32 0, i32 0
  %39 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef55, i32 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.52, i32 0, i32 0), i8** %38
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.52, i32 0, i32 9), i8** %39
  %40 = load %StringRef, %StringRef* %tmp.StringRef55
  store %StringRef %40, %StringRef* %"$tmpForRef54"
  call void @ctor.370(%String* %37, %StringRef* %"$tmpForRef54")
  ret void

if_else51:                                        ; preds = %if_block49
  br label %if_block57

if_end52:                                         ; preds = %if_end60, %dumy_block56
  br label %if_end44

dumy_block56:                                     ; No predecessors!
  br label %if_end52

if_block57:                                       ; preds = %if_else51
  call void @ctor.319(%TokenType* %tmp.v61, i32 9)
  %41 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v61)
  br i1 %41, label %if_then58, label %if_else59

if_then58:                                        ; preds = %if_block57
  %42 = load %String*, %String** %_result.addr
  %43 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef63, i32 0, i32 0
  %44 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef63, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.53, i32 0, i32 0), i8** %43
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.53, i32 0, i32 7), i8** %44
  %45 = load %StringRef, %StringRef* %tmp.StringRef63
  store %StringRef %45, %StringRef* %"$tmpForRef62"
  call void @ctor.370(%String* %42, %StringRef* %"$tmpForRef62")
  ret void

if_else59:                                        ; preds = %if_block57
  br label %if_block65

if_end60:                                         ; preds = %if_end68, %dumy_block64
  br label %if_end52

dumy_block64:                                     ; No predecessors!
  br label %if_end60

if_block65:                                       ; preds = %if_else59
  call void @ctor.319(%TokenType* %tmp.v69, i32 7)
  %46 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v69)
  br i1 %46, label %if_then66, label %if_else67

if_then66:                                        ; preds = %if_block65
  %47 = load %String*, %String** %_result.addr
  %48 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef71, i32 0, i32 0
  %49 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef71, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.54, i32 0, i32 0), i8** %48
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.54, i32 0, i32 5), i8** %49
  %50 = load %StringRef, %StringRef* %tmp.StringRef71
  store %StringRef %50, %StringRef* %"$tmpForRef70"
  call void @ctor.370(%String* %47, %StringRef* %"$tmpForRef70")
  ret void

if_else67:                                        ; preds = %if_block65
  br label %if_block73

if_end68:                                         ; preds = %if_end76, %dumy_block72
  br label %if_end60

dumy_block72:                                     ; No predecessors!
  br label %if_end68

if_block73:                                       ; preds = %if_else67
  call void @ctor.319(%TokenType* %tmp.v77, i32 10)
  %51 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v77)
  br i1 %51, label %if_then74, label %if_else75

if_then74:                                        ; preds = %if_block73
  %52 = load %String*, %String** %_result.addr
  %53 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef79, i32 0, i32 0
  %54 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef79, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.55, i32 0, i32 0), i8** %53
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.55, i32 0, i32 5), i8** %54
  %55 = load %StringRef, %StringRef* %tmp.StringRef79
  store %StringRef %55, %StringRef* %"$tmpForRef78"
  call void @ctor.370(%String* %52, %StringRef* %"$tmpForRef78")
  ret void

if_else75:                                        ; preds = %if_block73
  br label %if_block81

if_end76:                                         ; preds = %if_end84, %dumy_block80
  br label %if_end68

dumy_block80:                                     ; No predecessors!
  br label %if_end76

if_block81:                                       ; preds = %if_else75
  call void @ctor.319(%TokenType* %tmp.v85, i32 11)
  %56 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v85)
  br i1 %56, label %if_then82, label %if_else83

if_then82:                                        ; preds = %if_block81
  %57 = load %String*, %String** %_result.addr
  %58 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef87, i32 0, i32 0
  %59 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef87, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.56, i32 0, i32 0), i8** %58
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.56, i32 0, i32 7), i8** %59
  %60 = load %StringRef, %StringRef* %tmp.StringRef87
  store %StringRef %60, %StringRef* %"$tmpForRef86"
  call void @ctor.370(%String* %57, %StringRef* %"$tmpForRef86")
  ret void

if_else83:                                        ; preds = %if_block81
  br label %if_block89

if_end84:                                         ; preds = %if_end92, %dumy_block88
  br label %if_end76

dumy_block88:                                     ; No predecessors!
  br label %if_end84

if_block89:                                       ; preds = %if_else83
  call void @ctor.319(%TokenType* %tmp.v93, i32 12)
  %61 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v93)
  br i1 %61, label %if_then90, label %if_else91

if_then90:                                        ; preds = %if_block89
  %62 = load %String*, %String** %_result.addr
  %63 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef95, i32 0, i32 0
  %64 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef95, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.57, i32 0, i32 0), i8** %63
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.57, i32 0, i32 7), i8** %64
  %65 = load %StringRef, %StringRef* %tmp.StringRef95
  store %StringRef %65, %StringRef* %"$tmpForRef94"
  call void @ctor.370(%String* %62, %StringRef* %"$tmpForRef94")
  ret void

if_else91:                                        ; preds = %if_block89
  br label %if_block97

if_end92:                                         ; preds = %if_end100, %dumy_block96
  br label %if_end84

dumy_block96:                                     ; No predecessors!
  br label %if_end92

if_block97:                                       ; preds = %if_else91
  call void @ctor.319(%TokenType* %tmp.v101, i32 13)
  %66 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v101)
  br i1 %66, label %if_then98, label %if_else99

if_then98:                                        ; preds = %if_block97
  %67 = load %String*, %String** %_result.addr
  %68 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef103, i32 0, i32 0
  %69 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef103, i32 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.58, i32 0, i32 0), i8** %68
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.58, i32 0, i32 10), i8** %69
  %70 = load %StringRef, %StringRef* %tmp.StringRef103
  store %StringRef %70, %StringRef* %"$tmpForRef102"
  call void @ctor.370(%String* %67, %StringRef* %"$tmpForRef102")
  ret void

if_else99:                                        ; preds = %if_block97
  br label %if_block105

if_end100:                                        ; preds = %if_end108, %dumy_block104
  br label %if_end92

dumy_block104:                                    ; No predecessors!
  br label %if_end100

if_block105:                                      ; preds = %if_else99
  call void @ctor.319(%TokenType* %tmp.v109, i32 14)
  %71 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v109)
  br i1 %71, label %if_then106, label %if_else107

if_then106:                                       ; preds = %if_block105
  %72 = load %String*, %String** %_result.addr
  %73 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef111, i32 0, i32 0
  %74 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef111, i32 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.59, i32 0, i32 0), i8** %73
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.59, i32 0, i32 9), i8** %74
  %75 = load %StringRef, %StringRef* %tmp.StringRef111
  store %StringRef %75, %StringRef* %"$tmpForRef110"
  call void @ctor.370(%String* %72, %StringRef* %"$tmpForRef110")
  ret void

if_else107:                                       ; preds = %if_block105
  br label %if_block113

if_end108:                                        ; preds = %if_end116, %dumy_block112
  br label %if_end100

dumy_block112:                                    ; No predecessors!
  br label %if_end108

if_block113:                                      ; preds = %if_else107
  call void @ctor.319(%TokenType* %tmp.v117, i32 15)
  %76 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v117)
  br i1 %76, label %if_then114, label %if_else115

if_then114:                                       ; preds = %if_block113
  %77 = load %String*, %String** %_result.addr
  %78 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef119, i32 0, i32 0
  %79 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef119, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.60, i32 0, i32 0), i8** %78
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.60, i32 0, i32 5), i8** %79
  %80 = load %StringRef, %StringRef* %tmp.StringRef119
  store %StringRef %80, %StringRef* %"$tmpForRef118"
  call void @ctor.370(%String* %77, %StringRef* %"$tmpForRef118")
  ret void

if_else115:                                       ; preds = %if_block113
  br label %if_block121

if_end116:                                        ; preds = %if_end124, %dumy_block120
  br label %if_end108

dumy_block120:                                    ; No predecessors!
  br label %if_end116

if_block121:                                      ; preds = %if_else115
  call void @ctor.319(%TokenType* %tmp.v125, i32 16)
  %81 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v125)
  br i1 %81, label %if_then122, label %if_else123

if_then122:                                       ; preds = %if_block121
  %82 = load %String*, %String** %_result.addr
  %83 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef127, i32 0, i32 0
  %84 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef127, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.61, i32 0, i32 0), i8** %83
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.61, i32 0, i32 4), i8** %84
  %85 = load %StringRef, %StringRef* %tmp.StringRef127
  store %StringRef %85, %StringRef* %"$tmpForRef126"
  call void @ctor.370(%String* %82, %StringRef* %"$tmpForRef126")
  ret void

if_else123:                                       ; preds = %if_block121
  br label %if_block129

if_end124:                                        ; preds = %if_end132, %dumy_block128
  br label %if_end116

dumy_block128:                                    ; No predecessors!
  br label %if_end124

if_block129:                                      ; preds = %if_else123
  call void @ctor.319(%TokenType* %tmp.v133, i32 17)
  %86 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v133)
  br i1 %86, label %if_then130, label %if_else131

if_then130:                                       ; preds = %if_block129
  %87 = load %String*, %String** %_result.addr
  %88 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef135, i32 0, i32 0
  %89 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef135, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.62, i32 0, i32 0), i8** %88
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.62, i32 0, i32 8), i8** %89
  %90 = load %StringRef, %StringRef* %tmp.StringRef135
  store %StringRef %90, %StringRef* %"$tmpForRef134"
  call void @ctor.370(%String* %87, %StringRef* %"$tmpForRef134")
  ret void

if_else131:                                       ; preds = %if_block129
  br label %if_block137

if_end132:                                        ; preds = %if_end140, %dumy_block136
  br label %if_end124

dumy_block136:                                    ; No predecessors!
  br label %if_end132

if_block137:                                      ; preds = %if_else131
  call void @ctor.319(%TokenType* %tmp.v141, i32 18)
  %91 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v141)
  br i1 %91, label %if_then138, label %if_else139

if_then138:                                       ; preds = %if_block137
  %92 = load %String*, %String** %_result.addr
  %93 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef143, i32 0, i32 0
  %94 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef143, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.63, i32 0, i32 0), i8** %93
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.63, i32 0, i32 7), i8** %94
  %95 = load %StringRef, %StringRef* %tmp.StringRef143
  store %StringRef %95, %StringRef* %"$tmpForRef142"
  call void @ctor.370(%String* %92, %StringRef* %"$tmpForRef142")
  ret void

if_else139:                                       ; preds = %if_block137
  br label %if_block145

if_end140:                                        ; preds = %if_end148, %dumy_block144
  br label %if_end132

dumy_block144:                                    ; No predecessors!
  br label %if_end140

if_block145:                                      ; preds = %if_else139
  call void @ctor.319(%TokenType* %tmp.v149, i32 19)
  %96 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v149)
  br i1 %96, label %if_then146, label %if_else147

if_then146:                                       ; preds = %if_block145
  %97 = load %String*, %String** %_result.addr
  %98 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef151, i32 0, i32 0
  %99 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef151, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.64, i32 0, i32 0), i8** %98
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.64, i32 0, i32 5), i8** %99
  %100 = load %StringRef, %StringRef* %tmp.StringRef151
  store %StringRef %100, %StringRef* %"$tmpForRef150"
  call void @ctor.370(%String* %97, %StringRef* %"$tmpForRef150")
  ret void

if_else147:                                       ; preds = %if_block145
  br label %if_block153

if_end148:                                        ; preds = %if_end156, %dumy_block152
  br label %if_end140

dumy_block152:                                    ; No predecessors!
  br label %if_end148

if_block153:                                      ; preds = %if_else147
  call void @ctor.319(%TokenType* %tmp.v157, i32 20)
  %101 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v157)
  br i1 %101, label %if_then154, label %if_else155

if_then154:                                       ; preds = %if_block153
  %102 = load %String*, %String** %_result.addr
  %103 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef159, i32 0, i32 0
  %104 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef159, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.65, i32 0, i32 0), i8** %103
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.65, i32 0, i32 7), i8** %104
  %105 = load %StringRef, %StringRef* %tmp.StringRef159
  store %StringRef %105, %StringRef* %"$tmpForRef158"
  call void @ctor.370(%String* %102, %StringRef* %"$tmpForRef158")
  ret void

if_else155:                                       ; preds = %if_block153
  br label %if_block161

if_end156:                                        ; preds = %if_end164, %dumy_block160
  br label %if_end148

dumy_block160:                                    ; No predecessors!
  br label %if_end156

if_block161:                                      ; preds = %if_else155
  call void @ctor.319(%TokenType* %tmp.v165, i32 21)
  %106 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v165)
  br i1 %106, label %if_then162, label %if_else163

if_then162:                                       ; preds = %if_block161
  %107 = load %String*, %String** %_result.addr
  %108 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef167, i32 0, i32 0
  %109 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef167, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.66, i32 0, i32 0), i8** %108
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.66, i32 0, i32 7), i8** %109
  %110 = load %StringRef, %StringRef* %tmp.StringRef167
  store %StringRef %110, %StringRef* %"$tmpForRef166"
  call void @ctor.370(%String* %107, %StringRef* %"$tmpForRef166")
  ret void

if_else163:                                       ; preds = %if_block161
  br label %if_block169

if_end164:                                        ; preds = %if_end172, %dumy_block168
  br label %if_end156

dumy_block168:                                    ; No predecessors!
  br label %if_end164

if_block169:                                      ; preds = %if_else163
  call void @ctor.319(%TokenType* %tmp.v173, i32 22)
  %111 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v173)
  br i1 %111, label %if_then170, label %if_else171

if_then170:                                       ; preds = %if_block169
  %112 = load %String*, %String** %_result.addr
  %113 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef175, i32 0, i32 0
  %114 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef175, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.67, i32 0, i32 0), i8** %113
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.67, i32 0, i32 6), i8** %114
  %115 = load %StringRef, %StringRef* %tmp.StringRef175
  store %StringRef %115, %StringRef* %"$tmpForRef174"
  call void @ctor.370(%String* %112, %StringRef* %"$tmpForRef174")
  ret void

if_else171:                                       ; preds = %if_block169
  br label %if_block177

if_end172:                                        ; preds = %if_end180, %dumy_block176
  br label %if_end164

dumy_block176:                                    ; No predecessors!
  br label %if_end172

if_block177:                                      ; preds = %if_else171
  call void @ctor.319(%TokenType* %tmp.v181, i32 23)
  %116 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v181)
  br i1 %116, label %if_then178, label %if_else179

if_then178:                                       ; preds = %if_block177
  %117 = load %String*, %String** %_result.addr
  %118 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef183, i32 0, i32 0
  %119 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef183, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.68, i32 0, i32 0), i8** %118
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.68, i32 0, i32 6), i8** %119
  %120 = load %StringRef, %StringRef* %tmp.StringRef183
  store %StringRef %120, %StringRef* %"$tmpForRef182"
  call void @ctor.370(%String* %117, %StringRef* %"$tmpForRef182")
  ret void

if_else179:                                       ; preds = %if_block177
  br label %if_block185

if_end180:                                        ; preds = %if_end188, %dumy_block184
  br label %if_end172

dumy_block184:                                    ; No predecessors!
  br label %if_end180

if_block185:                                      ; preds = %if_else179
  call void @ctor.319(%TokenType* %tmp.v189, i32 24)
  %121 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v189)
  br i1 %121, label %if_then186, label %if_else187

if_then186:                                       ; preds = %if_block185
  %122 = load %String*, %String** %_result.addr
  %123 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef191, i32 0, i32 0
  %124 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef191, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.69, i32 0, i32 0), i8** %123
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.69, i32 0, i32 6), i8** %124
  %125 = load %StringRef, %StringRef* %tmp.StringRef191
  store %StringRef %125, %StringRef* %"$tmpForRef190"
  call void @ctor.370(%String* %122, %StringRef* %"$tmpForRef190")
  ret void

if_else187:                                       ; preds = %if_block185
  br label %if_block193

if_end188:                                        ; preds = %if_end196, %dumy_block192
  br label %if_end180

dumy_block192:                                    ; No predecessors!
  br label %if_end188

if_block193:                                      ; preds = %if_else187
  call void @ctor.319(%TokenType* %tmp.v197, i32 25)
  %126 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v197)
  br i1 %126, label %if_then194, label %if_else195

if_then194:                                       ; preds = %if_block193
  %127 = load %String*, %String** %_result.addr
  %128 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef199, i32 0, i32 0
  %129 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef199, i32 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.70, i32 0, i32 0), i8** %128
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.70, i32 0, i32 15), i8** %129
  %130 = load %StringRef, %StringRef* %tmp.StringRef199
  store %StringRef %130, %StringRef* %"$tmpForRef198"
  call void @ctor.370(%String* %127, %StringRef* %"$tmpForRef198")
  ret void

if_else195:                                       ; preds = %if_block193
  br label %if_block201

if_end196:                                        ; preds = %if_end204, %dumy_block200
  br label %if_end188

dumy_block200:                                    ; No predecessors!
  br label %if_end196

if_block201:                                      ; preds = %if_else195
  call void @ctor.319(%TokenType* %tmp.v205, i32 26)
  %131 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v205)
  br i1 %131, label %if_then202, label %if_else203

if_then202:                                       ; preds = %if_block201
  %132 = load %String*, %String** %_result.addr
  %133 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef207, i32 0, i32 0
  %134 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef207, i32 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.71, i32 0, i32 0), i8** %133
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.71, i32 0, i32 15), i8** %134
  %135 = load %StringRef, %StringRef* %tmp.StringRef207
  store %StringRef %135, %StringRef* %"$tmpForRef206"
  call void @ctor.370(%String* %132, %StringRef* %"$tmpForRef206")
  ret void

if_else203:                                       ; preds = %if_block201
  br label %if_block209

if_end204:                                        ; preds = %if_end212, %dumy_block208
  br label %if_end196

dumy_block208:                                    ; No predecessors!
  br label %if_end204

if_block209:                                      ; preds = %if_else203
  call void @ctor.319(%TokenType* %tmp.v213, i32 27)
  %136 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v213)
  br i1 %136, label %if_then210, label %if_else211

if_then210:                                       ; preds = %if_block209
  %137 = load %String*, %String** %_result.addr
  %138 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef215, i32 0, i32 0
  %139 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef215, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.72, i32 0, i32 0), i8** %138
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.72, i32 0, i32 3), i8** %139
  %140 = load %StringRef, %StringRef* %tmp.StringRef215
  store %StringRef %140, %StringRef* %"$tmpForRef214"
  call void @ctor.370(%String* %137, %StringRef* %"$tmpForRef214")
  ret void

if_else211:                                       ; preds = %if_block209
  br label %if_block217

if_end212:                                        ; preds = %if_end220, %dumy_block216
  br label %if_end204

dumy_block216:                                    ; No predecessors!
  br label %if_end212

if_block217:                                      ; preds = %if_else211
  call void @ctor.319(%TokenType* %tmp.v221, i32 28)
  %141 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v221)
  br i1 %141, label %if_then218, label %if_else219

if_then218:                                       ; preds = %if_block217
  %142 = load %String*, %String** %_result.addr
  %143 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef223, i32 0, i32 0
  %144 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef223, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.73, i32 0, i32 0), i8** %143
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.73, i32 0, i32 3), i8** %144
  %145 = load %StringRef, %StringRef* %tmp.StringRef223
  store %StringRef %145, %StringRef* %"$tmpForRef222"
  call void @ctor.370(%String* %142, %StringRef* %"$tmpForRef222")
  ret void

if_else219:                                       ; preds = %if_block217
  br label %if_block225

if_end220:                                        ; preds = %if_end228, %dumy_block224
  br label %if_end212

dumy_block224:                                    ; No predecessors!
  br label %if_end220

if_block225:                                      ; preds = %if_else219
  call void @ctor.319(%TokenType* %tmp.v229, i32 29)
  %146 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v229)
  br i1 %146, label %if_then226, label %if_else227

if_then226:                                       ; preds = %if_block225
  %147 = load %String*, %String** %_result.addr
  %148 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef231, i32 0, i32 0
  %149 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef231, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.74, i32 0, i32 0), i8** %148
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.74, i32 0, i32 3), i8** %149
  %150 = load %StringRef, %StringRef* %tmp.StringRef231
  store %StringRef %150, %StringRef* %"$tmpForRef230"
  call void @ctor.370(%String* %147, %StringRef* %"$tmpForRef230")
  ret void

if_else227:                                       ; preds = %if_block225
  br label %if_block233

if_end228:                                        ; preds = %if_end236, %dumy_block232
  br label %if_end220

dumy_block232:                                    ; No predecessors!
  br label %if_end228

if_block233:                                      ; preds = %if_else227
  call void @ctor.319(%TokenType* %tmp.v237, i32 30)
  %151 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v237)
  br i1 %151, label %if_then234, label %if_else235

if_then234:                                       ; preds = %if_block233
  %152 = load %String*, %String** %_result.addr
  %153 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef239, i32 0, i32 0
  %154 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef239, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.75, i32 0, i32 0), i8** %153
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.75, i32 0, i32 3), i8** %154
  %155 = load %StringRef, %StringRef* %tmp.StringRef239
  store %StringRef %155, %StringRef* %"$tmpForRef238"
  call void @ctor.370(%String* %152, %StringRef* %"$tmpForRef238")
  ret void

if_else235:                                       ; preds = %if_block233
  br label %if_block241

if_end236:                                        ; preds = %if_end244, %dumy_block240
  br label %if_end228

dumy_block240:                                    ; No predecessors!
  br label %if_end236

if_block241:                                      ; preds = %if_else235
  call void @ctor.319(%TokenType* %tmp.v245, i32 31)
  %156 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v245)
  br i1 %156, label %if_then242, label %if_else243

if_then242:                                       ; preds = %if_block241
  %157 = load %String*, %String** %_result.addr
  %158 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef247, i32 0, i32 0
  %159 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef247, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.76, i32 0, i32 0), i8** %158
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.76, i32 0, i32 3), i8** %159
  %160 = load %StringRef, %StringRef* %tmp.StringRef247
  store %StringRef %160, %StringRef* %"$tmpForRef246"
  call void @ctor.370(%String* %157, %StringRef* %"$tmpForRef246")
  ret void

if_else243:                                       ; preds = %if_block241
  br label %if_block249

if_end244:                                        ; preds = %if_end252, %dumy_block248
  br label %if_end236

dumy_block248:                                    ; No predecessors!
  br label %if_end244

if_block249:                                      ; preds = %if_else243
  call void @ctor.319(%TokenType* %tmp.v253, i32 32)
  %161 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v253)
  br i1 %161, label %if_then250, label %if_else251

if_then250:                                       ; preds = %if_block249
  %162 = load %String*, %String** %_result.addr
  %163 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef255, i32 0, i32 0
  %164 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef255, i32 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.77, i32 0, i32 0), i8** %163
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.77, i32 0, i32 16), i8** %164
  %165 = load %StringRef, %StringRef* %tmp.StringRef255
  store %StringRef %165, %StringRef* %"$tmpForRef254"
  call void @ctor.370(%String* %162, %StringRef* %"$tmpForRef254")
  ret void

if_else251:                                       ; preds = %if_block249
  br label %if_block257

if_end252:                                        ; preds = %if_end260, %dumy_block256
  br label %if_end244

dumy_block256:                                    ; No predecessors!
  br label %if_end252

if_block257:                                      ; preds = %if_else251
  call void @ctor.319(%TokenType* %tmp.v261, i32 33)
  %166 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v261)
  br i1 %166, label %if_then258, label %if_else259

if_then258:                                       ; preds = %if_block257
  %167 = load %String*, %String** %_result.addr
  %168 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef263, i32 0, i32 0
  %169 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef263, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.78, i32 0, i32 0), i8** %168
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.78, i32 0, i32 3), i8** %169
  %170 = load %StringRef, %StringRef* %tmp.StringRef263
  store %StringRef %170, %StringRef* %"$tmpForRef262"
  call void @ctor.370(%String* %167, %StringRef* %"$tmpForRef262")
  ret void

if_else259:                                       ; preds = %if_block257
  br label %if_block265

if_end260:                                        ; preds = %if_end268, %dumy_block264
  br label %if_end252

dumy_block264:                                    ; No predecessors!
  br label %if_end260

if_block265:                                      ; preds = %if_else259
  call void @ctor.319(%TokenType* %tmp.v269, i32 34)
  %171 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v269)
  br i1 %171, label %if_then266, label %if_else267

if_then266:                                       ; preds = %if_block265
  %172 = load %String*, %String** %_result.addr
  %173 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef271, i32 0, i32 0
  %174 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef271, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.79, i32 0, i32 0), i8** %173
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.79, i32 0, i32 3), i8** %174
  %175 = load %StringRef, %StringRef* %tmp.StringRef271
  store %StringRef %175, %StringRef* %"$tmpForRef270"
  call void @ctor.370(%String* %172, %StringRef* %"$tmpForRef270")
  ret void

if_else267:                                       ; preds = %if_block265
  br label %if_block273

if_end268:                                        ; preds = %if_end276, %dumy_block272
  br label %if_end260

dumy_block272:                                    ; No predecessors!
  br label %if_end268

if_block273:                                      ; preds = %if_else267
  call void @ctor.319(%TokenType* %tmp.v277, i32 35)
  %176 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v277)
  br i1 %176, label %if_then274, label %if_else275

if_then274:                                       ; preds = %if_block273
  %177 = load %String*, %String** %_result.addr
  %178 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef279, i32 0, i32 0
  %179 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef279, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.80, i32 0, i32 0), i8** %178
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.80, i32 0, i32 3), i8** %179
  %180 = load %StringRef, %StringRef* %tmp.StringRef279
  store %StringRef %180, %StringRef* %"$tmpForRef278"
  call void @ctor.370(%String* %177, %StringRef* %"$tmpForRef278")
  ret void

if_else275:                                       ; preds = %if_block273
  br label %if_block281

if_end276:                                        ; preds = %if_end284, %dumy_block280
  br label %if_end268

dumy_block280:                                    ; No predecessors!
  br label %if_end276

if_block281:                                      ; preds = %if_else275
  call void @ctor.319(%TokenType* %tmp.v285, i32 36)
  %181 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v285)
  br i1 %181, label %if_then282, label %if_else283

if_then282:                                       ; preds = %if_block281
  %182 = load %String*, %String** %_result.addr
  %183 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef287, i32 0, i32 0
  %184 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef287, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.81, i32 0, i32 0), i8** %183
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.81, i32 0, i32 3), i8** %184
  %185 = load %StringRef, %StringRef* %tmp.StringRef287
  store %StringRef %185, %StringRef* %"$tmpForRef286"
  call void @ctor.370(%String* %182, %StringRef* %"$tmpForRef286")
  ret void

if_else283:                                       ; preds = %if_block281
  br label %if_block289

if_end284:                                        ; preds = %if_end292, %dumy_block288
  br label %if_end276

dumy_block288:                                    ; No predecessors!
  br label %if_end284

if_block289:                                      ; preds = %if_else283
  call void @ctor.319(%TokenType* %tmp.v293, i32 37)
  %186 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v293)
  br i1 %186, label %if_then290, label %if_else291

if_then290:                                       ; preds = %if_block289
  %187 = load %String*, %String** %_result.addr
  %188 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef295, i32 0, i32 0
  %189 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef295, i32 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.82, i32 0, i32 0), i8** %188
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.82, i32 0, i32 10), i8** %189
  %190 = load %StringRef, %StringRef* %tmp.StringRef295
  store %StringRef %190, %StringRef* %"$tmpForRef294"
  call void @ctor.370(%String* %187, %StringRef* %"$tmpForRef294")
  ret void

if_else291:                                       ; preds = %if_block289
  br label %if_block297

if_end292:                                        ; preds = %if_end300, %dumy_block296
  br label %if_end284

dumy_block296:                                    ; No predecessors!
  br label %if_end292

if_block297:                                      ; preds = %if_else291
  call void @ctor.319(%TokenType* %tmp.v301, i32 38)
  %191 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v301)
  br i1 %191, label %if_then298, label %if_else299

if_then298:                                       ; preds = %if_block297
  %192 = load %String*, %String** %_result.addr
  %193 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef303, i32 0, i32 0
  %194 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef303, i32 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.83, i32 0, i32 0), i8** %193
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.83, i32 0, i32 8), i8** %194
  %195 = load %StringRef, %StringRef* %tmp.StringRef303
  store %StringRef %195, %StringRef* %"$tmpForRef302"
  call void @ctor.370(%String* %192, %StringRef* %"$tmpForRef302")
  ret void

if_else299:                                       ; preds = %if_block297
  br label %if_block305

if_end300:                                        ; preds = %if_end308, %dumy_block304
  br label %if_end292

dumy_block304:                                    ; No predecessors!
  br label %if_end300

if_block305:                                      ; preds = %if_else299
  call void @ctor.319(%TokenType* %tmp.v309, i32 39)
  %196 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v309)
  br i1 %196, label %if_then306, label %if_else307

if_then306:                                       ; preds = %if_block305
  %197 = load %String*, %String** %_result.addr
  %198 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef311, i32 0, i32 0
  %199 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef311, i32 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.84, i32 0, i32 0), i8** %198
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.84, i32 0, i32 12), i8** %199
  %200 = load %StringRef, %StringRef* %tmp.StringRef311
  store %StringRef %200, %StringRef* %"$tmpForRef310"
  call void @ctor.370(%String* %197, %StringRef* %"$tmpForRef310")
  ret void

if_else307:                                       ; preds = %if_block305
  br label %if_block313

if_end308:                                        ; preds = %if_end316, %dumy_block312
  br label %if_end300

dumy_block312:                                    ; No predecessors!
  br label %if_end308

if_block313:                                      ; preds = %if_else307
  call void @ctor.319(%TokenType* %tmp.v317, i32 40)
  %201 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v317)
  br i1 %201, label %if_then314, label %if_else315

if_then314:                                       ; preds = %if_block313
  %202 = load %String*, %String** %_result.addr
  %203 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef319, i32 0, i32 0
  %204 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef319, i32 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.85, i32 0, i32 0), i8** %203
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.85, i32 0, i32 14), i8** %204
  %205 = load %StringRef, %StringRef* %tmp.StringRef319
  store %StringRef %205, %StringRef* %"$tmpForRef318"
  call void @ctor.370(%String* %202, %StringRef* %"$tmpForRef318")
  ret void

if_else315:                                       ; preds = %if_block313
  br label %if_block321

if_end316:                                        ; preds = %if_end324, %dumy_block320
  br label %if_end308

dumy_block320:                                    ; No predecessors!
  br label %if_end316

if_block321:                                      ; preds = %if_else315
  call void @ctor.319(%TokenType* %tmp.v325, i32 41)
  %206 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v325)
  br i1 %206, label %if_then322, label %if_else323

if_then322:                                       ; preds = %if_block321
  %207 = load %String*, %String** %_result.addr
  %208 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef327, i32 0, i32 0
  %209 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef327, i32 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.86, i32 0, i32 0), i8** %208
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.86, i32 0, i32 11), i8** %209
  %210 = load %StringRef, %StringRef* %tmp.StringRef327
  store %StringRef %210, %StringRef* %"$tmpForRef326"
  call void @ctor.370(%String* %207, %StringRef* %"$tmpForRef326")
  ret void

if_else323:                                       ; preds = %if_block321
  br label %if_block329

if_end324:                                        ; preds = %if_end332, %dumy_block328
  br label %if_end316

dumy_block328:                                    ; No predecessors!
  br label %if_end324

if_block329:                                      ; preds = %if_else323
  call void @ctor.319(%TokenType* %tmp.v333, i32 42)
  %211 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v333)
  br i1 %211, label %if_then330, label %if_else331

if_then330:                                       ; preds = %if_block329
  %212 = load %String*, %String** %_result.addr
  %213 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef335, i32 0, i32 0
  %214 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef335, i32 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.87, i32 0, i32 0), i8** %213
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.87, i32 0, i32 12), i8** %214
  %215 = load %StringRef, %StringRef* %tmp.StringRef335
  store %StringRef %215, %StringRef* %"$tmpForRef334"
  call void @ctor.370(%String* %212, %StringRef* %"$tmpForRef334")
  ret void

if_else331:                                       ; preds = %if_block329
  br label %if_block337

if_end332:                                        ; preds = %if_end340, %dumy_block336
  br label %if_end324

dumy_block336:                                    ; No predecessors!
  br label %if_end332

if_block337:                                      ; preds = %if_else331
  call void @ctor.319(%TokenType* %tmp.v341, i32 43)
  %216 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v341)
  br i1 %216, label %if_then338, label %if_else339

if_then338:                                       ; preds = %if_block337
  %217 = load %String*, %String** %_result.addr
  %218 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef343, i32 0, i32 0
  %219 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef343, i32 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.88, i32 0, i32 0), i8** %218
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.88, i32 0, i32 12), i8** %219
  %220 = load %StringRef, %StringRef* %tmp.StringRef343
  store %StringRef %220, %StringRef* %"$tmpForRef342"
  call void @ctor.370(%String* %217, %StringRef* %"$tmpForRef342")
  ret void

if_else339:                                       ; preds = %if_block337
  br label %if_block345

if_end340:                                        ; preds = %if_end348, %dumy_block344
  br label %if_end332

dumy_block344:                                    ; No predecessors!
  br label %if_end340

if_block345:                                      ; preds = %if_else339
  call void @ctor.319(%TokenType* %tmp.v349, i32 44)
  %221 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v349)
  br i1 %221, label %if_then346, label %if_else347

if_then346:                                       ; preds = %if_block345
  %222 = load %String*, %String** %_result.addr
  %223 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef351, i32 0, i32 0
  %224 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef351, i32 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.89, i32 0, i32 0), i8** %223
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.89, i32 0, i32 13), i8** %224
  %225 = load %StringRef, %StringRef* %tmp.StringRef351
  store %StringRef %225, %StringRef* %"$tmpForRef350"
  call void @ctor.370(%String* %222, %StringRef* %"$tmpForRef350")
  ret void

if_else347:                                       ; preds = %if_block345
  br label %if_block353

if_end348:                                        ; preds = %if_end356, %dumy_block352
  br label %if_end340

dumy_block352:                                    ; No predecessors!
  br label %if_end348

if_block353:                                      ; preds = %if_else347
  call void @ctor.319(%TokenType* %tmp.v357, i32 45)
  %226 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v357)
  br i1 %226, label %if_then354, label %if_else355

if_then354:                                       ; preds = %if_block353
  %227 = load %String*, %String** %_result.addr
  %228 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef359, i32 0, i32 0
  %229 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef359, i32 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.90, i32 0, i32 0), i8** %228
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.90, i32 0, i32 13), i8** %229
  %230 = load %StringRef, %StringRef* %tmp.StringRef359
  store %StringRef %230, %StringRef* %"$tmpForRef358"
  call void @ctor.370(%String* %227, %StringRef* %"$tmpForRef358")
  ret void

if_else355:                                       ; preds = %if_block353
  br label %if_block361

if_end356:                                        ; preds = %if_end363, %dumy_block360
  br label %if_end348

dumy_block360:                                    ; No predecessors!
  br label %if_end356

if_block361:                                      ; preds = %if_else355
  call void @ctor.319(%TokenType* %tmp.v364, i32 46)
  %231 = call i1 @"==.279"(%TokenType* %t.addr, %TokenType* %tmp.v364)
  br i1 %231, label %if_then362, label %if_end363

if_then362:                                       ; preds = %if_block361
  %232 = load %String*, %String** %_result.addr
  %233 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef366, i32 0, i32 0
  %234 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef366, i32 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.91, i32 0, i32 0), i8** %233
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.91, i32 0, i32 14), i8** %234
  %235 = load %StringRef, %StringRef* %tmp.StringRef366
  store %StringRef %235, %StringRef* %"$tmpForRef365"
  call void @ctor.370(%String* %232, %StringRef* %"$tmpForRef365")
  ret void

if_end363:                                        ; preds = %dumy_block367, %if_block361
  br label %if_end356

dumy_block367:                                    ; No predecessors!
  br label %if_end363
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.434(%Node* %this, %Node* %other) #3 {
  %this.addr = alloca %Node*
  store %Node* %this, %Node** %this.addr
  %other.addr = alloca %Node*
  store %Node* %other, %Node** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node*, %Node** %this.addr
  %2 = getelementptr inbounds %Node, %Node* %1, i32 0, i32 0
  %3 = load %Node*, %Node** %other.addr
  %4 = getelementptr inbounds %Node, %Node* %3, i32 0, i32 0
  call void @ctor.65(%UntypedPtr* %2, %UntypedPtr* %4)
  ret void
}

declare %Node @comp_parser_mkIdentifier(%Location*, %StringRef)

; Function Attrs: alwaysinline nounwind
define internal void @"=.435"(%Node* %this, %Node* %other) #3 {
  %this.addr = alloca %Node*
  store %Node* %this, %Node** %this.addr
  %other.addr = alloca %Node*
  store %Node* %other, %Node** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node*, %Node** %this.addr
  %2 = getelementptr inbounds %Node, %Node* %1, i32 0, i32 0
  %3 = load %Node*, %Node** %other.addr
  %4 = getelementptr inbounds %Node, %Node* %3, i32 0, i32 0
  call void @"=.67"(%UntypedPtr* %2, %UntypedPtr* %4)
  ret void
}

declare %Node @comp_parser_mkStarExpr(%Location*, %Node, %StringRef)

; Function Attrs: inlinehint nounwind
define internal void @span(%Location* sret %_result, %Location* %start, %Location* %end) #4 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %start.addr = alloca %Location*
  store %Location* %start, %Location** %start.addr
  %end.addr = alloca %Location*
  store %Location* %end, %Location** %end.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %start.addr
  call void @ctor.177(%Location* %res, %Location* %1)
  %2 = load %Location*, %Location** %end.addr
  call void @copyEnd(%Location* %res, %Location* %2)
  %3 = load %Location*, %Location** %_result.addr
  call void @ctor.177(%Location* %3, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @copyEnd(%Location* %l, %Location* %other) #4 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %l.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 2
  %3 = load %Location*, %Location** %other.addr
  %4 = getelementptr inbounds %Location, %Location* %3, i32 0, i32 2
  call void @"=.250"(%LineCol* %2, %LineCol* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @lastLoc(%Location* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %_result.addr
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %3 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i32 0, i32 1
  %4 = getelementptr inbounds %Token, %Token* %3, i32 0, i32 0
  call void @ctor.177(%Location* %1, %Location* %4)
  ret void
}

declare %Node @comp_parser_mkCompoundExpr(%Location*, %Node, %StringRef)

; Function Attrs: alwaysinline nounwind
define internal void @ctor.436(%Node* %this) #3 {
  %this.addr = alloca %Node*
  store %Node* %this, %Node** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node*, %Node** %this.addr
  %2 = getelementptr inbounds %Node, %Node* %1, i32 0, i32 0
  call void @ctor.64(%UntypedPtr* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %topLevel, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %child = alloca %Node
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = load i1, i1* %topLevel.addr
  call void @parseStmt(%Node* %child, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 %2)
  br label %if_block

while_step:                                       ; preds = %dumy_block1, %if_then
  br label %while_block

while_end:                                        ; preds = %if_end, %while_block
  ret void

if_block:                                         ; preds = %while_body
  %3 = load %Node, %Node* %child
  %4 = call i1 @isSet.473(%Node %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %Node*, %Node** %res.addr
  %6 = load %Node*, %Node** %res.addr
  %7 = load %Node, %Node* %6
  %8 = load %Node, %Node* %child
  %9 = call %Node @comp_parser_addToNodeList(%Node %7, %Node %8)
  store %Node %9, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %5, %Node* %"$tmpForRef")
  br label %while_step

if_end:                                           ; preds = %dumy_block, %if_block
  br label %while_end

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block1:                                      ; No predecessors!
  br label %while_step
}

; Function Attrs: noinline nounwind
define void @parseStmt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %topLevel) #5 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %res = alloca %Node
  %loc = alloca %Location
  %mods = alloca %Node
  %found = alloca i1
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC56" = alloca %Location
  %"$tmpC57" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %"$tmpC58" = alloca %Token
  %tmp.StringRef59 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor.436(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseModifiers(%Node* %mods, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = call i1 @parseImportLineOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %Node* %res)
  br i1 %5, label %cond.true37, label %cond.false38

cond.true:                                        ; preds = %cond.end3
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %7 = call i1 @parseReturnStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %Node* %res)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res52 = phi i1 [ true, %cond.true ], [ %7, %cond.false ]
  store i1 %cond.res52, i1* %found
  br label %if_block

cond.true1:                                       ; preds = %cond.end6
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = call i1 @parseContinueStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %Node* %res)
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res51 = phi i1 [ true, %cond.true1 ], [ %9, %cond.false2 ]
  br i1 %cond.res51, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %11 = call i1 @parseBreakStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %Node* %res)
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res50 = phi i1 [ true, %cond.true4 ], [ %11, %cond.false5 ]
  br i1 %cond.res50, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = load i1, i1* %topLevel.addr
  %14 = call i1 @parseWhileStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, %Node* %res, i1 %13)
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res49 = phi i1 [ true, %cond.true7 ], [ %14, %cond.false8 ]
  br i1 %cond.res49, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %cond.end15
  br label %cond.end12

cond.false11:                                     ; preds = %cond.end15
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = load i1, i1* %topLevel.addr
  %17 = call i1 @parseForStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %Node* %res, i1 %16)
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res48 = phi i1 [ true, %cond.true10 ], [ %17, %cond.false11 ]
  br i1 %cond.res48, label %cond.true7, label %cond.false8

cond.true13:                                      ; preds = %cond.end18
  br label %cond.end15

cond.false14:                                     ; preds = %cond.end18
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = load i1, i1* %topLevel.addr
  %20 = call i1 @parseIfStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, %Node* %res, i1 %19)
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res47 = phi i1 [ true, %cond.true13 ], [ %20, %cond.false14 ]
  br i1 %cond.res47, label %cond.true10, label %cond.false11

cond.true16:                                      ; preds = %cond.end21
  br label %cond.end18

cond.false17:                                     ; preds = %cond.end21
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %22 = load i1, i1* %topLevel.addr
  %23 = call i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, %Node* %res, i1 %22)
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond.res46 = phi i1 [ true, %cond.true16 ], [ %23, %cond.false17 ]
  br i1 %cond.res46, label %cond.true13, label %cond.false14

cond.true19:                                      ; preds = %cond.end24
  br label %cond.end21

cond.false20:                                     ; preds = %cond.end24
  %24 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %25 = call i1 @parseExprStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24, %Node* %res)
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res45 = phi i1 [ true, %cond.true19 ], [ %25, %cond.false20 ]
  br i1 %cond.res45, label %cond.true16, label %cond.false17

cond.true22:                                      ; preds = %cond.end27
  br label %cond.end24

cond.false23:                                     ; preds = %cond.end27
  %26 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %27 = call i1 @parseFunDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %26, %Node* %res)
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond.res44 = phi i1 [ true, %cond.true22 ], [ %27, %cond.false23 ]
  br i1 %cond.res44, label %cond.true19, label %cond.false20

cond.true25:                                      ; preds = %cond.end30
  br label %cond.end27

cond.false26:                                     ; preds = %cond.end30
  %28 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %29 = call i1 @parseVarLikeDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %28, %Node* %res)
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res43 = phi i1 [ true, %cond.true25 ], [ %29, %cond.false26 ]
  br i1 %cond.res43, label %cond.true22, label %cond.false23

cond.true28:                                      ; preds = %cond.end33
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end33
  %30 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %31 = call i1 @parseConceptDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %30, %Node* %res)
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond.res42 = phi i1 [ true, %cond.true28 ], [ %31, %cond.false29 ]
  br i1 %cond.res42, label %cond.true25, label %cond.false26

cond.true31:                                      ; preds = %cond.end36
  br label %cond.end33

cond.false32:                                     ; preds = %cond.end36
  %32 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %33 = call i1 @parseDatatypeDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %32, %Node* %res)
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond.res41 = phi i1 [ true, %cond.true31 ], [ %33, %cond.false32 ]
  br i1 %cond.res41, label %cond.true28, label %cond.false29

cond.true34:                                      ; preds = %cond.end39
  br label %cond.end36

cond.false35:                                     ; preds = %cond.end39
  %34 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %35 = call i1 @parsePackageDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %34, %Node* %res)
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond.res40 = phi i1 [ true, %cond.true34 ], [ %35, %cond.false35 ]
  br i1 %cond.res40, label %cond.true31, label %cond.false32

cond.true37:                                      ; preds = %code
  br label %cond.end39

cond.false38:                                     ; preds = %code
  %36 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %37 = call i1 @parseUsingDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %36, %Node* %res)
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond.res = phi i1 [ true, %cond.true37 ], [ %37, %cond.false38 ]
  br i1 %cond.res, label %cond.true34, label %cond.false35

if_block:                                         ; preds = %cond.end
  %38 = load %Node, %Node* %mods
  %39 = call i1 @isSet.473(%Node %38)
  br i1 %39, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  br label %if_block53

if_end:                                           ; preds = %if_end55, %if_block
  %40 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %40, %Node* %res)
  ret void

if_block53:                                       ; preds = %if_then
  %41 = load i1, i1* %found
  br i1 %41, label %if_then54, label %if_else

if_then54:                                        ; preds = %if_block53
  %42 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC56", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %42)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC56")
  %43 = load %Node, %Node* %res
  %44 = load %Node, %Node* %mods
  %45 = call %Node @comp_parser_mkModifiers(%Location* %"$tmpC", %Node %43, %Node %44)
  store %Node %45, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef")
  br label %if_end55

if_else:                                          ; preds = %if_block53
  %46 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %47 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %48 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.108, i32 0, i32 0), i8** %47
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.108, i32 0, i32 25), i8** %48
  %49 = load %StringRef, %StringRef* %tmp.StringRef
  %50 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %51 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %50, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC58", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %51)
  %52 = getelementptr inbounds %Token, %Token* %"$tmpC58", i32 0, i32 1
  %53 = load %TokenType, %TokenType* %52
  %54 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef59, i32 0, i32 0
  %55 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef59, i32 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.109, i32 0, i32 0), i8** %54
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.109, i32 0, i32 21), i8** %55
  %56 = load %StringRef, %StringRef* %tmp.StringRef59
  call void @toString.474(%String* %"$tmpC57", %StringRef %49, %TokenType %53, %StringRef %56)
  call void @reportError.429(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %46, %String* %"$tmpC57")
  call void @dtor.229(%String* %"$tmpC57")
  call void @dtor.228(%Token* %"$tmpC58")
  br label %if_end55

if_end55:                                         ; preds = %if_else, %if_then54
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 32)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseModifiers(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %e = alloca %Node
  %"$tmpC" = alloca %Node
  %"$tmpForRef" = alloca %Node
  %tmp.v1 = alloca %TokenType
  %"$tmpC2" = alloca %Node
  %"$tmpForRef3" = alloca %Node
  %tmp.v4 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor.436(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 27)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  call void @ctor.436(%Node* %e)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 true)
  call void @"=.435"(%Node* %e, %Node* %"$tmpC")
  %5 = load %Node, %Node* %res
  %6 = load %Node, %Node* %e
  %7 = call %Node @comp_parser_addToNodeList(%Node %5, %Node %6)
  store %Node %7, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

if_end:                                           ; preds = %while_end, %if_block
  %8 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %8, %Node* %res)
  ret void

while_block:                                      ; preds = %while_step, %if_then
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 33)
  %10 = load %TokenType, %TokenType* %tmp.v1
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true)
  call void @"=.435"(%Node* %e, %Node* %"$tmpC2")
  %13 = load %Node, %Node* %res
  %14 = load %Node, %Node* %e
  %15 = call %Node @comp_parser_addToNodeList(%Node %13, %Node %14)
  store %Node %15, %Node* %"$tmpForRef3"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef3")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v4, i32 28)
  %17 = load %TokenType, %TokenType* %tmp.v4
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %loc = alloca %Location
  %baseExpr = alloca %Node
  %op = alloca %String
  %"$tmpC" = alloca %String
  %rhs = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC4" = alloca %Location
  %"$tmpC5" = alloca %Location
  %"$tmpC6" = alloca %StringRef
  %"$tmpForRef7" = alloca %Node
  %"$tmpC8" = alloca %Location
  %"$tmpC9" = alloca %Location
  %"$tmpC10" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %3 = load i1, i1* %withEqual.addr
  call void @parsePrefixExpr(%Node* %baseExpr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i1 %3)
  call void @ctor.164(%String* %op)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = load i1, i1* %withEqual.addr
  call void @parseIdOrOperOpt(%String* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 %5)
  %6 = call %String* @"=.256"(%String* %op, %String* %"$tmpC")
  call void @dtor.229(%String* %"$tmpC")
  br label %if_block

while_step:                                       ; preds = %if_end3
  br label %while_block

while_end:                                        ; preds = %if_else, %if_then, %while_block
  %7 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %7, %Node* %baseExpr)
  call void @dtor.229(%String* %op)
  ret void

if_block:                                         ; preds = %while_body
  %8 = call i1 @isEmpty.376(%String* %op)
  br i1 %8, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  br label %while_end

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %10 = load i1, i1* %withEqual.addr
  %11 = call i1 @nextIsExpr(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 %10)
  br i1 %11, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = load i1, i1* %withEqual.addr
  call void @parsePrefixExpr(%Node* %rhs, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 %13)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC5", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14)
  call void @span(%Location* %"$tmpC4", %Location* %loc, %Location* %"$tmpC5")
  %15 = load %Node, %Node* %baseExpr
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %op)
  %16 = load %StringRef, %StringRef* %"$tmpC6"
  %17 = load %Node, %Node* %rhs
  %18 = call %Node @comp_parser_mkInfixOp(%Location* %"$tmpC4", %Node %15, %StringRef %16, %Node %17)
  store %Node %18, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %baseExpr, %Node* %"$tmpForRef")
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC9", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19)
  call void @span(%Location* %"$tmpC8", %Location* %loc, %Location* %"$tmpC9")
  %20 = load %Node, %Node* %baseExpr
  call void @asStringRef(%StringRef* %"$tmpC10", %String* %op)
  %21 = load %StringRef, %StringRef* %"$tmpC10"
  %22 = call %Node @comp_parser_mkPostfixOp(%Location* %"$tmpC8", %Node %20, %StringRef %21)
  store %Node %22, %Node* %"$tmpForRef7"
  call void @"=.435"(%Node* %baseExpr, %Node* %"$tmpForRef7")
  br label %while_end

if_end3:                                          ; preds = %dumy_block11, %if_then2
  br label %while_step

dumy_block11:                                     ; No predecessors!
  br label %if_end3

dumy_block12:                                     ; No predecessors!
  call void @dtor.229(%String* %op)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parsePrefixExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %loc = alloca %Location
  %op = alloca %String
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %String
  %tmp.v1 = alloca %TokenType
  %"$tmpC2" = alloca %String
  %baseExpr = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC7" = alloca %Location
  %"$tmpC8" = alloca %Location
  %"$tmpC9" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  call void @ctor.164(%String* %op)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 35)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  %6 = call %String* @"=.256"(%String* %op, %String* %"$tmpC")
  call void @dtor.229(%String* %"$tmpC")
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 35)
  %8 = load %TokenType, %TokenType* %tmp.v1
  %9 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  br label %if_end

if_else:                                          ; preds = %if_block
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseOperOpt(%String* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 true)
  %11 = call %String* @"=.256"(%String* %op, %String* %"$tmpC2")
  call void @dtor.229(%String* %"$tmpC2")
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  br label %if_block3

if_block3:                                        ; preds = %if_end
  %12 = call i1 @isEmpty.376(%String* %op)
  br i1 %12, label %if_then4, label %if_else5

if_then4:                                         ; preds = %if_block3
  %13 = load %Node*, %Node** %_result.addr
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseSimpleExpr(%Node* %13, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true)
  call void @dtor.229(%String* %op)
  ret void

if_else5:                                         ; preds = %if_block3
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parsePrefixExpr(%Node* %baseExpr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i1 true)
  %16 = load %Node*, %Node** %_result.addr
  %17 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC8", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %17)
  call void @span(%Location* %"$tmpC7", %Location* %loc, %Location* %"$tmpC8")
  call void @asStringRef(%StringRef* %"$tmpC9", %String* %op)
  %18 = load %StringRef, %StringRef* %"$tmpC9"
  %19 = load %Node, %Node* %baseExpr
  %20 = call %Node @comp_parser_mkPrefixOp(%Location* %"$tmpC7", %StringRef %18, %Node %19)
  store %Node %20, %Node* %"$tmpForRef"
  call void @ctor.434(%Node* %16, %Node* %"$tmpForRef")
  call void @dtor.229(%String* %op)
  ret void

if_end6:                                          ; preds = %dumy_block10, %dumy_block
  call void @dtor.229(%String* %op)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end6

dumy_block10:                                     ; No predecessors!
  br label %if_end6
}

; Function Attrs: inlinehint nounwind
define internal void @parseId(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 37)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = load %String*, %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 2
  call void @ctor.192(%String* %4, %String* %7)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseOperOpt(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %tmp.v = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 38)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %String*, %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 2
  call void @ctor.192(%String* %4, %String* %7)
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %cond_destruct_end13, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  %8 = load i1, i1* %withEqual.addr
  br i1 %8, label %cond.true, label %cond.false

if_then2:                                         ; preds = %cond.end
  %9 = load %String*, %String** %_result.addr
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %11 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i32 0, i32 1
  %12 = getelementptr inbounds %Token, %Token* %11, i32 0, i32 2
  call void @ctor.192(%String* %9, %String* %12)
  br i1 %8, label %cond_destruct_alt1, label %cond_destruct_alt2

if_else3:                                         ; preds = %cond.end
  %13 = load %String*, %String** %_result.addr
  call void @ctor.164(%String* %13)
  br i1 %8, label %cond_destruct_alt17, label %cond_destruct_alt28

if_end4:                                          ; preds = %dumy_block10, %dumy_block6
  br i1 %8, label %cond_destruct_alt111, label %cond_destruct_alt212

cond.true:                                        ; preds = %if_block1
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v5, i32 36)
  %15 = load %TokenType, %TokenType* %tmp.v5
  %16 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  br label %cond.end

cond.false:                                       ; preds = %if_block1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %16, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then2, label %if_else3

cond_destruct_alt1:                               ; preds = %if_then2
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then2
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

dumy_block6:                                      ; No predecessors!
  br label %if_end4

cond_destruct_alt17:                              ; preds = %if_else3
  br label %cond_destruct_end9

cond_destruct_alt28:                              ; preds = %if_else3
  br label %cond_destruct_end9

cond_destruct_end9:                               ; preds = %cond_destruct_alt28, %cond_destruct_alt17
  ret void

dumy_block10:                                     ; No predecessors!
  br label %if_end4

cond_destruct_alt111:                             ; preds = %if_end4
  br label %cond_destruct_end13

cond_destruct_alt212:                             ; preds = %if_end4
  br label %cond_destruct_end13

cond_destruct_end13:                              ; preds = %cond_destruct_alt212, %cond_destruct_alt111
  br label %if_end
}

; Function Attrs: noinline nounwind
define void @parseSimpleExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #5 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %res = alloca %Node
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v6 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC7" = alloca %Node
  %tmp.v8 = alloca %TokenType
  %tmp.v13 = alloca %TokenType
  %"$tmpForRef14" = alloca %Node
  %"$tmpC15" = alloca %StringRef
  %tmp.v20 = alloca %TokenType
  %"$tmpForRef21" = alloca %Node
  %tmp.v26 = alloca %TokenType
  %"$tmpForRef27" = alloca %Node
  %tmp.v32 = alloca %TokenType
  %"$tmpForRef33" = alloca %Node
  %tmp.v38 = alloca %TokenType
  %"$tmpForRef39" = alloca %Node
  %tmp.v40 = alloca i32
  %tmp.v45 = alloca %TokenType
  %"$tmpForRef46" = alloca %Node
  %tmp.v47 = alloca i32
  %tmp.v52 = alloca %TokenType
  %"$tmpForRef53" = alloca %Node
  %tmp.v54 = alloca i64
  %tmp.v59 = alloca %TokenType
  %"$tmpForRef60" = alloca %Node
  %tmp.v61 = alloca i64
  %tmp.v66 = alloca %TokenType
  %"$tmpForRef67" = alloca %Node
  %tmp.v68 = alloca float
  %tmp.v73 = alloca %TokenType
  %"$tmpForRef74" = alloca %Node
  %tmp.v75 = alloca double
  %tmp.v80 = alloca %TokenType
  %"$tmpForRef81" = alloca %Node
  %tmp.v82 = alloca i64
  %tmp.v86 = alloca %TokenType
  %"$tmpForRef87" = alloca %Node
  %"$tmpC88" = alloca %StringRef
  %"$tmpC92" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %"$tmpC93" = alloca %Token
  %tmp.StringRef94 = alloca %StringRef
  %tmp.v99 = alloca %TokenType
  %args = alloca %Node
  %tmp.v100 = alloca %TokenType
  %"$tmpForRef101" = alloca %Node
  %"$tmpC102" = alloca %Location
  %"$tmpC103" = alloca %Location
  %tmp.v108 = alloca %TokenType
  %tmp.v113 = alloca %TokenType
  %tmp.v114 = alloca %TokenType
  %"$tmpForRef115" = alloca %Node
  %"$tmpC116" = alloca %Location
  %"$tmpC117" = alloca %Location
  %tmp.StringRef118 = alloca %StringRef
  %id = alloca %String
  %"$tmpForRef119" = alloca %Node
  %"$tmpC120" = alloca %Location
  %"$tmpC121" = alloca %Location
  %"$tmpC122" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor.436(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 29)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseLambdaExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @"=.435"(%Node* %res, %Node* %"$tmpC")
  br label %if_end

if_else:                                          ; preds = %cond.end
  br label %if_block2

if_end:                                           ; preds = %if_end5, %if_then
  br i1 %4, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 6)
  %7 = load %TokenType, %TokenType* %tmp.v1
  %8 = call i1 @next2Is(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %8, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_else

if_block2:                                        ; preds = %if_else
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v6, i32 29)
  %10 = load %TokenType, %TokenType* %tmp.v6
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %if_then3, label %if_else4

if_then3:                                         ; preds = %if_block2
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC7", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true)
  %13 = load %Node, %Node* %"$tmpC7"
  %14 = call %Node @comp_parser_mkParenthesisExpr(%Node %13)
  store %Node %14, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef")
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v8, i32 30)
  %16 = load %TokenType, %TokenType* %tmp.v8
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  br label %if_end5

if_else4:                                         ; preds = %if_block2
  br label %if_block9

if_end5:                                          ; preds = %if_end12, %if_then3
  br label %if_end

if_block9:                                        ; preds = %if_else4
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v13, i32 37)
  %19 = load %TokenType, %TokenType* %tmp.v13
  %20 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, %TokenType %19)
  br i1 %20, label %if_then10, label %if_else11

if_then10:                                        ; preds = %if_block9
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = getelementptr inbounds %Token, %Token* %22, i32 0, i32 0
  %24 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %25 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %24, i32 0, i32 1
  %26 = getelementptr inbounds %Token, %Token* %25, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC15", %String* %26)
  %27 = load %StringRef, %StringRef* %"$tmpC15"
  %28 = call %Node @comp_parser_mkIdentifier(%Location* %23, %StringRef %27)
  store %Node %28, %Node* %"$tmpForRef14"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef14")
  br label %if_end12

if_else11:                                        ; preds = %if_block9
  br label %if_block16

if_end12:                                         ; preds = %if_end19, %if_then10
  br label %if_end5

if_block16:                                       ; preds = %if_else11
  %29 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v20, i32 22)
  %30 = load %TokenType, %TokenType* %tmp.v20
  %31 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %29, %TokenType %30)
  br i1 %31, label %if_then17, label %if_else18

if_then17:                                        ; preds = %if_block16
  %32 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %33 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %32, i32 0, i32 1
  %34 = getelementptr inbounds %Token, %Token* %33, i32 0, i32 0
  %35 = call %Node @comp_parser_mkNullLiteral(%Location* %34)
  store %Node %35, %Node* %"$tmpForRef21"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef21")
  br label %if_end19

if_else18:                                        ; preds = %if_block16
  br label %if_block22

if_end19:                                         ; preds = %if_end25, %if_then17
  br label %if_end12

if_block22:                                       ; preds = %if_else18
  %36 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v26, i32 23)
  %37 = load %TokenType, %TokenType* %tmp.v26
  %38 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %36, %TokenType %37)
  br i1 %38, label %if_then23, label %if_else24

if_then23:                                        ; preds = %if_block22
  %39 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %40 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %39, i32 0, i32 1
  %41 = getelementptr inbounds %Token, %Token* %40, i32 0, i32 0
  %42 = call %Node @comp_parser_mkBoolLiteral(%Location* %41, i1 true)
  store %Node %42, %Node* %"$tmpForRef27"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef27")
  br label %if_end25

if_else24:                                        ; preds = %if_block22
  br label %if_block28

if_end25:                                         ; preds = %if_end31, %if_then23
  br label %if_end19

if_block28:                                       ; preds = %if_else24
  %43 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v32, i32 21)
  %44 = load %TokenType, %TokenType* %tmp.v32
  %45 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %43, %TokenType %44)
  br i1 %45, label %if_then29, label %if_else30

if_then29:                                        ; preds = %if_block28
  %46 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %47 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %46, i32 0, i32 1
  %48 = getelementptr inbounds %Token, %Token* %47, i32 0, i32 0
  %49 = call %Node @comp_parser_mkBoolLiteral(%Location* %48, i1 false)
  store %Node %49, %Node* %"$tmpForRef33"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef33")
  br label %if_end31

if_else30:                                        ; preds = %if_block28
  br label %if_block34

if_end31:                                         ; preds = %if_end37, %if_then29
  br label %if_end25

if_block34:                                       ; preds = %if_else30
  %50 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v38, i32 41)
  %51 = load %TokenType, %TokenType* %tmp.v38
  %52 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %50, %TokenType %51)
  br i1 %52, label %if_then35, label %if_else36

if_then35:                                        ; preds = %if_block34
  %53 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %54 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %53, i32 0, i32 1
  %55 = getelementptr inbounds %Token, %Token* %54, i32 0, i32 0
  %56 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %57 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %56, i32 0, i32 1
  %58 = getelementptr inbounds %Token, %Token* %57, i32 0, i32 3
  %59 = load i64, i64* %58
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %tmp.v40
  %61 = load i32, i32* %tmp.v40
  %62 = call %Node @comp_parser_mkIntLiteral(%Location* %55, i32 %61)
  store %Node %62, %Node* %"$tmpForRef39"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef39")
  br label %if_end37

if_else36:                                        ; preds = %if_block34
  br label %if_block41

if_end37:                                         ; preds = %if_end44, %if_then35
  br label %if_end31

if_block41:                                       ; preds = %if_else36
  %63 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v45, i32 43)
  %64 = load %TokenType, %TokenType* %tmp.v45
  %65 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %63, %TokenType %64)
  br i1 %65, label %if_then42, label %if_else43

if_then42:                                        ; preds = %if_block41
  %66 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %67 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %66, i32 0, i32 1
  %68 = getelementptr inbounds %Token, %Token* %67, i32 0, i32 0
  %69 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %70 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %69, i32 0, i32 1
  %71 = getelementptr inbounds %Token, %Token* %70, i32 0, i32 3
  %72 = load i64, i64* %71
  %73 = trunc i64 %72 to i32
  store i32 %73, i32* %tmp.v47
  %74 = load i32, i32* %tmp.v47
  %75 = call %Node @comp_parser_mkUIntLiteral(%Location* %68, i32 %74)
  store %Node %75, %Node* %"$tmpForRef46"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef46")
  br label %if_end44

if_else43:                                        ; preds = %if_block41
  br label %if_block48

if_end44:                                         ; preds = %if_end51, %if_then42
  br label %if_end37

if_block48:                                       ; preds = %if_else43
  %76 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v52, i32 42)
  %77 = load %TokenType, %TokenType* %tmp.v52
  %78 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %76, %TokenType %77)
  br i1 %78, label %if_then49, label %if_else50

if_then49:                                        ; preds = %if_block48
  %79 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %80 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %79, i32 0, i32 1
  %81 = getelementptr inbounds %Token, %Token* %80, i32 0, i32 0
  %82 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %83 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %82, i32 0, i32 1
  %84 = getelementptr inbounds %Token, %Token* %83, i32 0, i32 3
  %85 = load i64, i64* %84
  store i64 %85, i64* %tmp.v54
  %86 = load i64, i64* %tmp.v54
  %87 = call %Node @comp_parser_mkLongLiteral(%Location* %81, i64 %86)
  store %Node %87, %Node* %"$tmpForRef53"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef53")
  br label %if_end51

if_else50:                                        ; preds = %if_block48
  br label %if_block55

if_end51:                                         ; preds = %if_end58, %if_then49
  br label %if_end44

if_block55:                                       ; preds = %if_else50
  %88 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v59, i32 44)
  %89 = load %TokenType, %TokenType* %tmp.v59
  %90 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %88, %TokenType %89)
  br i1 %90, label %if_then56, label %if_else57

if_then56:                                        ; preds = %if_block55
  %91 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %92 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %91, i32 0, i32 1
  %93 = getelementptr inbounds %Token, %Token* %92, i32 0, i32 0
  %94 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %95 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %94, i32 0, i32 1
  %96 = getelementptr inbounds %Token, %Token* %95, i32 0, i32 3
  %97 = load i64, i64* %96
  store i64 %97, i64* %tmp.v61
  %98 = load i64, i64* %tmp.v61
  %99 = call %Node @comp_parser_mkULongLiteral(%Location* %93, i64 %98)
  store %Node %99, %Node* %"$tmpForRef60"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef60")
  br label %if_end58

if_else57:                                        ; preds = %if_block55
  br label %if_block62

if_end58:                                         ; preds = %if_end65, %if_then56
  br label %if_end51

if_block62:                                       ; preds = %if_else57
  %100 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v66, i32 45)
  %101 = load %TokenType, %TokenType* %tmp.v66
  %102 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %100, %TokenType %101)
  br i1 %102, label %if_then63, label %if_else64

if_then63:                                        ; preds = %if_block62
  %103 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %104 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %103, i32 0, i32 1
  %105 = getelementptr inbounds %Token, %Token* %104, i32 0, i32 0
  %106 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %107 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %106, i32 0, i32 1
  %108 = getelementptr inbounds %Token, %Token* %107, i32 0, i32 4
  %109 = load double, double* %108
  %110 = fptrunc double %109 to float
  store float %110, float* %tmp.v68
  %111 = load float, float* %tmp.v68
  %112 = call %Node @comp_parser_mkFloatLiteral(%Location* %105, float %111)
  store %Node %112, %Node* %"$tmpForRef67"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef67")
  br label %if_end65

if_else64:                                        ; preds = %if_block62
  br label %if_block69

if_end65:                                         ; preds = %if_end72, %if_then63
  br label %if_end58

if_block69:                                       ; preds = %if_else64
  %113 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v73, i32 46)
  %114 = load %TokenType, %TokenType* %tmp.v73
  %115 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %113, %TokenType %114)
  br i1 %115, label %if_then70, label %if_else71

if_then70:                                        ; preds = %if_block69
  %116 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %117 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %116, i32 0, i32 1
  %118 = getelementptr inbounds %Token, %Token* %117, i32 0, i32 0
  %119 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %120 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %119, i32 0, i32 1
  %121 = getelementptr inbounds %Token, %Token* %120, i32 0, i32 4
  %122 = load double, double* %121
  store double %122, double* %tmp.v75
  %123 = load double, double* %tmp.v75
  %124 = call %Node @comp_parser_mkDoubleLiteral(%Location* %118, double %123)
  store %Node %124, %Node* %"$tmpForRef74"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef74")
  br label %if_end72

if_else71:                                        ; preds = %if_block69
  br label %if_block76

if_end72:                                         ; preds = %if_end79, %if_then70
  br label %if_end65

if_block76:                                       ; preds = %if_else71
  %125 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v80, i32 39)
  %126 = load %TokenType, %TokenType* %tmp.v80
  %127 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %125, %TokenType %126)
  br i1 %127, label %if_then77, label %if_else78

if_then77:                                        ; preds = %if_block76
  %128 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %129 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %128, i32 0, i32 1
  %130 = getelementptr inbounds %Token, %Token* %129, i32 0, i32 0
  %131 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %132 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %131, i32 0, i32 1
  %133 = getelementptr inbounds %Token, %Token* %132, i32 0, i32 2
  store i64 0, i64* %tmp.v82
  %134 = load i64, i64* %tmp.v82
  %135 = call i8* @"().281"(%String* %133, i64 %134)
  %136 = load i8, i8* %135
  %137 = call %Node @comp_parser_mkCharLiteral(%Location* %130, i8 %136)
  store %Node %137, %Node* %"$tmpForRef81"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef81")
  br label %if_end79

if_else78:                                        ; preds = %if_block76
  br label %if_block83

if_end79:                                         ; preds = %if_end85, %if_then77
  br label %if_end72

if_block83:                                       ; preds = %if_else78
  %138 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v86, i32 40)
  %139 = load %TokenType, %TokenType* %tmp.v86
  %140 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %138, %TokenType %139)
  br i1 %140, label %if_then84, label %if_end85

if_then84:                                        ; preds = %if_block83
  %141 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %142 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %141, i32 0, i32 1
  %143 = getelementptr inbounds %Token, %Token* %142, i32 0, i32 0
  %144 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %145 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %144, i32 0, i32 1
  %146 = getelementptr inbounds %Token, %Token* %145, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC88", %String* %146)
  %147 = load %StringRef, %StringRef* %"$tmpC88"
  %148 = call %Node @comp_parser_mkStringLiteral(%Location* %143, %StringRef %147)
  store %Node %148, %Node* %"$tmpForRef87"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef87")
  br label %if_end85

if_end85:                                         ; preds = %if_then84, %if_block83
  br label %if_end79

cond_destruct_alt1:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br label %if_block89

if_block89:                                       ; preds = %cond_destruct_end
  %149 = load %Node, %Node* %res
  %150 = call i1 @isNull(%Node %149)
  br i1 %150, label %if_then90, label %if_end91

if_then90:                                        ; preds = %if_block89
  %151 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %152 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %153 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.97, i32 0, i32 0), i8** %152
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.97, i32 0, i32 25), i8** %153
  %154 = load %StringRef, %StringRef* %tmp.StringRef
  %155 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %156 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %155, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC93", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %156)
  %157 = getelementptr inbounds %Token, %Token* %"$tmpC93", i32 0, i32 1
  %158 = load %TokenType, %TokenType* %157
  %159 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef94, i32 0, i32 0
  %160 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef94, i32 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.98, i32 0, i32 0), i8** %159
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.98, i32 0, i32 22), i8** %160
  %161 = load %StringRef, %StringRef* %tmp.StringRef94
  call void @toString.474(%String* %"$tmpC92", %StringRef %154, %TokenType %158, %StringRef %161)
  call void @reportError.429(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %151, %String* %"$tmpC92")
  call void @dtor.229(%String* %"$tmpC92")
  call void @dtor.228(%Token* %"$tmpC93")
  %162 = load %Node*, %Node** %_result.addr
  call void @ctor.436(%Node* %162)
  ret void

if_end91:                                         ; preds = %dumy_block, %if_block89
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end91

while_block:                                      ; preds = %while_step, %if_end91
  br i1 true, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  br label %if_block95

while_step:                                       ; preds = %if_end98
  br label %while_block

while_end:                                        ; preds = %if_else106, %while_block
  %163 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %163, %Node* %res)
  ret void

if_block95:                                       ; preds = %while_body
  %164 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v99, i32 29)
  %165 = load %TokenType, %TokenType* %tmp.v99
  %166 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %164, %TokenType %165)
  br i1 %166, label %if_then96, label %if_else97

if_then96:                                        ; preds = %if_block95
  %167 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExprListOpt(%Node* %args, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %167)
  %168 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v100, i32 30)
  %169 = load %TokenType, %TokenType* %tmp.v100
  %170 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %168, %TokenType %169)
  %171 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC103", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %171)
  call void @span(%Location* %"$tmpC102", %Location* %loc, %Location* %"$tmpC103")
  %172 = load %Node, %Node* %res
  %173 = load %Node, %Node* %args
  %174 = call %Node @comp_parser_mkFunAppExpr(%Location* %"$tmpC102", %Node %172, %Node %173)
  store %Node %174, %Node* %"$tmpForRef101"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef101")
  br label %if_end98

if_else97:                                        ; preds = %if_block95
  br label %if_block104

if_end98:                                         ; preds = %if_end107, %if_then96
  br label %while_step

if_block104:                                      ; preds = %if_else97
  %175 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v108, i32 34)
  %176 = load %TokenType, %TokenType* %tmp.v108
  %177 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %175, %TokenType %176)
  br i1 %177, label %if_then105, label %if_else106

if_then105:                                       ; preds = %if_block104
  br label %if_block109

if_else106:                                       ; preds = %if_block104
  br label %while_end

if_end107:                                        ; preds = %dumy_block123, %if_end112
  br label %if_end98

if_block109:                                      ; preds = %if_then105
  %178 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v113, i32 29)
  %179 = load %TokenType, %TokenType* %tmp.v113
  %180 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %178, %TokenType %179)
  br i1 %180, label %if_then110, label %if_else111

if_then110:                                       ; preds = %if_block109
  %181 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v114, i32 30)
  %182 = load %TokenType, %TokenType* %tmp.v114
  %183 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %181, %TokenType %182)
  %184 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC117", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %184)
  call void @span(%Location* %"$tmpC116", %Location* %loc, %Location* %"$tmpC117")
  %185 = load %Node, %Node* %res
  %186 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef118, i32 0, i32 0
  %187 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef118, i32 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.99, i32 0, i32 0), i8** %186
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.99, i32 0, i32 2), i8** %187
  %188 = load %StringRef, %StringRef* %tmp.StringRef118
  %189 = call %Node @comp_parser_mkDotExpr(%Location* %"$tmpC116", %Node %185, %StringRef %188)
  store %Node %189, %Node* %"$tmpForRef115"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef115")
  br label %if_end112

if_else111:                                       ; preds = %if_block109
  %190 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %191 = load i1, i1* %withEqual.addr
  call void @parseIdOrOper(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %190, i1 %191)
  %192 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC121", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %192)
  call void @span(%Location* %"$tmpC120", %Location* %loc, %Location* %"$tmpC121")
  %193 = load %Node, %Node* %res
  call void @asStringRef(%StringRef* %"$tmpC122", %String* %id)
  %194 = load %StringRef, %StringRef* %"$tmpC122"
  %195 = call %Node @comp_parser_mkDotExpr(%Location* %"$tmpC120", %Node %193, %StringRef %194)
  store %Node %195, %Node* %"$tmpForRef119"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef119")
  call void @dtor.229(%String* %id)
  br label %if_end112

if_end112:                                        ; preds = %if_else111, %if_then110
  br label %if_end107

dumy_block123:                                    ; No predecessors!
  br label %if_end107
}

; Function Attrs: inlinehint nounwind
define internal i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %TokenType %t) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %Token
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = getelementptr inbounds %Token, %Token* %"$tmpC", i32 0, i32 1
  %4 = call i1 @"==.279"(%TokenType* %3, %TokenType* %t.addr)
  call void @dtor.228(%Token* %"$tmpC")
  ret i1 %4

dumy_block:                                       ; No predecessors!
  call void @dtor.228(%Token* %"$tmpC")
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal i1 @next2Is(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %TokenType %t) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %t.addr = alloca %TokenType
  store %TokenType %t, %TokenType* %t.addr
  %"$tmpC" = alloca %Token
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  store i32 1, i32* %tmp.v
  %3 = load i32, i32* %tmp.v
  call void @peek.437(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2, i32 %3)
  %4 = getelementptr inbounds %Token, %Token* %"$tmpC", i32 0, i32 1
  %5 = call i1 @"==.279"(%TokenType* %4, %TokenType* %t.addr)
  call void @dtor.228(%Token* %"$tmpC")
  ret i1 %5

dumy_block:                                       ; No predecessors!
  call void @dtor.228(%Token* %"$tmpC")
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @peek.437(%Token* sret %_result, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, i32 %n) #4 {
  %_result.addr = alloca %Token*
  store %Token* %_result, %Token** %_result.addr
  %this.addr = alloca %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*
  store %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %this, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %n.addr = alloca i32
  store i32 %n, i32* %n.addr
  %tmp.v = alloca i64
  %"$tmpC" = alloca %Token
  %tmp.v1 = alloca i64
  %tmp.v2 = alloca i64
  br label %code

code:                                             ; preds = %0
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %1 = load i32, i32* %n.addr
  %2 = zext i32 %1 to i64
  store i64 %2, i64* %tmp.v
  %3 = load i64, i64* %tmp.v
  %4 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %5 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %4, i32 0, i32 1
  %6 = call i64 @size.199(%"Vector[Token]"* %5)
  %7 = icmp sge i64 %3, %6
  br i1 %7, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %8 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %9 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %8, i32 0, i32 1
  %10 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %11 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %10, i32 0, i32 0
  call void @"post_++.423"(%Token* %"$tmpC", %"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %11)
  call void @"+=.311"(%"Vector[Token]"* %9, %Token* %"$tmpC")
  call void @dtor.228(%Token* %"$tmpC")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %cond.end
  br label %if_block

cond.true:                                        ; preds = %while_block
  %12 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %13 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %12, i32 0, i32 0
  %14 = call i1 @"pre_!!.421"(%"SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]"* %13)
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %14, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block:                                         ; preds = %while_end
  %15 = load i32, i32* %n.addr
  %16 = zext i32 %15 to i64
  store i64 %16, i64* %tmp.v1
  %17 = load i64, i64* %tmp.v1
  %18 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %19 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %18, i32 0, i32 1
  %20 = call i64 @size.199(%"Vector[Token]"* %19)
  %21 = icmp slt i64 %17, %20
  br i1 %21, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %22 = load %Token*, %Token** %_result.addr
  %23 = load %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"*, %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"** %this.addr
  %24 = getelementptr inbounds %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %23, i32 0, i32 1
  %25 = load i32, i32* %n.addr
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %tmp.v2
  %27 = load i64, i64* %tmp.v2
  %28 = call %Token* @"().438"(%"Vector[Token]"* %24, i64 %27)
  call void @ctor.190(%Token* %22, %Token* %28)
  ret void

if_else:                                          ; preds = %if_block
  %29 = load %Token*, %Token** %_result.addr
  call void @ctor.162(%Token* %29)
  ret void

if_end:                                           ; preds = %dumy_block3, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block3:                                      ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal %Token* @"().438"(%"Vector[Token]"* %this, i64 %index) #4 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Token]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"RawPtr[Token]", %"RawPtr[Token]"* %2
  %4 = load i64, i64* %index.addr
  call void @advance.205(%"RawPtr[Token]"* %"$tmpC", %"RawPtr[Token]" %3, i64 %4)
  %5 = load %"RawPtr[Token]", %"RawPtr[Token]"* %"$tmpC"
  %6 = call %Token* @value.209(%"RawPtr[Token]" %5)
  ret %Token* %6
}

; Function Attrs: inlinehint nounwind
define internal void @parseLambdaExpr(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %closureParams = alloca %Node
  %formals = alloca %Node
  %retType = alloca %Node
  %body = alloca %Node
  %bodyExp = alloca %Node
  %tmp.v2 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpC3" = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC5" = alloca %Location
  %"$tmpC6" = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 29)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 6)
  %6 = load %TokenType, %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseClosureParams(%Node* %closureParams, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9)
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseTypeNode(%Node* %retType, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  call void @ctor.436(%Node* %body)
  call void @ctor.436(%Node* %bodyExp)
  br label %if_block

if_block:                                         ; preds = %code
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v2, i32 36)
  %12 = load %TokenType, %TokenType* %tmp.v2
  %13 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br i1 %13, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true)
  call void @"=.435"(%Node* %bodyExp, %Node* %"$tmpC")
  br label %if_end

if_else:                                          ; preds = %if_block
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFunBody(%Node* %"$tmpC3", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15)
  call void @"=.435"(%Node* %body, %Node* %"$tmpC3")
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v4, i32 30)
  %17 = load %TokenType, %TokenType* %tmp.v4
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  %19 = load %Node*, %Node** %_result.addr
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC6", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20)
  call void @span(%Location* %"$tmpC5", %Location* %loc, %Location* %"$tmpC6")
  %21 = load %Node, %Node* %closureParams
  %22 = load %Node, %Node* %formals
  %23 = load %Node, %Node* %retType
  %24 = load %Node, %Node* %body
  %25 = load %Node, %Node* %bodyExp
  %26 = call %Node @comp_parser_mkLambdaExpr(%Location* %"$tmpC5", %Node %21, %Node %22, %Node %23, %Node %24, %Node %25)
  store %Node %26, %Node* %"$tmpForRef"
  call void @ctor.434(%Node* %19, %Node* %"$tmpForRef")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseClosureParams(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v6 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor.436(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 34)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 25)
  %5 = load %TokenType, %TokenType* %tmp.v1
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  br label %if_block2

if_end:                                           ; preds = %if_end4, %if_block
  %7 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %7, %Node* %res)
  ret void

if_block2:                                        ; preds = %if_then
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v5, i32 37)
  %9 = load %TokenType, %TokenType* %tmp.v5
  %10 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then3, label %if_end4

if_then3:                                         ; preds = %if_block2
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdListNode(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11)
  call void @"=.435"(%Node* %res, %Node* %"$tmpC")
  br label %if_end4

if_end4:                                          ; preds = %if_then3, %if_block2
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v6, i32 26)
  %13 = load %TokenType, %TokenType* %tmp.v6
  %14 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, %TokenType %13)
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdListNode(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %id = alloca %String
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v = alloca %TokenType
  %"$tmpC1" = alloca %String
  %"$tmpForRef2" = alloca %Node
  %"$tmpC3" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor.436(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %Node, %Node* %res
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %Token, %Token* %4, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %6 = load %StringRef, %StringRef* %"$tmpC"
  %7 = call %Node @comp_parser_mkIdentifier(%Location* %5, %StringRef %6)
  %8 = call %Node @comp_parser_addToNodeList(%Node %2, %Node %7)
  store %Node %8, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 33)
  %10 = load %TokenType, %TokenType* %tmp.v
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12)
  %13 = call %String* @"=.256"(%String* %id, %String* %"$tmpC1")
  call void @dtor.229(%String* %"$tmpC1")
  %14 = load %Node, %Node* %res
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 1
  %17 = getelementptr inbounds %Token, %Token* %16, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC3", %String* %id)
  %18 = load %StringRef, %StringRef* %"$tmpC3"
  %19 = call %Node @comp_parser_mkIdentifier(%Location* %17, %StringRef %18)
  %20 = call %Node @comp_parser_addToNodeList(%Node %14, %Node %19)
  store %Node %20, %Node* %"$tmpForRef2"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef2")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %21 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %21, %Node* %res)
  call void @dtor.229(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.229(%String* %id)
  ret void
}

declare %Node @comp_parser_addToNodeList(%Node, %Node)

; Function Attrs: inlinehint nounwind
define internal void @parseFormalsOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %tmp.v4 = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %tmp.v6 = alloca %TokenType
  %tmp.v10 = alloca %TokenType
  %loc = alloca %Location
  %ids = alloca %"Vector[LocString]"
  %"$tmpC" = alloca %Location
  %"$tmpC11" = alloca %Location
  %tmp.StringRef = alloca %StringRef
  %tmp.v12 = alloca %Node
  br label %code

code:                                             ; preds = %0
  call void @ctor.436(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 29)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  br label %if_block1

if_else:                                          ; preds = %if_block
  br label %if_block7

if_end:                                           ; preds = %if_end9, %while_end
  %4 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %4, %Node* %res)
  ret void

if_block1:                                        ; preds = %if_then
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v4, i32 30)
  %6 = load %TokenType, %TokenType* %tmp.v4
  %7 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %8 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %8, %Node* %res)
  ret void

if_end3:                                          ; preds = %dumy_block, %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %Node* %res)
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end3

while_block:                                      ; preds = %while_step, %if_end3
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v5, i32 33)
  %11 = load %TokenType, %TokenType* %tmp.v5
  %12 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %TokenType %11)
  br i1 %12, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, %Node* %res)
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v6, i32 30)
  %15 = load %TokenType, %TokenType* %tmp.v6
  %16 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  br label %if_end

if_block7:                                        ; preds = %if_else
  %17 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v10, i32 37)
  %18 = load %TokenType, %TokenType* %tmp.v10
  %19 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %17, %TokenType %18)
  br i1 %19, label %if_then8, label %if_end9

if_then8:                                         ; preds = %if_block7
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20)
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdList(%"Vector[LocString]"* %ids, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21)
  %22 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC11", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %22)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC11")
  %23 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %24 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.94, i32 0, i32 0), i8** %23
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.94, i32 0, i32 7), i8** %24
  %25 = load %StringRef, %StringRef* %tmp.StringRef
  %26 = call %Node @comp_parser_mkIdentifier(%Location* %"$tmpC", %StringRef %25)
  call void @ctor.436(%Node* %tmp.v12)
  %27 = load %Node, %Node* %tmp.v12
  call void @createFormals(%"Vector[LocString]"* %ids, %Node %26, %Node %27, i32 2, %Node* %res)
  call void @dtor.465(%"Vector[LocString]"* %ids)
  br label %if_end9

if_end9:                                          ; preds = %if_then8, %if_block7
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseFormal(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %ids = alloca %"Vector[LocString]"
  %tmp.v = alloca %TokenType
  %typeNode = alloca %Node
  %init = alloca %Node
  %tmp.v1 = alloca %TokenType
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdList(%"Vector[LocString]"* %ids, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 31)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %typeNode, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 false)
  call void @ctor.436(%Node* %init)
  br label %if_block

if_block:                                         ; preds = %code
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 36)
  %7 = load %TokenType, %TokenType* %tmp.v1
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 true)
  call void @"=.435"(%Node* %init, %Node* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %10 = load %Node, %Node* %typeNode
  %11 = load %Node, %Node* %init
  %12 = load %Node*, %Node** %res.addr
  call void @createFormals(%"Vector[LocString]"* %ids, %Node %10, %Node %11, i32 2, %Node* %12)
  call void @dtor.465(%"Vector[LocString]"* %ids)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdList(%"Vector[LocString]"* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %_result, %"Vector[LocString]"** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %"Vector[LocString]"
  %id = alloca %String
  %tmp.v = alloca %LocString
  %"$tmpC" = alloca %"Tuple[Location, String]"
  %tmp.v1 = alloca %TokenType
  %"$tmpC2" = alloca %String
  %tmp.v3 = alloca %LocString
  %"$tmpC4" = alloca %"Tuple[Location, String]"
  br label %code

code:                                             ; preds = %0
  call void @ctor.439(%"Vector[LocString]"* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %3 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, i32 0, i32 1
  %4 = getelementptr inbounds %Token, %Token* %3, i32 0, i32 0
  %5 = load %Location, %Location* %4
  %6 = load %String, %String* %id
  call void @"~"(%"Tuple[Location, String]"* %"$tmpC", %Location %5, %String %6)
  %7 = load %"Tuple[Location, String]", %"Tuple[Location, String]"* %"$tmpC"
  call void @ctor.457(%LocString* %tmp.v, %"Tuple[Location, String]" %7)
  call void @"+=.441"(%"Vector[LocString]"* %res, %LocString* %tmp.v)
  call void @dtor.459(%LocString* %tmp.v)
  call void @dtor.460(%"Tuple[Location, String]"* %"$tmpC")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 33)
  %9 = load %TokenType, %TokenType* %tmp.v1
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11)
  %12 = call %String* @"=.256"(%String* %id, %String* %"$tmpC2")
  call void @dtor.229(%String* %"$tmpC2")
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %14 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 1
  %15 = getelementptr inbounds %Token, %Token* %14, i32 0, i32 0
  %16 = load %Location, %Location* %15
  %17 = load %String, %String* %id
  call void @"~"(%"Tuple[Location, String]"* %"$tmpC4", %Location %16, %String %17)
  %18 = load %"Tuple[Location, String]", %"Tuple[Location, String]"* %"$tmpC4"
  call void @ctor.457(%LocString* %tmp.v3, %"Tuple[Location, String]" %18)
  call void @"+=.441"(%"Vector[LocString]"* %res, %LocString* %tmp.v3)
  call void @dtor.459(%LocString* %tmp.v3)
  call void @dtor.460(%"Tuple[Location, String]"* %"$tmpC4")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %19 = load %"Vector[LocString]"*, %"Vector[LocString]"** %_result.addr
  call void @ctor.461(%"Vector[LocString]"* %19, %"Vector[LocString]"* %res)
  call void @dtor.229(%String* %id)
  call void @dtor.465(%"Vector[LocString]"* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.229(%String* %id)
  call void @dtor.465(%"Vector[LocString]"* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.439(%"Vector[LocString]"* %this) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor.440(%"RawPtr[LocString]"* %2)
  %3 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %4 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %3, i32 0, i32 1
  call void @ctor.440(%"RawPtr[LocString]"* %4)
  %5 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %6 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %5, i32 0, i32 2
  call void @ctor.440(%"RawPtr[LocString]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.440(%"RawPtr[LocString]"* %this) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %1, i32 0, i32 0
  store %LocString* null, %LocString** %2
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+=.441"(%"Vector[LocString]"* %this, %LocString* %value) #4 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %value.addr = alloca %LocString*
  store %LocString* %value, %LocString** %value.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = load %LocString*, %LocString** %value.addr
  call void @pushBack.442(%"Vector[LocString]"* %1, %LocString* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @pushBack.442(%"Vector[LocString]"* %this, %LocString* %value) #4 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %value.addr = alloca %LocString*
  store %LocString* %value, %LocString** %value.addr
  %t = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v5 = alloca i64
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %1, i32 0, i32 1
  %3 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %4 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %3, i32 0, i32 2
  %5 = call i1 @"==.443"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %4)
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  store i64 2, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  %7 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %8 = call i64 @capacity.444(%"Vector[LocString]"* %7)
  %9 = mul i64 %6, %8
  store i64 %9, i64* %t
  br label %if_block1

if_end:                                           ; preds = %if_end3, %if_block
  %10 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %11 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %10, i32 0, i32 1
  %12 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %11
  %13 = call %LocString* @value.455(%"RawPtr[LocString]" %12)
  %14 = load %LocString*, %LocString** %value.addr
  call void @ctor.453(%LocString* %13, %LocString* %14)
  %15 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %16 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %15, i32 0, i32 1
  %17 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %18 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %17, i32 0, i32 1
  %19 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %18
  call void @advance.456(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]" %19)
  call void @"=.450"(%"RawPtr[LocString]"* %16, %"RawPtr[LocString]"* %"$tmpC")
  ret void

if_block1:                                        ; preds = %if_then
  %20 = load i64, i64* %t
  store i64 2, i64* %tmp.v4
  %21 = load i64, i64* %tmp.v4
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 2, i64* %tmp.v5
  %23 = load i64, i64* %tmp.v5
  store i64 %23, i64* %t
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %24 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %25 = load i64, i64* %t
  call void @reserve.447(%"Vector[LocString]"* %24, i64 %25)
  br label %if_end
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.443"(%"RawPtr[LocString]"* %this, %"RawPtr[LocString]"* %other) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %other.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %other, %"RawPtr[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString*, %LocString** %2
  %4 = bitcast %LocString* %3 to i8*
  %5 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %other.addr
  %6 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %5, i32 0, i32 0
  %7 = load %LocString*, %LocString** %6
  %8 = bitcast %LocString* %7 to i8*
  %9 = call i1 @implOpRefEQ(i8* %4, i8* %8)
  ret i1 %9
}

; Function Attrs: inlinehint nounwind
define internal i64 @capacity.444(%"Vector[LocString]"* %this) #4 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %1, i32 0, i32 2
  %3 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %2
  %4 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %5 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %5
  %7 = call i64 @diff.445(%"RawPtr[LocString]" %3, %"RawPtr[LocString]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i64 @diff.445(%"RawPtr[LocString]" %this, %"RawPtr[LocString]" %other) #4 {
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  %other.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %other, %"RawPtr[LocString]"* %other.addr
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %this.addr
  %2 = call i8* @bytePtr.446(%"RawPtr[LocString]" %1)
  %3 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %other.addr
  %4 = call i8* @bytePtr.446(%"RawPtr[LocString]" %3)
  %5 = call i64 @ptrDiff(i8* %2, i8* %4)
  store i64 48, i64* %tmp.v1
  %6 = load i64, i64* %tmp.v1
  %7 = sdiv i64 %5, %6
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal i8* @bytePtr.446(%"RawPtr[LocString]" %this) #4 {
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %this.addr, i32 0, i32 0
  %2 = load %LocString*, %LocString** %1
  %3 = bitcast %LocString* %2 to i8*
  ret i8* %3
}

; Function Attrs: inlinehint nounwind
define internal void @reserve.447(%"Vector[LocString]"* %this, i64 %n) #4 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %curCapacity = alloca i64
  %tmp.v = alloca i64
  %tmp.v4 = alloca i64
  %tmp.v8 = alloca double
  %tmp.v9 = alloca double
  %tmp.v10 = alloca i64
  %tmp.v11 = alloca double
  %curSize = alloca i64
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %"$tmpC12" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = call i64 @capacity.444(%"Vector[LocString]"* %1)
  store i64 %2, i64* %curCapacity
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64, i64* %n.addr
  %4 = load i64, i64* %curCapacity
  %5 = icmp sle i64 %3, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64, i64* %n.addr
  store i64 8, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = icmp slt i64 %6, %7
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  store i64 8, i64* %tmp.v4
  %9 = load i64, i64* %tmp.v4
  store i64 %9, i64* %n.addr
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  br label %if_block5

if_block5:                                        ; preds = %if_end3
  %10 = load i64, i64* %n.addr
  %11 = sitofp i64 %10 to double
  store double %11, double* %tmp.v8
  %12 = load double, double* %tmp.v8
  %13 = load i64, i64* %curCapacity
  %14 = sitofp i64 %13 to double
  store double %14, double* %tmp.v9
  %15 = load double, double* %tmp.v9
  %16 = call double @_Double_opMul(double 2.000000e+00, double %15)
  %17 = call i1 @_Double_opLT(double %12, double %16)
  br i1 %17, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  %18 = load i64, i64* %curCapacity
  %19 = sitofp i64 %18 to double
  store double %19, double* %tmp.v11
  %20 = load double, double* %tmp.v11
  %21 = call double @_Double_opMul(double 2.000000e+00, double %20)
  %22 = fptoui double %21 to i64
  store i64 %22, i64* %tmp.v10
  %23 = load i64, i64* %tmp.v10
  store i64 %23, i64* %n.addr
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %if_block5
  %24 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %25 = call i64 @size.448(%"Vector[LocString]"* %24)
  store i64 %25, i64* %curSize
  %26 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %27 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %26, i32 0, i32 0
  %28 = load i64, i64* %n.addr
  call void @reallocPtr.449(%"RawPtr[LocString]"* %27, i64 %28)
  %29 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %30 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %29, i32 0, i32 1
  %31 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %32 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %31, i32 0, i32 0
  %33 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %32
  %34 = load i64, i64* %curSize
  call void @advance.451(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]" %33, i64 %34)
  call void @"=.450"(%"RawPtr[LocString]"* %30, %"RawPtr[LocString]"* %"$tmpC")
  %35 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %36 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %35, i32 0, i32 2
  %37 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %38 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %37, i32 0, i32 0
  %39 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %38
  %40 = load i64, i64* %n.addr
  call void @advance.451(%"RawPtr[LocString]"* %"$tmpC12", %"RawPtr[LocString]" %39, i64 %40)
  call void @"=.450"(%"RawPtr[LocString]"* %36, %"RawPtr[LocString]"* %"$tmpC12")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i64 @size.448(%"Vector[LocString]"* %this) #4 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %1, i32 0, i32 1
  %3 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %2
  %4 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %5 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %4, i32 0, i32 0
  %6 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %5
  %7 = call i64 @diff.445(%"RawPtr[LocString]" %3, %"RawPtr[LocString]" %6)
  store i64 %7, i64* %tmp.v
  %8 = load i64, i64* %tmp.v
  ret i64 %8
}

; Function Attrs: inlinehint nounwind
define internal void @reallocPtr.449(%"RawPtr[LocString]"* %this, i64 %n) #4 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %this.addr
  %2 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %1
  %3 = call i8* @bytePtr.446(%"RawPtr[LocString]" %2)
  %4 = load i64, i64* %n.addr
  %5 = mul i64 %4, 48
  %6 = call i8* @realloc(i8* %3, i64 %5)
  %7 = bitcast i8* %6 to %LocString*
  %8 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %this.addr
  %9 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %8, i32 0, i32 0
  store %LocString* %7, %LocString** %9
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.450"(%"RawPtr[LocString]"* %this, %"RawPtr[LocString]"* %other) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %other.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %other, %"RawPtr[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString*, %LocString** %2
  %4 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %4, i32 0, i32 0
  store %LocString* %3, %LocString** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @advance.451(%"RawPtr[LocString]"* sret %_result, %"RawPtr[LocString]" %this, i64 %n) #4 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %_result.addr
  %2 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %this.addr
  %3 = call i8* @bytePtr.446(%"RawPtr[LocString]" %2)
  %4 = load i64, i64* %n.addr
  %5 = mul i64 %4, 48
  %6 = call i8* @ptrAdd(i8* %3, i64 %5)
  call void @ctor.452(%"RawPtr[LocString]"* %1, i8* %6)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.452(%"RawPtr[LocString]"* %this, i8* %byteRef) #4 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %byteRef.addr = alloca i8*
  store i8* %byteRef, i8** %byteRef.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %this.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %1, i32 0, i32 0
  store %LocString* null, %LocString** %2
  %3 = load i8*, i8** %byteRef.addr
  %4 = bitcast i8* %3 to %LocString*
  %5 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %this.addr
  %6 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %5, i32 0, i32 0
  store %LocString* %4, %LocString** %6
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.453(%LocString* %this, %LocString* %other) #3 {
  %this.addr = alloca %LocString*
  store %LocString* %this, %LocString** %this.addr
  %other.addr = alloca %LocString*
  store %LocString* %other, %LocString** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString*, %LocString** %this.addr
  %2 = getelementptr inbounds %LocString, %LocString* %1, i32 0, i32 0
  %3 = load %LocString*, %LocString** %other.addr
  %4 = getelementptr inbounds %LocString, %LocString* %3, i32 0, i32 0
  call void @ctor.454(%"Tuple[Location, String]"* %2, %"Tuple[Location, String]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.454(%"Tuple[Location, String]"* %this, %"Tuple[Location, String]"* %other) #3 {
  %this.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %this, %"Tuple[Location, String]"** %this.addr
  %other.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %other, %"Tuple[Location, String]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %2 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %1, i32 0, i32 0
  %3 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %other.addr
  %4 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %3, i32 0, i32 0
  call void @ctor.177(%Location* %2, %Location* %4)
  %5 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %6 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %5, i32 0, i32 1
  %7 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %other.addr
  %8 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %7, i32 0, i32 1
  call void @ctor.192(%String* %6, %String* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal %LocString* @value.455(%"RawPtr[LocString]" %this) #4 {
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %this.addr, i32 0, i32 0
  %2 = load %LocString*, %LocString** %1
  ret %LocString* %2
}

; Function Attrs: inlinehint nounwind
define internal void @advance.456(%"RawPtr[LocString]"* sret %_result, %"RawPtr[LocString]" %this) #4 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %_result.addr
  %2 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %this.addr
  %3 = call i8* @bytePtr.446(%"RawPtr[LocString]" %2)
  %4 = call i8* @ptrAdd(i8* %3, i64 48)
  call void @ctor.452(%"RawPtr[LocString]"* %1, i8* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.457(%LocString* %this, %"Tuple[Location, String]" %fdata) #3 {
  %this.addr = alloca %LocString*
  store %LocString* %this, %LocString** %this.addr
  %fdata.addr = alloca %"Tuple[Location, String]"
  store %"Tuple[Location, String]" %fdata, %"Tuple[Location, String]"* %fdata.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString*, %LocString** %this.addr
  %2 = getelementptr inbounds %LocString, %LocString* %1, i32 0, i32 0
  call void @ctor.454(%"Tuple[Location, String]"* %2, %"Tuple[Location, String]"* %fdata.addr)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"~"(%"Tuple[Location, String]"* sret %_result, %Location %v1, %String %v2) #4 {
  %_result.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %_result, %"Tuple[Location, String]"** %_result.addr
  %v1.addr = alloca %Location
  store %Location %v1, %Location* %v1.addr
  %v2.addr = alloca %String
  store %String %v2, %String* %v2.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %_result.addr
  %2 = load %Location, %Location* %v1.addr
  %3 = load %String, %String* %v2.addr
  call void @mkTuple(%"Tuple[Location, String]"* %1, %Location %2, %String %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkTuple(%"Tuple[Location, String]"* sret %_result, %Location %v1, %String %v2) #4 {
  %_result.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %_result, %"Tuple[Location, String]"** %_result.addr
  %v1.addr = alloca %Location
  store %Location %v1, %Location* %v1.addr
  %v2.addr = alloca %String
  store %String %v2, %String* %v2.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %_result.addr
  %2 = load %Location, %Location* %v1.addr
  %3 = load %String, %String* %v2.addr
  call void @ctor.458(%"Tuple[Location, String]"* %1, %Location %2, %String %3)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.458(%"Tuple[Location, String]"* %this, %Location %fv1, %String %fv2) #3 {
  %this.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %this, %"Tuple[Location, String]"** %this.addr
  %fv1.addr = alloca %Location
  store %Location %fv1, %Location* %fv1.addr
  %fv2.addr = alloca %String
  store %String %fv2, %String* %fv2.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %2 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %1, i32 0, i32 0
  call void @ctor.177(%Location* %2, %Location* %fv1.addr)
  %3 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %4 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %3, i32 0, i32 1
  call void @ctor.192(%String* %4, %String* %fv2.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.459(%LocString* %this) #3 {
  %this.addr = alloca %LocString*
  store %LocString* %this, %LocString** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString*, %LocString** %this.addr
  %2 = getelementptr inbounds %LocString, %LocString* %1, i32 0, i32 0
  call void @dtor.460(%"Tuple[Location, String]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.460(%"Tuple[Location, String]"* %this) #3 {
  %this.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %this, %"Tuple[Location, String]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %2 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %1, i32 0, i32 1
  call void @dtor.229(%String* %2)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.461(%"Vector[LocString]"* %this, %"Vector[LocString]"* %other) #4 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  %size = alloca i64
  %"$tmpC" = alloca %"RawPtr[LocString]"
  %"$tmpC1" = alloca %"RawPtr[LocString]"
  %dst = alloca %"RawPtr[LocString]"
  %src = alloca %"RawPtr[LocString]"
  %"$tmpC2" = alloca %"RawPtr[LocString]"
  %"$tmpC3" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor.440(%"RawPtr[LocString]"* %2)
  %3 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %4 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %3, i32 0, i32 1
  call void @ctor.440(%"RawPtr[LocString]"* %4)
  %5 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %6 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %5, i32 0, i32 2
  call void @ctor.440(%"RawPtr[LocString]"* %6)
  %7 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %8 = call i64 @size.448(%"Vector[LocString]"* %7)
  store i64 %8, i64* %size
  %9 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %10 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %9, i32 0, i32 0
  %11 = load i64, i64* %size
  call void @allocRawPtr.462(%"RawPtr[LocString]"* %"$tmpC", i64 %11)
  call void @"=.450"(%"RawPtr[LocString]"* %10, %"RawPtr[LocString]"* %"$tmpC")
  %12 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %13 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %12, i32 0, i32 1
  %14 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %15 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %14, i32 0, i32 0
  %16 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %15
  %17 = load i64, i64* %size
  call void @advance.451(%"RawPtr[LocString]"* %"$tmpC1", %"RawPtr[LocString]" %16, i64 %17)
  call void @"=.450"(%"RawPtr[LocString]"* %13, %"RawPtr[LocString]"* %"$tmpC1")
  %18 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %19 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %18, i32 0, i32 2
  %20 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %21 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %20, i32 0, i32 1
  call void @"=.450"(%"RawPtr[LocString]"* %19, %"RawPtr[LocString]"* %21)
  %22 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %23 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %22, i32 0, i32 0
  call void @ctor.464(%"RawPtr[LocString]"* %dst, %"RawPtr[LocString]"* %23)
  %24 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %25 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %24, i32 0, i32 0
  call void @ctor.464(%"RawPtr[LocString]"* %src, %"RawPtr[LocString]"* %25)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %26 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %27 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %26, i32 0, i32 1
  %28 = call i1 @"==.443"(%"RawPtr[LocString]"* %dst, %"RawPtr[LocString]"* %27)
  %29 = xor i1 true, %28
  br i1 %29, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %30 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %dst
  %31 = call %LocString* @value.455(%"RawPtr[LocString]" %30)
  %32 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %src
  %33 = call %LocString* @value.455(%"RawPtr[LocString]" %32)
  call void @ctor.453(%LocString* %31, %LocString* %33)
  %34 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %dst
  call void @advance.456(%"RawPtr[LocString]"* %"$tmpC2", %"RawPtr[LocString]" %34)
  call void @"=.450"(%"RawPtr[LocString]"* %dst, %"RawPtr[LocString]"* %"$tmpC2")
  %35 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %src
  call void @advance.456(%"RawPtr[LocString]"* %"$tmpC3", %"RawPtr[LocString]" %35)
  call void @"=.450"(%"RawPtr[LocString]"* %src, %"RawPtr[LocString]"* %"$tmpC3")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @allocRawPtr.462(%"RawPtr[LocString]"* sret %_result, i64 %num) #4 {
  %_result.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %_result, %"RawPtr[LocString]"** %_result.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %_result.addr
  %2 = load i64, i64* %num.addr
  %3 = mul i64 %2, 48
  %4 = call i8* @malloc(i64 %3)
  %5 = bitcast i8* %4 to %LocString*
  call void @ctor.463(%"RawPtr[LocString]"* %1, %LocString* %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.463(%"RawPtr[LocString]"* %this, %LocString* %f_ptr) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %f_ptr.addr = alloca %LocString*
  store %LocString* %f_ptr, %LocString** %f_ptr.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString*, %LocString** %f_ptr.addr
  %2 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %this.addr
  %3 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %2, i32 0, i32 0
  store %LocString* %1, %LocString** %3
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.464(%"RawPtr[LocString]"* %this, %"RawPtr[LocString]"* %other) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  %other.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %other, %"RawPtr[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %other.addr
  %2 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %1, i32 0, i32 0
  %3 = load %LocString*, %LocString** %2
  %4 = load %"RawPtr[LocString]"*, %"RawPtr[LocString]"** %this.addr
  %5 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %4, i32 0, i32 0
  store %LocString* %3, %LocString** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @dtor.465(%"Vector[LocString]"* %this) #4 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %p = alloca %"RawPtr[LocString]"
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %1, i32 0, i32 0
  call void @ctor.464(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]"* %2)
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %3 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %4 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %3, i32 0, i32 1
  %5 = call i1 @"==.443"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]"* %4)
  %6 = xor i1 true, %5
  br i1 %6, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %7 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %p
  %8 = call %LocString* @value.455(%"RawPtr[LocString]" %7)
  call void @dtor.459(%LocString* %8)
  br label %while_step

while_step:                                       ; preds = %while_body
  %9 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %p
  call void @advance.456(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]" %9)
  call void @"=.450"(%"RawPtr[LocString]"* %p, %"RawPtr[LocString]"* %"$tmpC")
  br label %while_block

while_end:                                        ; preds = %while_block
  %10 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %11 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %10, i32 0, i32 0
  %12 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %11
  call void @freePtr.466(%"RawPtr[LocString]" %12)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @freePtr.466(%"RawPtr[LocString]" %this) #4 {
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %this.addr
  %2 = call i1 @isSet.467(%"RawPtr[LocString]" %1)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %this.addr
  %4 = call i8* @bytePtr.446(%"RawPtr[LocString]" %3)
  call void @free(i8* %4)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet.467(%"RawPtr[LocString]" %this) #4 {
  %this.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %this, %"RawPtr[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"RawPtr[LocString]", %"RawPtr[LocString]"* %this.addr, i32 0, i32 0
  %2 = load %LocString*, %LocString** %1
  %3 = bitcast %LocString* %2 to i8*
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @createFormals(%"Vector[LocString]"* %ids, %Node %typeNode, %Node %init, i32 %kind, %Node* %res) #4 {
  %ids.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %ids, %"Vector[LocString]"** %ids.addr
  %typeNode.addr = alloca %Node
  store %Node %typeNode, %Node* %typeNode.addr
  %init.addr = alloca %Node
  store %Node %init, %Node* %init.addr
  %kind.addr = alloca i32
  store i32 %kind, i32* %kind.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %"$rangeVar" = alloca %"ContiguousMemoryRange[LocString]"
  %id = alloca %LocString*
  %v = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %"$tmpForRef1" = alloca %Node
  %"$rangeVar6" = alloca %"ContiguousMemoryRange[LocString]"
  %id11 = alloca %LocString*
  %v12 = alloca %Node
  %"$tmpForRef13" = alloca %Node
  %"$tmpC14" = alloca %StringRef
  %"$tmpForRef15" = alloca %Node
  %"$rangeVar16" = alloca %"ContiguousMemoryRange[LocString]"
  %id21 = alloca %LocString*
  %p = alloca %Node
  %"$tmpForRef22" = alloca %Node
  %"$tmpC23" = alloca %StringRef
  %"$tmpForRef24" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load i32, i32* %kind.addr
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %3 = load %"Vector[LocString]"*, %"Vector[LocString]"** %ids.addr
  call void @all.468(%"ContiguousMemoryRange[LocString]"* %"$rangeVar", %"Vector[LocString]"* %3)
  br label %while_block

if_else:                                          ; preds = %if_block
  br label %if_block2

if_end:                                           ; preds = %if_end5, %while_end
  ret void

while_block:                                      ; preds = %while_step, %if_then
  %4 = load %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %"$rangeVar"
  %5 = call i1 @isEmpty.470(%"ContiguousMemoryRange[LocString]" %4)
  %6 = xor i1 true, %5
  br i1 %6, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %7 = load %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %"$rangeVar"
  %8 = call %LocString* @front.471(%"ContiguousMemoryRange[LocString]" %7)
  store %LocString* %8, %LocString** %id
  %9 = load %LocString*, %LocString** %id
  %10 = getelementptr inbounds %LocString, %LocString* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %10, i32 0, i32 0
  %12 = load %LocString*, %LocString** %id
  %13 = getelementptr inbounds %LocString, %LocString* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %13, i32 0, i32 1
  call void @asStringRef(%StringRef* %"$tmpC", %String* %14)
  %15 = load %StringRef, %StringRef* %"$tmpC"
  %16 = load %Node, %Node* %typeNode.addr
  %17 = load %Node, %Node* %init.addr
  %18 = call %Node @comp_parser_mkLet(%Location* %11, %StringRef %15, %Node %16, %Node %17)
  store %Node %18, %Node* %"$tmpForRef"
  call void @ctor.434(%Node* %v, %Node* %"$tmpForRef")
  %19 = load %Node*, %Node** %res.addr
  %20 = load %Node*, %Node** %res.addr
  %21 = load %Node, %Node* %20
  %22 = load %Node, %Node* %v
  %23 = call %Node @comp_parser_addToNodeList(%Node %21, %Node %22)
  store %Node %23, %Node* %"$tmpForRef1"
  call void @"=.435"(%Node* %19, %Node* %"$tmpForRef1")
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront.472(%"ContiguousMemoryRange[LocString]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %if_end

if_block2:                                        ; preds = %if_else
  %24 = load i32, i32* %kind.addr
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %if_then3, label %if_else4

if_then3:                                         ; preds = %if_block2
  %26 = load %"Vector[LocString]"*, %"Vector[LocString]"** %ids.addr
  call void @all.468(%"ContiguousMemoryRange[LocString]"* %"$rangeVar6", %"Vector[LocString]"* %26)
  br label %while_block7

if_else4:                                         ; preds = %if_block2
  %27 = load %"Vector[LocString]"*, %"Vector[LocString]"** %ids.addr
  call void @all.468(%"ContiguousMemoryRange[LocString]"* %"$rangeVar16", %"Vector[LocString]"* %27)
  br label %while_block17

if_end5:                                          ; preds = %while_end20, %while_end10
  br label %if_end

while_block7:                                     ; preds = %while_step9, %if_then3
  %28 = load %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %"$rangeVar6"
  %29 = call i1 @isEmpty.470(%"ContiguousMemoryRange[LocString]" %28)
  %30 = xor i1 true, %29
  br i1 %30, label %while_body8, label %while_end10

while_body8:                                      ; preds = %while_block7
  %31 = load %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %"$rangeVar6"
  %32 = call %LocString* @front.471(%"ContiguousMemoryRange[LocString]" %31)
  store %LocString* %32, %LocString** %id11
  %33 = load %LocString*, %LocString** %id11
  %34 = getelementptr inbounds %LocString, %LocString* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %34, i32 0, i32 0
  %36 = load %LocString*, %LocString** %id11
  %37 = getelementptr inbounds %LocString, %LocString* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %37, i32 0, i32 1
  call void @asStringRef(%StringRef* %"$tmpC14", %String* %38)
  %39 = load %StringRef, %StringRef* %"$tmpC14"
  %40 = load %Node, %Node* %typeNode.addr
  %41 = load %Node, %Node* %init.addr
  %42 = call %Node @comp_parser_mkVar(%Location* %35, %StringRef %39, %Node %40, %Node %41)
  store %Node %42, %Node* %"$tmpForRef13"
  call void @ctor.434(%Node* %v12, %Node* %"$tmpForRef13")
  %43 = load %Node*, %Node** %res.addr
  %44 = load %Node*, %Node** %res.addr
  %45 = load %Node, %Node* %44
  %46 = load %Node, %Node* %v12
  %47 = call %Node @comp_parser_addToNodeList(%Node %45, %Node %46)
  store %Node %47, %Node* %"$tmpForRef15"
  call void @"=.435"(%Node* %43, %Node* %"$tmpForRef15")
  br label %while_step9

while_step9:                                      ; preds = %while_body8
  call void @popFront.472(%"ContiguousMemoryRange[LocString]"* %"$rangeVar6")
  br label %while_block7

while_end10:                                      ; preds = %while_block7
  br label %if_end5

while_block17:                                    ; preds = %while_step19, %if_else4
  %48 = load %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %"$rangeVar16"
  %49 = call i1 @isEmpty.470(%"ContiguousMemoryRange[LocString]" %48)
  %50 = xor i1 true, %49
  br i1 %50, label %while_body18, label %while_end20

while_body18:                                     ; preds = %while_block17
  %51 = load %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %"$rangeVar16"
  %52 = call %LocString* @front.471(%"ContiguousMemoryRange[LocString]" %51)
  store %LocString* %52, %LocString** %id21
  %53 = load %LocString*, %LocString** %id21
  %54 = getelementptr inbounds %LocString, %LocString* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %54, i32 0, i32 0
  %56 = load %LocString*, %LocString** %id21
  %57 = getelementptr inbounds %LocString, %LocString* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %57, i32 0, i32 1
  call void @asStringRef(%StringRef* %"$tmpC23", %String* %58)
  %59 = load %StringRef, %StringRef* %"$tmpC23"
  %60 = load %Node, %Node* %typeNode.addr
  %61 = load %Node, %Node* %init.addr
  %62 = call %Node @comp_parser_mkParameter(%Location* %55, %StringRef %59, %Node %60, %Node %61)
  store %Node %62, %Node* %"$tmpForRef22"
  call void @ctor.434(%Node* %p, %Node* %"$tmpForRef22")
  %63 = load %Node*, %Node** %res.addr
  %64 = load %Node*, %Node** %res.addr
  %65 = load %Node, %Node* %64
  %66 = load %Node, %Node* %p
  %67 = call %Node @comp_parser_addToNodeList(%Node %65, %Node %66)
  store %Node %67, %Node* %"$tmpForRef24"
  call void @"=.435"(%Node* %63, %Node* %"$tmpForRef24")
  br label %while_step19

while_step19:                                     ; preds = %while_body18
  call void @popFront.472(%"ContiguousMemoryRange[LocString]"* %"$rangeVar16")
  br label %while_block17

while_end20:                                      ; preds = %while_block17
  br label %if_end5
}

; Function Attrs: inlinehint nounwind
define internal void @all.468(%"ContiguousMemoryRange[LocString]"* sret %_result, %"Vector[LocString]"* %this) #4 {
  %_result.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %_result, %"ContiguousMemoryRange[LocString]"** %_result.addr
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %_result.addr
  %2 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %3 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %2, i32 0, i32 0
  %4 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %3
  %5 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %6 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %5, i32 0, i32 1
  %7 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %6
  call void @ctor.469(%"ContiguousMemoryRange[LocString]"* %1, %"RawPtr[LocString]" %4, %"RawPtr[LocString]" %7)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.469(%"ContiguousMemoryRange[LocString]"* %this, %"RawPtr[LocString]" %f_begin, %"RawPtr[LocString]" %f_end) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"** %this.addr
  %f_begin.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %f_begin, %"RawPtr[LocString]"* %f_begin.addr
  %f_end.addr = alloca %"RawPtr[LocString]"
  store %"RawPtr[LocString]" %f_end, %"RawPtr[LocString]"* %f_end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  call void @ctor.464(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %f_begin.addr)
  %3 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 1
  call void @ctor.464(%"RawPtr[LocString]"* %4, %"RawPtr[LocString]"* %f_end.addr)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isEmpty.470(%"ContiguousMemoryRange[LocString]" %this) #4 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"
  store %"ContiguousMemoryRange[LocString]" %this, %"ContiguousMemoryRange[LocString]"* %this.addr
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %this.addr, i32 0, i32 1
  %2 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %1
  %3 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %this.addr, i32 0, i32 0
  %4 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %3
  %5 = call i64 @diff.445(%"RawPtr[LocString]" %2, %"RawPtr[LocString]" %4)
  store i64 0, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  %7 = icmp sle i64 %5, %6
  ret i1 %7
}

; Function Attrs: inlinehint nounwind
define internal %LocString* @front.471(%"ContiguousMemoryRange[LocString]" %this) #4 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"
  store %"ContiguousMemoryRange[LocString]" %this, %"ContiguousMemoryRange[LocString]"* %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %this.addr, i32 0, i32 0
  %2 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %1
  %3 = call %LocString* @value.455(%"RawPtr[LocString]" %2)
  ret %LocString* %3
}

declare %Node @comp_parser_mkLet(%Location*, %StringRef, %Node, %Node)

; Function Attrs: alwaysinline nounwind
define internal void @popFront.472(%"ContiguousMemoryRange[LocString]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"** %this.addr
  %"$tmpC" = alloca %"RawPtr[LocString]"
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  %5 = load %"RawPtr[LocString]", %"RawPtr[LocString]"* %4
  call void @advance.456(%"RawPtr[LocString]"* %"$tmpC", %"RawPtr[LocString]" %5)
  call void @"=.450"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %"$tmpC")
  ret void
}

declare %Node @comp_parser_mkVar(%Location*, %StringRef, %Node, %Node)

declare %Node @comp_parser_mkParameter(%Location*, %StringRef, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal void @parseTypeNode(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 31)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node*, %Node** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %4, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 false)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %6 = load %Node*, %Node** %_result.addr
  call void @ctor.436(%Node* %6)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseFunBody(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %res = alloca %Node
  %"$tmpC" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %"$tmpC4" = alloca %Token
  %tmp.StringRef5 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 32)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node*, %Node** %_result.addr
  call void @ctor.436(%Node* %4)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  call void @ctor.436(%Node* %res)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = call i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %Node* %res, i1 false)
  %7 = xor i1 true, %6
  br i1 %7, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %10 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.95, i32 0, i32 0), i8** %9
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.95, i32 0, i32 25), i8** %10
  %11 = load %StringRef, %StringRef* %tmp.StringRef
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC4", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %13)
  %14 = getelementptr inbounds %Token, %Token* %"$tmpC4", i32 0, i32 1
  %15 = load %TokenType, %TokenType* %14
  %16 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef5, i32 0, i32 0
  %17 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef5, i32 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.96, i32 0, i32 0), i8** %16
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.96, i32 0, i32 27), i8** %17
  %18 = load %StringRef, %StringRef* %tmp.StringRef5
  call void @toString.474(%String* %"$tmpC", %StringRef %11, %TokenType %15, %StringRef %18)
  call void @reportError.429(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %String* %"$tmpC")
  call void @dtor.229(%String* %"$tmpC")
  call void @dtor.228(%Token* %"$tmpC4")
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %19 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %19, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res, i1 %topLevel) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %Node
  %tmp.v2 = alloca %TokenType
  %s = alloca %Node
  %"$tmpForRef" = alloca %Node
  %tmp.v6 = alloca %TokenType
  %"$tmpForRef10" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC11" = alloca %Location
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 25)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %Node*, %Node** %res.addr
  call void @ctor.436(%Node* %tmp.v1)
  call void @"=.435"(%Node* %5, %Node* %tmp.v1)
  br label %while_block

if_end:                                           ; preds = %dumy_block12, %if_block
  ret i1 false

while_block:                                      ; preds = %while_step, %if_then
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v2, i32 26)
  %7 = load %TokenType, %TokenType* %tmp.v2
  %8 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  %9 = xor i1 true, %8
  br i1 %9, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %11 = load i1, i1* %topLevel.addr
  call void @parseStmt(%Node* %s, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 %11)
  br label %if_block3

while_step:                                       ; preds = %if_end5
  br label %while_block

while_end:                                        ; preds = %if_else, %cond.end
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v6, i32 26)
  %13 = load %TokenType, %TokenType* %tmp.v6
  %14 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, %TokenType %13)
  br label %if_block7

cond.true:                                        ; preds = %while_block
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 2
  %17 = load i1, i1* %16
  %18 = xor i1 true, %17
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %18, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

if_block3:                                        ; preds = %while_body
  %19 = load %Node, %Node* %s
  %20 = call i1 @isSet.473(%Node %19)
  br i1 %20, label %if_then4, label %if_else

if_then4:                                         ; preds = %if_block3
  %21 = load %Node*, %Node** %res.addr
  %22 = load %Node*, %Node** %res.addr
  %23 = load %Node, %Node* %22
  %24 = load %Node, %Node* %s
  %25 = call %Node @comp_parser_addToNodeList(%Node %23, %Node %24)
  store %Node %25, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %21, %Node* %"$tmpForRef")
  br label %if_end5

if_else:                                          ; preds = %if_block3
  br label %while_end

if_end5:                                          ; preds = %dumy_block, %if_then4
  br label %while_step

dumy_block:                                       ; No predecessors!
  br label %if_end5

if_block7:                                        ; preds = %while_end
  %26 = load i1, i1* %topLevel.addr
  %27 = xor i1 true, %26
  br i1 %27, label %if_then8, label %if_end9

if_then8:                                         ; preds = %if_block7
  %28 = load %Node*, %Node** %res.addr
  %29 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC11", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %29)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC11")
  %30 = load %Node*, %Node** %res.addr
  %31 = load %Node, %Node* %30
  %32 = call %Node @comp_parser_mkBlockStmt(%Location* %"$tmpC", %Node %31)
  store %Node %32, %Node* %"$tmpForRef10"
  call void @"=.435"(%Node* %28, %Node* %"$tmpForRef10")
  br label %if_end9

if_end9:                                          ; preds = %if_then8, %if_block7
  ret i1 true

dumy_block12:                                     ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @isSet.473(%Node %n) #4 {
  %n.addr = alloca %Node
  store %Node %n, %Node* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %Node, %Node* %n.addr, i32 0, i32 0
  %2 = getelementptr inbounds %UntypedPtr, %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = call i1 @implOpRefNE(i8* %3, i8* null)
  ret i1 %4
}

declare %Node @comp_parser_mkBlockStmt(%Location*, %Node)

; Function Attrs: inlinehint nounwind
define internal void @toString.474(%String* sret %_result, %StringRef %a1, %TokenType %a2, %StringRef %a3) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %a1.addr = alloca %StringRef
  store %StringRef %a1, %StringRef* %a1.addr
  %a2.addr = alloca %TokenType
  store %TokenType %a2, %TokenType* %a2.addr
  %a3.addr = alloca %StringRef
  store %StringRef %a3, %StringRef* %a3.addr
  %s = alloca %StringOutputStream
  br label %code

code:                                             ; preds = %0
  call void @ctor.295(%StringOutputStream* %s)
  %1 = call %StringOutputStream* @"<<"(%StringOutputStream* %s, %StringRef* %a1.addr)
  %2 = call %StringOutputStream* @"<<.431"(%StringOutputStream* %1, %TokenType* %a2.addr)
  %3 = call %StringOutputStream* @"<<"(%StringOutputStream* %2, %StringRef* %a3.addr)
  %4 = load %String*, %String** %_result.addr
  %5 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %s, i32 0, i32 0
  call void @ctor.192(%String* %4, %String* %5)
  call void @dtor.297(%StringOutputStream* %s)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.297(%StringOutputStream* %s)
  ret void
}

declare %Node @comp_parser_mkLambdaExpr(%Location*, %Node, %Node, %Node, %Node, %Node)

declare %Node @comp_parser_mkParenthesisExpr(%Node)

declare %Node @comp_parser_mkNullLiteral(%Location*)

declare %Node @comp_parser_mkBoolLiteral(%Location*, i1)

declare %Node @comp_parser_mkIntLiteral(%Location*, i32)

declare %Node @comp_parser_mkUIntLiteral(%Location*, i32)

declare %Node @comp_parser_mkLongLiteral(%Location*, i64)

declare %Node @comp_parser_mkULongLiteral(%Location*, i64)

declare %Node @comp_parser_mkFloatLiteral(%Location*, float)

declare %Node @comp_parser_mkDoubleLiteral(%Location*, double)

declare %Node @comp_parser_mkCharLiteral(%Location*, i8)

declare %Node @comp_parser_mkStringLiteral(%Location*, %StringRef)

; Function Attrs: inlinehint nounwind
define internal i1 @isNull(%Node %n) #4 {
  %n.addr = alloca %Node
  store %Node %n, %Node* %n.addr
  br label %code

code:                                             ; preds = %0
  %1 = getelementptr inbounds %Node, %Node* %n.addr, i32 0, i32 0
  %2 = getelementptr inbounds %UntypedPtr, %UntypedPtr* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = call i1 @implOpRefEQ(i8* %3, i8* null)
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal void @parseExprListOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %expr = alloca %Node
  %"$tmpForRef" = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpForRef1" = alloca %Node
  br label %code

code:                                             ; preds = %0
  call void @ctor.436(%Node* %res)
  call void @ctor.436(%Node* %expr)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = call i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %Node* %expr, i1 false)
  %3 = xor i1 true, %2
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %4, %Node* %res)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %Node, %Node* %res
  %6 = load %Node, %Node* %expr
  %7 = call %Node @comp_parser_addToNodeList(%Node %5, %Node %6)
  store %Node %7, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

dumy_block:                                       ; No predecessors!
  br label %if_end

while_block:                                      ; preds = %while_step, %if_end
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 33)
  %9 = load %TokenType, %TokenType* %tmp.v
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i1 true)
  call void @"=.435"(%Node* %expr, %Node* %"$tmpC")
  %12 = load %Node, %Node* %res
  %13 = load %Node, %Node* %expr
  %14 = call %Node @comp_parser_addToNodeList(%Node %12, %Node %13)
  store %Node %14, %Node* %"$tmpForRef1"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef1")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %15 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %15, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res, i1 %allowSemicolons) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %allowSemicolons.addr = alloca i1
  store i1 %allowSemicolons, i1* %allowSemicolons.addr
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = call i1 @nextIsExpr(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 true)
  br i1 %2, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %3 = load %Node*, %Node** %res.addr
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i1 true)
  call void @"=.435"(%Node* %3, %Node* %"$tmpC")
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %5 = load i1, i1* %allowSemicolons.addr
  br i1 %5, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @consumeSemis(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6)
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal i1 @nextIsExpr(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %t = alloca %TokenType
  %"$tmpC" = alloca %Token
  %tmp.v = alloca %TokenType
  %tmp.v40 = alloca %TokenType
  %tmp.v41 = alloca %TokenType
  %tmp.v42 = alloca %TokenType
  %tmp.v44 = alloca %TokenType
  %tmp.v46 = alloca %TokenType
  %tmp.v48 = alloca %TokenType
  %tmp.v50 = alloca %TokenType
  %tmp.v52 = alloca %TokenType
  %tmp.v54 = alloca %TokenType
  %tmp.v56 = alloca %TokenType
  %tmp.v58 = alloca %TokenType
  %tmp.v60 = alloca %TokenType
  %tmp.v62 = alloca %TokenType
  %tmp.v64 = alloca %TokenType
  %tmp.v66 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %2)
  %3 = getelementptr inbounds %Token, %Token* %"$tmpC", i32 0, i32 1
  call void @ctor.191(%TokenType* %t, %TokenType* %3)
  call void @dtor.228(%Token* %"$tmpC")
  br label %if_block

if_block:                                         ; preds = %code
  call void @ctor.319(%TokenType* %tmp.v, i32 36)
  %4 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load i1, i1* %withEqual.addr
  ret i1 %5

if_end:                                           ; preds = %dumy_block, %if_block
  call void @ctor.319(%TokenType* %tmp.v40, i32 37)
  %6 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v40)
  br i1 %6, label %cond.true37, label %cond.false38

dumy_block:                                       ; No predecessors!
  br label %if_end

cond.true:                                        ; preds = %cond.end3
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  call void @ctor.319(%TokenType* %tmp.v66, i32 46)
  %7 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v66)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res67 = phi i1 [ true, %cond.true ], [ %7, %cond.false ]
  br i1 %cond.res65, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true1:                                       ; preds = %cond.end6
  br label %cond.end3

cond.false2:                                      ; preds = %cond.end6
  call void @ctor.319(%TokenType* %tmp.v64, i32 45)
  %8 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v64)
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res65 = phi i1 [ true, %cond.true1 ], [ %8, %cond.false2 ]
  br i1 %cond.res65, label %cond.true, label %cond.false

cond.true4:                                       ; preds = %cond.end9
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end9
  call void @ctor.319(%TokenType* %tmp.v62, i32 44)
  %9 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v62)
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond.res63 = phi i1 [ true, %cond.true4 ], [ %9, %cond.false5 ]
  br i1 %cond.res63, label %cond.true1, label %cond.false2

cond.true7:                                       ; preds = %cond.end12
  br label %cond.end9

cond.false8:                                      ; preds = %cond.end12
  call void @ctor.319(%TokenType* %tmp.v60, i32 43)
  %10 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v60)
  br label %cond.end9

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond.res61 = phi i1 [ true, %cond.true7 ], [ %10, %cond.false8 ]
  br i1 %cond.res61, label %cond.true4, label %cond.false5

cond.true10:                                      ; preds = %cond.end15
  br label %cond.end12

cond.false11:                                     ; preds = %cond.end15
  call void @ctor.319(%TokenType* %tmp.v58, i32 42)
  %11 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v58)
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond.res59 = phi i1 [ true, %cond.true10 ], [ %11, %cond.false11 ]
  br i1 %cond.res59, label %cond.true7, label %cond.false8

cond.true13:                                      ; preds = %cond.end18
  br label %cond.end15

cond.false14:                                     ; preds = %cond.end18
  call void @ctor.319(%TokenType* %tmp.v56, i32 41)
  %12 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v56)
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond.res57 = phi i1 [ true, %cond.true13 ], [ %12, %cond.false14 ]
  br i1 %cond.res57, label %cond.true10, label %cond.false11

cond.true16:                                      ; preds = %cond.end21
  br label %cond.end18

cond.false17:                                     ; preds = %cond.end21
  call void @ctor.319(%TokenType* %tmp.v54, i32 40)
  %13 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v54)
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond.res55 = phi i1 [ true, %cond.true16 ], [ %13, %cond.false17 ]
  br i1 %cond.res55, label %cond.true13, label %cond.false14

cond.true19:                                      ; preds = %cond.end24
  br label %cond.end21

cond.false20:                                     ; preds = %cond.end24
  call void @ctor.319(%TokenType* %tmp.v52, i32 39)
  %14 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v52)
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res53 = phi i1 [ true, %cond.true19 ], [ %14, %cond.false20 ]
  br i1 %cond.res53, label %cond.true16, label %cond.false17

cond.true22:                                      ; preds = %cond.end27
  br label %cond.end24

cond.false23:                                     ; preds = %cond.end27
  call void @ctor.319(%TokenType* %tmp.v50, i32 21)
  %15 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v50)
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond.res51 = phi i1 [ true, %cond.true22 ], [ %15, %cond.false23 ]
  br i1 %cond.res51, label %cond.true19, label %cond.false20

cond.true25:                                      ; preds = %cond.end30
  br label %cond.end27

cond.false26:                                     ; preds = %cond.end30
  call void @ctor.319(%TokenType* %tmp.v48, i32 23)
  %16 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v48)
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond.res49 = phi i1 [ true, %cond.true25 ], [ %16, %cond.false26 ]
  br i1 %cond.res49, label %cond.true22, label %cond.false23

cond.true28:                                      ; preds = %cond.end33
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end33
  call void @ctor.319(%TokenType* %tmp.v46, i32 22)
  %17 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v46)
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond.res47 = phi i1 [ true, %cond.true28 ], [ %17, %cond.false29 ]
  br i1 %cond.res47, label %cond.true25, label %cond.false26

cond.true31:                                      ; preds = %cond.end36
  br label %cond.end33

cond.false32:                                     ; preds = %cond.end36
  call void @ctor.319(%TokenType* %tmp.v44, i32 29)
  %18 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v44)
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond.res45 = phi i1 [ true, %cond.true31 ], [ %18, %cond.false32 ]
  br i1 %cond.res45, label %cond.true28, label %cond.false29

cond.true34:                                      ; preds = %cond.end39
  br label %cond.end36

cond.false35:                                     ; preds = %cond.end39
  call void @ctor.319(%TokenType* %tmp.v42, i32 35)
  %19 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v42)
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond.res43 = phi i1 [ true, %cond.true34 ], [ %19, %cond.false35 ]
  br i1 %cond.res43, label %cond.true31, label %cond.false32

cond.true37:                                      ; preds = %if_end
  br label %cond.end39

cond.false38:                                     ; preds = %if_end
  call void @ctor.319(%TokenType* %tmp.v41, i32 38)
  %20 = call i1 @"==.279"(%TokenType* %t, %TokenType* %tmp.v41)
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond.res = phi i1 [ true, %cond.true37 ], [ %20, %cond.false38 ]
  br i1 %cond.res, label %cond.true34, label %cond.false35

cond_destruct_alt1:                               ; preds = %cond.end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %cond.end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br i1 %cond.res63, label %cond_destruct_alt168, label %cond_destruct_alt269

cond_destruct_alt168:                             ; preds = %cond_destruct_end
  br label %cond_destruct_end70

cond_destruct_alt269:                             ; preds = %cond_destruct_end
  br label %cond_destruct_end70

cond_destruct_end70:                              ; preds = %cond_destruct_alt269, %cond_destruct_alt168
  br i1 %cond.res61, label %cond_destruct_alt171, label %cond_destruct_alt272

cond_destruct_alt171:                             ; preds = %cond_destruct_end70
  br label %cond_destruct_end73

cond_destruct_alt272:                             ; preds = %cond_destruct_end70
  br label %cond_destruct_end73

cond_destruct_end73:                              ; preds = %cond_destruct_alt272, %cond_destruct_alt171
  br i1 %cond.res59, label %cond_destruct_alt174, label %cond_destruct_alt275

cond_destruct_alt174:                             ; preds = %cond_destruct_end73
  br label %cond_destruct_end76

cond_destruct_alt275:                             ; preds = %cond_destruct_end73
  br label %cond_destruct_end76

cond_destruct_end76:                              ; preds = %cond_destruct_alt275, %cond_destruct_alt174
  br i1 %cond.res57, label %cond_destruct_alt177, label %cond_destruct_alt278

cond_destruct_alt177:                             ; preds = %cond_destruct_end76
  br label %cond_destruct_end79

cond_destruct_alt278:                             ; preds = %cond_destruct_end76
  br label %cond_destruct_end79

cond_destruct_end79:                              ; preds = %cond_destruct_alt278, %cond_destruct_alt177
  br i1 %cond.res55, label %cond_destruct_alt180, label %cond_destruct_alt281

cond_destruct_alt180:                             ; preds = %cond_destruct_end79
  br label %cond_destruct_end82

cond_destruct_alt281:                             ; preds = %cond_destruct_end79
  br label %cond_destruct_end82

cond_destruct_end82:                              ; preds = %cond_destruct_alt281, %cond_destruct_alt180
  br i1 %cond.res53, label %cond_destruct_alt183, label %cond_destruct_alt284

cond_destruct_alt183:                             ; preds = %cond_destruct_end82
  br label %cond_destruct_end85

cond_destruct_alt284:                             ; preds = %cond_destruct_end82
  br label %cond_destruct_end85

cond_destruct_end85:                              ; preds = %cond_destruct_alt284, %cond_destruct_alt183
  br i1 %cond.res51, label %cond_destruct_alt186, label %cond_destruct_alt287

cond_destruct_alt186:                             ; preds = %cond_destruct_end85
  br label %cond_destruct_end88

cond_destruct_alt287:                             ; preds = %cond_destruct_end85
  br label %cond_destruct_end88

cond_destruct_end88:                              ; preds = %cond_destruct_alt287, %cond_destruct_alt186
  br i1 %cond.res49, label %cond_destruct_alt189, label %cond_destruct_alt290

cond_destruct_alt189:                             ; preds = %cond_destruct_end88
  br label %cond_destruct_end91

cond_destruct_alt290:                             ; preds = %cond_destruct_end88
  br label %cond_destruct_end91

cond_destruct_end91:                              ; preds = %cond_destruct_alt290, %cond_destruct_alt189
  br i1 %cond.res47, label %cond_destruct_alt192, label %cond_destruct_alt293

cond_destruct_alt192:                             ; preds = %cond_destruct_end91
  br label %cond_destruct_end94

cond_destruct_alt293:                             ; preds = %cond_destruct_end91
  br label %cond_destruct_end94

cond_destruct_end94:                              ; preds = %cond_destruct_alt293, %cond_destruct_alt192
  br i1 %cond.res45, label %cond_destruct_alt195, label %cond_destruct_alt296

cond_destruct_alt195:                             ; preds = %cond_destruct_end94
  br label %cond_destruct_end97

cond_destruct_alt296:                             ; preds = %cond_destruct_end94
  br label %cond_destruct_end97

cond_destruct_end97:                              ; preds = %cond_destruct_alt296, %cond_destruct_alt195
  br i1 %cond.res43, label %cond_destruct_alt198, label %cond_destruct_alt299

cond_destruct_alt198:                             ; preds = %cond_destruct_end97
  br label %cond_destruct_end100

cond_destruct_alt299:                             ; preds = %cond_destruct_end97
  br label %cond_destruct_end100

cond_destruct_end100:                             ; preds = %cond_destruct_alt299, %cond_destruct_alt198
  br i1 %cond.res, label %cond_destruct_alt1101, label %cond_destruct_alt2102

cond_destruct_alt1101:                            ; preds = %cond_destruct_end100
  br label %cond_destruct_end103

cond_destruct_alt2102:                            ; preds = %cond_destruct_end100
  br label %cond_destruct_end103

cond_destruct_end103:                             ; preds = %cond_destruct_alt2102, %cond_destruct_alt1101
  br i1 %6, label %cond_destruct_alt1104, label %cond_destruct_alt2105

cond_destruct_alt1104:                            ; preds = %cond_destruct_end103
  br label %cond_destruct_end106

cond_destruct_alt2105:                            ; preds = %cond_destruct_end103
  br label %cond_destruct_end106

cond_destruct_end106:                             ; preds = %cond_destruct_alt2105, %cond_destruct_alt1104
  ret i1 %cond.res67

cond_destruct_alt1107:                            ; preds = %dumy_block110
  br label %cond_destruct_end109

cond_destruct_alt2108:                            ; preds = %dumy_block110
  br label %cond_destruct_end109

cond_destruct_end109:                             ; preds = %cond_destruct_alt2108, %cond_destruct_alt1107
  br i1 %cond.res63, label %cond_destruct_alt1111, label %cond_destruct_alt2112

dumy_block110:                                    ; No predecessors!
  br i1 %cond.res65, label %cond_destruct_alt1107, label %cond_destruct_alt2108

cond_destruct_alt1111:                            ; preds = %cond_destruct_end109
  br label %cond_destruct_end113

cond_destruct_alt2112:                            ; preds = %cond_destruct_end109
  br label %cond_destruct_end113

cond_destruct_end113:                             ; preds = %cond_destruct_alt2112, %cond_destruct_alt1111
  br i1 %cond.res61, label %cond_destruct_alt1114, label %cond_destruct_alt2115

cond_destruct_alt1114:                            ; preds = %cond_destruct_end113
  br label %cond_destruct_end116

cond_destruct_alt2115:                            ; preds = %cond_destruct_end113
  br label %cond_destruct_end116

cond_destruct_end116:                             ; preds = %cond_destruct_alt2115, %cond_destruct_alt1114
  br i1 %cond.res59, label %cond_destruct_alt1117, label %cond_destruct_alt2118

cond_destruct_alt1117:                            ; preds = %cond_destruct_end116
  br label %cond_destruct_end119

cond_destruct_alt2118:                            ; preds = %cond_destruct_end116
  br label %cond_destruct_end119

cond_destruct_end119:                             ; preds = %cond_destruct_alt2118, %cond_destruct_alt1117
  br i1 %cond.res57, label %cond_destruct_alt1120, label %cond_destruct_alt2121

cond_destruct_alt1120:                            ; preds = %cond_destruct_end119
  br label %cond_destruct_end122

cond_destruct_alt2121:                            ; preds = %cond_destruct_end119
  br label %cond_destruct_end122

cond_destruct_end122:                             ; preds = %cond_destruct_alt2121, %cond_destruct_alt1120
  br i1 %cond.res55, label %cond_destruct_alt1123, label %cond_destruct_alt2124

cond_destruct_alt1123:                            ; preds = %cond_destruct_end122
  br label %cond_destruct_end125

cond_destruct_alt2124:                            ; preds = %cond_destruct_end122
  br label %cond_destruct_end125

cond_destruct_end125:                             ; preds = %cond_destruct_alt2124, %cond_destruct_alt1123
  br i1 %cond.res53, label %cond_destruct_alt1126, label %cond_destruct_alt2127

cond_destruct_alt1126:                            ; preds = %cond_destruct_end125
  br label %cond_destruct_end128

cond_destruct_alt2127:                            ; preds = %cond_destruct_end125
  br label %cond_destruct_end128

cond_destruct_end128:                             ; preds = %cond_destruct_alt2127, %cond_destruct_alt1126
  br i1 %cond.res51, label %cond_destruct_alt1129, label %cond_destruct_alt2130

cond_destruct_alt1129:                            ; preds = %cond_destruct_end128
  br label %cond_destruct_end131

cond_destruct_alt2130:                            ; preds = %cond_destruct_end128
  br label %cond_destruct_end131

cond_destruct_end131:                             ; preds = %cond_destruct_alt2130, %cond_destruct_alt1129
  br i1 %cond.res49, label %cond_destruct_alt1132, label %cond_destruct_alt2133

cond_destruct_alt1132:                            ; preds = %cond_destruct_end131
  br label %cond_destruct_end134

cond_destruct_alt2133:                            ; preds = %cond_destruct_end131
  br label %cond_destruct_end134

cond_destruct_end134:                             ; preds = %cond_destruct_alt2133, %cond_destruct_alt1132
  br i1 %cond.res47, label %cond_destruct_alt1135, label %cond_destruct_alt2136

cond_destruct_alt1135:                            ; preds = %cond_destruct_end134
  br label %cond_destruct_end137

cond_destruct_alt2136:                            ; preds = %cond_destruct_end134
  br label %cond_destruct_end137

cond_destruct_end137:                             ; preds = %cond_destruct_alt2136, %cond_destruct_alt1135
  br i1 %cond.res45, label %cond_destruct_alt1138, label %cond_destruct_alt2139

cond_destruct_alt1138:                            ; preds = %cond_destruct_end137
  br label %cond_destruct_end140

cond_destruct_alt2139:                            ; preds = %cond_destruct_end137
  br label %cond_destruct_end140

cond_destruct_end140:                             ; preds = %cond_destruct_alt2139, %cond_destruct_alt1138
  br i1 %cond.res43, label %cond_destruct_alt1141, label %cond_destruct_alt2142

cond_destruct_alt1141:                            ; preds = %cond_destruct_end140
  br label %cond_destruct_end143

cond_destruct_alt2142:                            ; preds = %cond_destruct_end140
  br label %cond_destruct_end143

cond_destruct_end143:                             ; preds = %cond_destruct_alt2142, %cond_destruct_alt1141
  br i1 %cond.res, label %cond_destruct_alt1144, label %cond_destruct_alt2145

cond_destruct_alt1144:                            ; preds = %cond_destruct_end143
  br label %cond_destruct_end146

cond_destruct_alt2145:                            ; preds = %cond_destruct_end143
  br label %cond_destruct_end146

cond_destruct_end146:                             ; preds = %cond_destruct_alt2145, %cond_destruct_alt1144
  br i1 %6, label %cond_destruct_alt1147, label %cond_destruct_alt2148

cond_destruct_alt1147:                            ; preds = %cond_destruct_end146
  br label %cond_destruct_end149

cond_destruct_alt2148:                            ; preds = %cond_destruct_end146
  br label %cond_destruct_end149

cond_destruct_end149:                             ; preds = %cond_destruct_alt2148, %cond_destruct_alt1147
  unreachable
}

declare %Node @comp_parser_mkFunAppExpr(%Location*, %Node, %Node)

declare %Node @comp_parser_mkDotExpr(%Location*, %Node, %StringRef)

; Function Attrs: inlinehint nounwind
define internal void @parseIdOrOper(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %tmp.v = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %tmp.v10 = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %"$tmpC" = alloca %String
  %tmp.StringRef15 = alloca %StringRef
  %"$tmpC16" = alloca %Token
  %tmp.StringRef17 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 37)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %String*, %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 2
  call void @ctor.192(%String* %4, %String* %7)
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %if_end4, %dumy_block
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef15, i32 0, i32 0
  %10 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef15, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.101, i32 0, i32 0), i8** %9
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.101, i32 0, i32 25), i8** %10
  %11 = load %StringRef, %StringRef* %tmp.StringRef15
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC16", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %13)
  %14 = getelementptr inbounds %Token, %Token* %"$tmpC16", i32 0, i32 1
  %15 = load %TokenType, %TokenType* %14
  %16 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef17, i32 0, i32 0
  %17 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef17, i32 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.102, i32 0, i32 0), i8** %16
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.102, i32 0, i32 34), i8** %17
  %18 = load %StringRef, %StringRef* %tmp.StringRef17
  call void @toString.474(%String* %"$tmpC", %StringRef %11, %TokenType %15, %StringRef %18)
  call void @reportError.429(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %String* %"$tmpC")
  call void @dtor.229(%String* %"$tmpC")
  call void @dtor.228(%Token* %"$tmpC16")
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v5, i32 38)
  %20 = load %TokenType, %TokenType* %tmp.v5
  %21 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19, %TokenType %20)
  br i1 %21, label %if_then2, label %if_else3

if_then2:                                         ; preds = %if_block1
  %22 = load %String*, %String** %_result.addr
  %23 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %24 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %23, i32 0, i32 1
  %25 = getelementptr inbounds %Token, %Token* %24, i32 0, i32 2
  call void @ctor.192(%String* %22, %String* %25)
  ret void

if_else3:                                         ; preds = %if_block1
  br label %if_block7

if_end4:                                          ; preds = %cond_destruct_end14, %dumy_block6
  br label %if_end

dumy_block6:                                      ; No predecessors!
  br label %if_end4

if_block7:                                        ; preds = %if_else3
  %26 = load i1, i1* %withEqual.addr
  br i1 %26, label %cond.true, label %cond.false

if_then8:                                         ; preds = %cond.end
  %27 = load %String*, %String** %_result.addr
  %28 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %29 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.100, i32 0, i32 0), i8** %28
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.100, i32 0, i32 1), i8** %29
  %30 = load %StringRef, %StringRef* %tmp.StringRef
  store %StringRef %30, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %27, %StringRef* %"$tmpForRef")
  br i1 %26, label %cond_destruct_alt1, label %cond_destruct_alt2

if_end9:                                          ; preds = %dumy_block11, %cond.end
  br i1 %26, label %cond_destruct_alt112, label %cond_destruct_alt213

cond.true:                                        ; preds = %if_block7
  %31 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v10, i32 36)
  %32 = load %TokenType, %TokenType* %tmp.v10
  %33 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %31, %TokenType %32)
  br label %cond.end

cond.false:                                       ; preds = %if_block7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %33, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then8, label %if_end9

cond_destruct_alt1:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

dumy_block11:                                     ; No predecessors!
  br label %if_end9

cond_destruct_alt112:                             ; preds = %if_end9
  br label %cond_destruct_end14

cond_destruct_alt213:                             ; preds = %if_end9
  br label %cond_destruct_end14

cond_destruct_end14:                              ; preds = %cond_destruct_alt213, %cond_destruct_alt112
  br label %if_end4
}

declare %Node @comp_parser_mkPrefixOp(%Location*, %StringRef, %Node)

; Function Attrs: inlinehint nounwind
define internal void @parseIdOrOperOpt(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, i1 %withEqual) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %withEqual.addr = alloca i1
  store i1 %withEqual, i1* %withEqual.addr
  %tmp.v = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %tmp.v11 = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 37)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  %4 = load %String*, %String** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 2
  call void @ctor.192(%String* %4, %String* %7)
  ret void

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %if_end4, %dumy_block
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_else
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v5, i32 38)
  %9 = load %TokenType, %TokenType* %tmp.v5
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then2, label %if_else3

if_then2:                                         ; preds = %if_block1
  %11 = load %String*, %String** %_result.addr
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = getelementptr inbounds %Token, %Token* %13, i32 0, i32 2
  call void @ctor.192(%String* %11, %String* %14)
  ret void

if_else3:                                         ; preds = %if_block1
  br label %if_block7

if_end4:                                          ; preds = %cond_destruct_end19, %dumy_block6
  br label %if_end

dumy_block6:                                      ; No predecessors!
  br label %if_end4

if_block7:                                        ; preds = %if_else3
  %15 = load i1, i1* %withEqual.addr
  br i1 %15, label %cond.true, label %cond.false

if_then8:                                         ; preds = %cond.end
  %16 = load %String*, %String** %_result.addr
  %17 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %18 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.103, i32 0, i32 0), i8** %17
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.103, i32 0, i32 1), i8** %18
  %19 = load %StringRef, %StringRef* %tmp.StringRef
  store %StringRef %19, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %16, %StringRef* %"$tmpForRef")
  br i1 %15, label %cond_destruct_alt1, label %cond_destruct_alt2

if_else9:                                         ; preds = %cond.end
  %20 = load %String*, %String** %_result.addr
  call void @ctor.164(%String* %20)
  br i1 %15, label %cond_destruct_alt113, label %cond_destruct_alt214

if_end10:                                         ; preds = %dumy_block16, %dumy_block12
  br i1 %15, label %cond_destruct_alt117, label %cond_destruct_alt218

cond.true:                                        ; preds = %if_block7
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v11, i32 36)
  %22 = load %TokenType, %TokenType* %tmp.v11
  %23 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, %TokenType %22)
  br label %cond.end

cond.false:                                       ; preds = %if_block7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %23, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then8, label %if_else9

cond_destruct_alt1:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_then8
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  ret void

dumy_block12:                                     ; No predecessors!
  br label %if_end10

cond_destruct_alt113:                             ; preds = %if_else9
  br label %cond_destruct_end15

cond_destruct_alt214:                             ; preds = %if_else9
  br label %cond_destruct_end15

cond_destruct_end15:                              ; preds = %cond_destruct_alt214, %cond_destruct_alt113
  ret void

dumy_block16:                                     ; No predecessors!
  br label %if_end10

cond_destruct_alt117:                             ; preds = %if_end10
  br label %cond_destruct_end19

cond_destruct_alt218:                             ; preds = %if_end10
  br label %cond_destruct_end19

cond_destruct_end19:                              ; preds = %cond_destruct_alt218, %cond_destruct_alt117
  br label %if_end4
}

declare %Node @comp_parser_mkInfixOp(%Location*, %Node, %StringRef, %Node)

declare %Node @comp_parser_mkPostfixOp(%Location*, %Node, %StringRef)

; Function Attrs: inlinehint nounwind
define internal i1 @parseImportLineOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 3)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node*, %Node** %res.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseImportNames(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @"=.435"(%Node* %4, %Node* %"$tmpC")
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 32)
  %7 = load %TokenType, %TokenType* %tmp.v1
  %8 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseImportNames(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpForRef1" = alloca %Node
  %"$tmpC2" = alloca %Node
  br label %code

code:                                             ; preds = %0
  call void @ctor.436(%Node* %res)
  %1 = load %Node, %Node* %res
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseImportName(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Node, %Node* %"$tmpC"
  %4 = call %Node @comp_parser_addToNodeList(%Node %1, %Node %3)
  store %Node %4, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 33)
  %6 = load %TokenType, %TokenType* %tmp.v
  %7 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  br i1 %7, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %8 = load %Node, %Node* %res
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseImportName(%Node* %"$tmpC2", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9)
  %10 = load %Node, %Node* %"$tmpC2"
  %11 = call %Node @comp_parser_addToNodeList(%Node %8, %Node %10)
  store %Node %11, %Node* %"$tmpForRef1"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef1")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %12 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %12, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseImportName(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %loc = alloca %Location
  %id = alloca %String
  %toImport = alloca %Node
  %declNames = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %Location
  %"$tmpC1" = alloca %Location
  %"$tmpC2" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdEqualOpt(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseQidOrString(%Node* %toImport, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3)
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseImportDeclNamesOpt(%Node* %declNames, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4)
  %5 = load %Node*, %Node** %_result.addr
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @lastLoc(%Location* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6)
  call void @span(%Location* %"$tmpC", %Location* %loc, %Location* %"$tmpC1")
  call void @asStringRef(%StringRef* %"$tmpC2", %String* %id)
  %7 = load %StringRef, %StringRef* %"$tmpC2"
  %8 = load %Node, %Node* %toImport
  %9 = load %Node, %Node* %declNames
  %10 = call %Node @comp_parser_mkImportName(%Location* %"$tmpC", %StringRef %7, %Node %8, %Node %9)
  store %Node %10, %Node* %"$tmpForRef"
  call void @ctor.434(%Node* %5, %Node* %"$tmpForRef")
  call void @dtor.229(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.229(%String* %id)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdEqualOpt(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %id = alloca %String
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  %tmp.v2 = alloca %TokenType
  %tmp.v3 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor.164(%String* %id)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 37)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %cond.true, label %cond.false

if_then:                                          ; preds = %cond.end
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v2, i32 37)
  %5 = load %TokenType, %TokenType* %tmp.v2
  %6 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, %TokenType %5)
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %8 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, i32 0, i32 1
  %9 = getelementptr inbounds %Token, %Token* %8, i32 0, i32 2
  %10 = call %String* @"=.256"(%String* %id, %String* %9)
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v3, i32 36)
  %12 = load %TokenType, %TokenType* %tmp.v3
  %13 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br label %if_end

if_end:                                           ; preds = %if_then, %cond.end
  br i1 %3, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true:                                        ; preds = %if_block
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 36)
  %15 = load %TokenType, %TokenType* %tmp.v1
  %16 = call i1 @next2Is(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  br label %cond.end

cond.false:                                       ; preds = %if_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %16, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then, label %if_end

cond_destruct_alt1:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %if_end
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  %17 = load %String*, %String** %_result.addr
  call void @ctor.192(%String* %17, %String* %id)
  call void @dtor.229(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.229(%String* %id)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseQidOrString(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 40)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node*, %Node** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 0
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %9 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, i32 0, i32 1
  %10 = getelementptr inbounds %Token, %Token* %9, i32 0, i32 2
  call void @asStringRef(%StringRef* %"$tmpC", %String* %10)
  %11 = load %StringRef, %StringRef* %"$tmpC"
  %12 = call %Node @comp_parser_mkStringLiteral(%Location* %7, %StringRef %11)
  store %Node %12, %Node* %"$tmpForRef"
  call void @ctor.434(%Node* %4, %Node* %"$tmpForRef")
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %13 = load %Node*, %Node** %_result.addr
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseQualifiedName(%Node* %13, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 false)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

; Function Attrs: inlinehint nounwind
define internal void @parseImportDeclNamesOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  call void @ctor.436(%Node* %res)
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 29)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdOrOperListNode(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4)
  call void @"=.435"(%Node* %res, %Node* %"$tmpC")
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 30)
  %6 = load %TokenType, %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  %8 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %8, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @parseIdOrOperListNode(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %id = alloca %String
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v = alloca %TokenType
  %"$tmpC1" = alloca %String
  %"$tmpForRef2" = alloca %Node
  %"$tmpC3" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  call void @ctor.436(%Node* %res)
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdOrOper(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 true)
  %2 = load %Node, %Node* %res
  %3 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %4 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %Token, %Token* %4, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %6 = load %StringRef, %StringRef* %"$tmpC"
  %7 = call %Node @comp_parser_mkIdentifier(%Location* %5, %StringRef %6)
  %8 = call %Node @comp_parser_addToNodeList(%Node %2, %Node %7)
  store %Node %8, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef")
  br label %while_block

while_block:                                      ; preds = %while_step, %code
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 33)
  %10 = load %TokenType, %TokenType* %tmp.v
  %11 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  br i1 %11, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdOrOper(%String* %"$tmpC1", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i1 true)
  %13 = call %String* @"=.256"(%String* %id, %String* %"$tmpC1")
  call void @dtor.229(%String* %"$tmpC1")
  %14 = load %Node, %Node* %res
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %16 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i32 0, i32 1
  %17 = getelementptr inbounds %Token, %Token* %16, i32 0, i32 0
  call void @asStringRef(%StringRef* %"$tmpC3", %String* %id)
  %18 = load %StringRef, %StringRef* %"$tmpC3"
  %19 = call %Node @comp_parser_mkIdentifier(%Location* %17, %StringRef %18)
  %20 = call %Node @comp_parser_addToNodeList(%Node %14, %Node %19)
  store %Node %20, %Node* %"$tmpForRef2"
  call void @"=.435"(%Node* %res, %Node* %"$tmpForRef2")
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  %21 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %21, %Node* %res)
  call void @dtor.229(%String* %id)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.229(%String* %id)
  ret void
}

declare %Node @comp_parser_mkImportName(%Location*, %StringRef, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseUsingDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %usingNode = alloca %Node
  %"$tmpC" = alloca %Node
  %"$tmpC4" = alloca %Node
  %tmp.v5 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC6" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 9)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 0
  call void @ctor.177(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdEqualOpt(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  call void @ctor.436(%Node* %usingNode)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %9 = call i1 @isEmpty.376(%String* %id)
  br i1 %9, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseQualifiedName(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 true)
  call void @"=.435"(%Node* %usingNode, %Node* %"$tmpC")
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC4", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i1 true)
  call void @"=.435"(%Node* %usingNode, %Node* %"$tmpC4")
  br label %if_end3

if_end3:                                          ; preds = %if_else, %if_then2
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %13 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, i32 0, i32 1
  %14 = getelementptr inbounds %Token, %Token* %13, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %14)
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v5, i32 32)
  %16 = load %TokenType, %TokenType* %tmp.v5
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  %18 = load %Node*, %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %id)
  %19 = load %StringRef, %StringRef* %"$tmpC6"
  %20 = load %Node, %Node* %usingNode
  %21 = call %Node @comp_parser_mkUsing(%Location* %loc, %StringRef %19, %Node %20)
  store %Node %21, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %18, %Node* %"$tmpForRef")
  call void @dtor.229(%String* %id)
  ret i1 true

dumy_block7:                                      ; No predecessors!
  call void @dtor.229(%String* %id)
  unreachable
}

declare %Node @comp_parser_mkUsing(%Location*, %StringRef, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parsePackageDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %formals = alloca %Node
  %ifClause = alloca %Node
  %tmp.v1 = alloca %TokenType
  %children = alloca %Node
  %tmp.v2 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 8)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 0
  call void @ctor.177(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9)
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %ifClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 25)
  %12 = load %TokenType, %TokenType* %tmp.v1
  %13 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  call void @ctor.436(%Node* %children)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseStmts(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true, %Node* %children)
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v2, i32 26)
  %16 = load %TokenType, %TokenType* %tmp.v2
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 1
  %20 = getelementptr inbounds %Token, %Token* %19, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %20)
  %21 = load %Node*, %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %22 = load %StringRef, %StringRef* %"$tmpC"
  %23 = load %Node, %Node* %children
  %24 = load %Node, %Node* %formals
  %25 = load %Node, %Node* %ifClause
  %26 = call %Node @comp_parser_mkPackage(%Location* %loc, %StringRef %22, %Node %23, %Node %24, %Node %25)
  store %Node %26, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %21, %Node* %"$tmpForRef")
  call void @dtor.229(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block3:                                      ; No predecessors!
  call void @dtor.229(%String* %id)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @parseIfClauseOpt(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 16)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %Node*, %Node** %_result.addr
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %4, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 true)
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  %6 = load %Node*, %Node** %_result.addr
  call void @ctor.436(%Node* %6)
  ret void

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkPackage(%Location*, %StringRef, %Node, %Node, %Node)

; Function Attrs: noinline nounwind
define i1 @parseDatatypeDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #5 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %formals = alloca %Node
  %tmp.v4 = alloca %TokenType
  %underlyingData = alloca %Node
  %ifClause = alloca %Node
  %tmp.v5 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %tmp.v6 = alloca %Node
  %ifClause7 = alloca %Node
  %children = alloca %Node
  %tmp.v12 = alloca %TokenType
  %tmp.v13 = alloca %TokenType
  %tmp.v14 = alloca %TokenType
  %tmp.v22 = alloca %TokenType
  %tmp.v23 = alloca %TokenType
  %tmp.v28 = alloca %TokenType
  %usingNode = alloca %Node
  %"$tmpForRef34" = alloca %Node
  %tmp.v42 = alloca %TokenType
  %tmp.v43 = alloca %TokenType
  %tmp.v48 = alloca %TokenType
  %"$tmpForRef49" = alloca %Node
  %"$tmpC50" = alloca %StringRef
  %tmp.v51 = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 5)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 0
  call void @ctor.177(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v4, i32 36)
  %11 = load %TokenType, %TokenType* %tmp.v4
  %12 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %TokenType %11)
  br i1 %12, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %underlyingData, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i1 true)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %ifClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14)
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v5, i32 32)
  %16 = load %TokenType, %TokenType* %tmp.v5
  %17 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, %TokenType %16)
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %19 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, i32 0, i32 1
  %20 = getelementptr inbounds %Token, %Token* %19, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %20)
  %21 = load %Node*, %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %22 = load %StringRef, %StringRef* %"$tmpC"
  %23 = load %Node, %Node* %formals
  %24 = load %Node, %Node* %underlyingData
  %25 = load %Node, %Node* %ifClause
  call void @ctor.436(%Node* %tmp.v6)
  %26 = load %Node, %Node* %tmp.v6
  %27 = call %Node @comp_parser_mkDatatype(%Location* %loc, %StringRef %22, %Node %23, %Node %24, %Node %25, %Node %26)
  store %Node %27, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %21, %Node* %"$tmpForRef")
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %28 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %ifClause7, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %28)
  call void @ctor.436(%Node* %children)
  br label %if_block8

if_end3:                                          ; preds = %if_end11, %if_then2
  call void @dtor.229(%String* %id)
  ret i1 true

if_block8:                                        ; preds = %if_else
  %29 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v12, i32 32)
  %30 = load %TokenType, %TokenType* %tmp.v12
  %31 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %29, %TokenType %30)
  br i1 %31, label %if_then9, label %if_else10

if_then9:                                         ; preds = %if_block8
  br label %if_end11

if_else10:                                        ; preds = %if_block8
  %32 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v13, i32 25)
  %33 = load %TokenType, %TokenType* %tmp.v13
  %34 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %32, %TokenType %33)
  br label %while_block

if_end11:                                         ; preds = %while_end, %if_then9
  %35 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %36 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %35, i32 0, i32 1
  %37 = getelementptr inbounds %Token, %Token* %36, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %37)
  %38 = load %Node*, %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC50", %String* %id)
  %39 = load %StringRef, %StringRef* %"$tmpC50"
  %40 = load %Node, %Node* %formals
  call void @ctor.436(%Node* %tmp.v51)
  %41 = load %Node, %Node* %tmp.v51
  %42 = load %Node, %Node* %ifClause7
  %43 = load %Node, %Node* %children
  %44 = call %Node @comp_parser_mkDatatype(%Location* %loc, %StringRef %39, %Node %40, %Node %41, %Node %42, %Node %43)
  store %Node %44, %Node* %"$tmpForRef49"
  call void @"=.435"(%Node* %38, %Node* %"$tmpForRef49")
  br label %if_end3

while_block:                                      ; preds = %while_step, %if_else10
  %45 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v14, i32 26)
  %46 = load %TokenType, %TokenType* %tmp.v14
  %47 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %45, %TokenType %46)
  %48 = xor i1 true, %47
  br i1 %48, label %cond.true, label %cond.false

while_body:                                       ; preds = %cond.end
  br label %while_block15

while_step:                                       ; preds = %cond_destruct_end47
  br label %while_block

while_end:                                        ; preds = %if_then26, %cond.end
  %49 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v48, i32 26)
  %50 = load %TokenType, %TokenType* %tmp.v48
  %51 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %49, %TokenType %50)
  br label %if_end11

cond.true:                                        ; preds = %while_block
  %52 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %53 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %52, i32 0, i32 2
  %54 = load i1, i1* %53
  %55 = xor i1 true, %54
  br label %cond.end

cond.false:                                       ; preds = %while_block
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %55, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %while_body, label %while_end

while_block15:                                    ; preds = %while_step17, %while_body
  %56 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v22, i32 33)
  %57 = load %TokenType, %TokenType* %tmp.v22
  %58 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %56, %TokenType %57)
  br i1 %58, label %cond.true19, label %cond.false20

while_body16:                                     ; preds = %cond.end21
  br label %while_step17

while_step17:                                     ; preds = %while_body16
  br label %while_block15

while_end18:                                      ; preds = %cond.end21
  br i1 %58, label %cond_destruct_alt1, label %cond_destruct_alt2

cond.true19:                                      ; preds = %while_block15
  br label %cond.end21

cond.false20:                                     ; preds = %while_block15
  %59 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v23, i32 32)
  %60 = load %TokenType, %TokenType* %tmp.v23
  %61 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %59, %TokenType %60)
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond.res24 = phi i1 [ true, %cond.true19 ], [ %61, %cond.false20 ]
  br i1 %cond.res24, label %while_body16, label %while_end18

cond_destruct_alt1:                               ; preds = %while_end18
  br label %cond_destruct_end

cond_destruct_alt2:                               ; preds = %while_end18
  br label %cond_destruct_end

cond_destruct_end:                                ; preds = %cond_destruct_alt2, %cond_destruct_alt1
  br label %if_block25

if_block25:                                       ; preds = %cond_destruct_end
  %62 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v28, i32 26)
  %63 = load %TokenType, %TokenType* %tmp.v28
  %64 = call i1 @nextIs(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %62, %TokenType %63)
  br i1 %64, label %if_then26, label %if_end27

if_then26:                                        ; preds = %if_block25
  br label %while_end

if_end27:                                         ; preds = %dumy_block29, %if_block25
  call void @ctor.436(%Node* %usingNode)
  br label %if_block30

dumy_block29:                                     ; No predecessors!
  br label %if_end27

if_block30:                                       ; preds = %if_end27
  %65 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %66 = call i1 @parseUsingDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %65, %Node* %usingNode)
  br i1 %66, label %if_then31, label %if_else32

if_then31:                                        ; preds = %if_block30
  %67 = load %Node, %Node* %children
  %68 = load %Node, %Node* %usingNode
  %69 = call %Node @comp_parser_addToNodeList(%Node %67, %Node %68)
  store %Node %69, %Node* %"$tmpForRef34"
  call void @"=.435"(%Node* %children, %Node* %"$tmpForRef34")
  br label %if_end33

if_else32:                                        ; preds = %if_block30
  %70 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFieldsLine(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %70, %Node* %children)
  br label %if_end33

if_end33:                                         ; preds = %if_else32, %if_then31
  br label %while_block35

while_block35:                                    ; preds = %while_step37, %if_end33
  %71 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v42, i32 33)
  %72 = load %TokenType, %TokenType* %tmp.v42
  %73 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %71, %TokenType %72)
  br i1 %73, label %cond.true39, label %cond.false40

while_body36:                                     ; preds = %cond.end41
  br label %while_step37

while_step37:                                     ; preds = %while_body36
  br label %while_block35

while_end38:                                      ; preds = %cond.end41
  br i1 %73, label %cond_destruct_alt145, label %cond_destruct_alt246

cond.true39:                                      ; preds = %while_block35
  br label %cond.end41

cond.false40:                                     ; preds = %while_block35
  %74 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v43, i32 32)
  %75 = load %TokenType, %TokenType* %tmp.v43
  %76 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %74, %TokenType %75)
  br label %cond.end41

cond.end41:                                       ; preds = %cond.false40, %cond.true39
  %cond.res44 = phi i1 [ true, %cond.true39 ], [ %76, %cond.false40 ]
  br i1 %cond.res44, label %while_body36, label %while_end38

cond_destruct_alt145:                             ; preds = %while_end38
  br label %cond_destruct_end47

cond_destruct_alt246:                             ; preds = %while_end38
  br label %cond_destruct_end47

cond_destruct_end47:                              ; preds = %cond_destruct_alt246, %cond_destruct_alt145
  br label %while_step

dumy_block52:                                     ; No predecessors!
  call void @dtor.229(%String* %id)
  unreachable
}

declare %Node @comp_parser_mkDatatype(%Location*, %StringRef, %Node, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal void @parseFieldsLine(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %ids = alloca %"Vector[LocString]"
  %tmp.v = alloca %TokenType
  %typeNode = alloca %Node
  %init = alloca %Node
  %tmp.v1 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$rangeVar" = alloca %"ContiguousMemoryRange[LocString]"
  %id = alloca %LocString*
  %v = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC2" = alloca %StringRef
  %"$tmpForRef3" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdList(%"Vector[LocString]"* %ids, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 31)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %typeNode, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 false)
  call void @ctor.436(%Node* %init)
  br label %if_block

if_block:                                         ; preds = %code
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 36)
  %7 = load %TokenType, %TokenType* %tmp.v1
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 true)
  call void @"=.435"(%Node* %init, %Node* %"$tmpC")
  br label %if_end

if_end:                                           ; preds = %if_then, %if_block
  call void @all.468(%"ContiguousMemoryRange[LocString]"* %"$rangeVar", %"Vector[LocString]"* %ids)
  br label %while_block

while_block:                                      ; preds = %while_step, %if_end
  %10 = load %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %"$rangeVar"
  %11 = call i1 @isEmpty.470(%"ContiguousMemoryRange[LocString]" %10)
  %12 = xor i1 true, %11
  br i1 %12, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %13 = load %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %"$rangeVar"
  %14 = call %LocString* @front.471(%"ContiguousMemoryRange[LocString]" %13)
  store %LocString* %14, %LocString** %id
  %15 = load %LocString*, %LocString** %id
  %16 = getelementptr inbounds %LocString, %LocString* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %16, i32 0, i32 0
  %18 = load %LocString*, %LocString** %id
  %19 = getelementptr inbounds %LocString, %LocString* %18, i32 0, i32 0
  %20 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %19, i32 0, i32 1
  call void @asStringRef(%StringRef* %"$tmpC2", %String* %20)
  %21 = load %StringRef, %StringRef* %"$tmpC2"
  %22 = load %Node, %Node* %typeNode
  %23 = load %Node, %Node* %init
  %24 = call %Node @comp_parser_mkField(%Location* %17, %StringRef %21, %Node %22, %Node %23)
  store %Node %24, %Node* %"$tmpForRef"
  call void @ctor.434(%Node* %v, %Node* %"$tmpForRef")
  %25 = load %Node*, %Node** %res.addr
  %26 = load %Node*, %Node** %res.addr
  %27 = load %Node, %Node* %26
  %28 = load %Node, %Node* %v
  %29 = call %Node @comp_parser_addToNodeList(%Node %27, %Node %28)
  store %Node %29, %Node* %"$tmpForRef3"
  call void @"=.435"(%Node* %25, %Node* %"$tmpForRef3")
  br label %while_step

while_step:                                       ; preds = %while_body
  call void @popFront.472(%"ContiguousMemoryRange[LocString]"* %"$rangeVar")
  br label %while_block

while_end:                                        ; preds = %while_block
  call void @dtor.465(%"Vector[LocString]"* %ids)
  ret void
}

declare %Node @comp_parser_mkField(%Location*, %StringRef, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseConceptDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %tmp.v1 = alloca %TokenType
  %paramName = alloca %String
  %baseConcept = alloca %Node
  %tmp.v2 = alloca %TokenType
  %ifClause = alloca %Node
  %tmp.v3 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  %"$tmpC" = alloca %StringRef
  %"$tmpC4" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 4)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 0
  call void @ctor.177(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 29)
  %10 = load %TokenType, %TokenType* %tmp.v1
  %11 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, %TokenType %10)
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %paramName, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12)
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseTypeNode(%Node* %baseConcept, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v2, i32 30)
  %15 = load %TokenType, %TokenType* %tmp.v2
  %16 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, %TokenType %15)
  %17 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %ifClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %17)
  %18 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v3, i32 32)
  %19 = load %TokenType, %TokenType* %tmp.v3
  %20 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %18, %TokenType %19)
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = getelementptr inbounds %Token, %Token* %22, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %23)
  %24 = load %Node*, %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC", %String* %id)
  %25 = load %StringRef, %StringRef* %"$tmpC"
  call void @asStringRef(%StringRef* %"$tmpC4", %String* %paramName)
  %26 = load %StringRef, %StringRef* %"$tmpC4"
  %27 = load %Node, %Node* %baseConcept
  %28 = load %Node, %Node* %ifClause
  %29 = call %Node @comp_parser_mkConcept(%Location* %loc, %StringRef %25, %StringRef %26, %Node %27, %Node %28)
  store %Node %29, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %24, %Node* %"$tmpForRef")
  call void @dtor.229(%String* %paramName)
  call void @dtor.229(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end

dumy_block5:                                      ; No predecessors!
  call void @dtor.229(%String* %paramName)
  call void @dtor.229(%String* %id)
  unreachable
}

declare %Node @comp_parser_mkConcept(%Location*, %StringRef, %StringRef, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseVarLikeDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %kind = alloca i32
  %tmp.v = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %ids = alloca %"Vector[LocString]"
  %typeNode = alloca %Node
  %init = alloca %Node
  %tmp.v10 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v14 = alloca %TokenType
  %"$tmpC15" = alloca %Node
  %tmp.v16 = alloca %TokenType
  %"$tmpC17" = alloca %Node
  %tmp.v18 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  store i32 0, i32* %kind
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 7)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  store i32 0, i32* %kind
  br label %if_end

if_else:                                          ; preds = %if_block
  br label %if_block1

if_end:                                           ; preds = %if_end4, %if_then
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdList(%"Vector[LocString]"* %ids, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4)
  call void @ctor.436(%Node* %typeNode)
  call void @ctor.436(%Node* %init)
  br label %if_block6

if_block1:                                        ; preds = %if_else
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v5, i32 10)
  %6 = load %TokenType, %TokenType* %tmp.v5
  %7 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  br i1 %7, label %if_then2, label %if_else3

if_then2:                                         ; preds = %if_block1
  store i32 1, i32* %kind
  br label %if_end4

if_else3:                                         ; preds = %if_block1
  ret i1 false

if_end4:                                          ; preds = %dumy_block, %if_then2
  br label %if_end

dumy_block:                                       ; No predecessors!
  br label %if_end4

if_block6:                                        ; preds = %if_end
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v10, i32 31)
  %9 = load %TokenType, %TokenType* %tmp.v10
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then7, label %if_else8

if_then7:                                         ; preds = %if_block6
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i1 false)
  call void @"=.435"(%Node* %typeNode, %Node* %"$tmpC")
  br label %if_block11

if_else8:                                         ; preds = %if_block6
  %12 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v16, i32 36)
  %13 = load %TokenType, %TokenType* %tmp.v16
  %14 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %12, %TokenType %13)
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC17", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15, i1 true)
  call void @"=.435"(%Node* %init, %Node* %"$tmpC17")
  br label %if_end9

if_end9:                                          ; preds = %if_else8, %if_end13
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v18, i32 32)
  %17 = load %TokenType, %TokenType* %tmp.v18
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  %19 = load %Node, %Node* %typeNode
  %20 = load %Node, %Node* %init
  %21 = load i32, i32* %kind
  %22 = load %Node*, %Node** %res.addr
  call void @createFormals(%"Vector[LocString]"* %ids, %Node %19, %Node %20, i32 %21, %Node* %22)
  call void @dtor.465(%"Vector[LocString]"* %ids)
  ret i1 true

if_block11:                                       ; preds = %if_then7
  %23 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v14, i32 36)
  %24 = load %TokenType, %TokenType* %tmp.v14
  %25 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %23, %TokenType %24)
  br i1 %25, label %if_then12, label %if_end13

if_then12:                                        ; preds = %if_block11
  %26 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC15", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %26, i1 true)
  call void @"=.435"(%Node* %init, %Node* %"$tmpC15")
  br label %if_end13

if_end13:                                         ; preds = %if_then12, %if_block11
  br label %if_end9

dumy_block19:                                     ; No predecessors!
  call void @dtor.465(%"Vector[LocString]"* %ids)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseFunDecl(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %id = alloca %String
  %formals = alloca %Node
  %retType = alloca %Node
  %body = alloca %Node
  %bodyExp = alloca %Node
  %ifClause = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpC5" = alloca %Node
  %tmp.v6 = alloca %TokenType
  %"$tmpC7" = alloca %Node
  %"$tmpC8" = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC9" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 6)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  %4 = xor i1 true, %3
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 false

if_end:                                           ; preds = %dumy_block, %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %6 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %Token, %Token* %6, i32 0, i32 0
  call void @ctor.177(%Location* %loc, %Location* %7)
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFunNameString(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8)
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFormalsOpt(%Node* %formals, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9)
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseTypeNode(%Node* %retType, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10)
  call void @ctor.436(%Node* %body)
  call void @ctor.436(%Node* %bodyExp)
  call void @ctor.436(%Node* %ifClause)
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v4, i32 36)
  %12 = load %TokenType, %TokenType* %tmp.v4
  %13 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br i1 %13, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 true)
  call void @"=.435"(%Node* %bodyExp, %Node* %"$tmpC")
  %15 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %"$tmpC5", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %15)
  call void @"=.435"(%Node* %ifClause, %Node* %"$tmpC5")
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v6, i32 32)
  %17 = load %TokenType, %TokenType* %tmp.v6
  %18 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, %TokenType %17)
  br label %if_end3

if_else:                                          ; preds = %if_block1
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIfClauseOpt(%Node* %"$tmpC7", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19)
  call void @"=.435"(%Node* %ifClause, %Node* %"$tmpC7")
  %20 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseFunBody(%Node* %"$tmpC8", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %20)
  call void @"=.435"(%Node* %body, %Node* %"$tmpC8")
  br label %if_end3

if_end3:                                          ; preds = %if_else, %if_then2
  %21 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %22 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %21, i32 0, i32 1
  %23 = getelementptr inbounds %Token, %Token* %22, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %23)
  %24 = load %Node*, %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC9", %String* %id)
  %25 = load %StringRef, %StringRef* %"$tmpC9"
  %26 = load %Node, %Node* %formals
  %27 = load %Node, %Node* %retType
  %28 = load %Node, %Node* %body
  %29 = load %Node, %Node* %bodyExp
  %30 = load %Node, %Node* %ifClause
  %31 = call %Node @comp_parser_mkFun(%Location* %loc, %StringRef %25, %Node %26, %Node %27, %Node %28, %Node %29, %Node %30)
  store %Node %31, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %24, %Node* %"$tmpForRef")
  call void @dtor.229(%String* %id)
  ret i1 true

dumy_block10:                                     ; No predecessors!
  call void @dtor.229(%String* %id)
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @parseFunNameString(%String* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %tmp.v = alloca %TokenType
  %"$tmpForRef" = alloca %StringRef
  %tmp.StringRef = alloca %StringRef
  %tmp.v4 = alloca %TokenType
  %tmp.v5 = alloca %TokenType
  %"$tmpForRef6" = alloca %StringRef
  %tmp.StringRef7 = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 34)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %String*, %String** %_result.addr
  %5 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %6 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.104, i32 0, i32 0), i8** %5
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.104, i32 0, i32 1), i8** %6
  %7 = load %StringRef, %StringRef* %tmp.StringRef
  store %StringRef %7, %StringRef* %"$tmpForRef"
  call void @ctor.370(%String* %4, %StringRef* %"$tmpForRef")
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v4, i32 29)
  %9 = load %TokenType, %TokenType* %tmp.v4
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v5, i32 30)
  %12 = load %TokenType, %TokenType* %tmp.v5
  %13 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  %14 = load %String*, %String** %_result.addr
  %15 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef7, i32 0, i32 0
  %16 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef7, i32 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.105, i32 0, i32 0), i8** %15
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.105, i32 0, i32 2), i8** %16
  %17 = load %StringRef, %StringRef* %tmp.StringRef7
  store %StringRef %17, %StringRef* %"$tmpForRef6"
  call void @ctor.370(%String* %14, %StringRef* %"$tmpForRef6")
  ret void

if_end3:                                          ; preds = %dumy_block8, %if_block1
  %18 = load %String*, %String** %_result.addr
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseIdOrOper(%String* %18, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19, i1 true)
  ret void

dumy_block8:                                      ; No predecessors!
  br label %if_end3
}

declare %Node @comp_parser_mkFun(%Location*, %StringRef, %Node, %Node, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseExprStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %2 = load %Node*, %Node** %res.addr
  %3 = call i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %Node* %2, i1 true)
  ret i1 %3
}

; Function Attrs: inlinehint nounwind
define internal i1 @parseIfStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res, i1 %topLevel) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %expr = alloca %Node
  %thenClause = alloca %Node
  %elseClause = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 16)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %expr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 true)
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %7 = load i1, i1* %topLevel.addr
  call void @parseStmt(%Node* %thenClause, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, i1 %7)
  call void @ctor.436(%Node* %elseClause)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %8 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v4, i32 24)
  %9 = load %TokenType, %TokenType* %tmp.v4
  %10 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %8, %TokenType %9)
  br i1 %10, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %12 = load i1, i1* %topLevel.addr
  call void @parseStmt(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i1 %12)
  call void @"=.435"(%Node* %elseClause, %Node* %"$tmpC")
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %14 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i32 0, i32 1
  %15 = getelementptr inbounds %Token, %Token* %14, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %15)
  %16 = load %Node*, %Node** %res.addr
  %17 = load %Node, %Node* %expr
  %18 = load %Node, %Node* %thenClause
  %19 = load %Node, %Node* %elseClause
  %20 = call %Node @comp_parser_mkIfStmt(%Location* %loc, %Node %17, %Node %18, %Node %19)
  store %Node %20, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %16, %Node* %"$tmpForRef")
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkIfStmt(%Location*, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseForStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res, i1 %topLevel) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %id = alloca %String
  %typeNode = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v5 = alloca %TokenType
  %range = alloca %Node
  %action = alloca %Node
  %"$tmpForRef" = alloca %Node
  %"$tmpC6" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 15)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseId(%String* %id, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5)
  call void @ctor.436(%Node* %typeNode)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v4, i32 31)
  %7 = load %TokenType, %TokenType* %tmp.v4
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 false)
  call void @"=.435"(%Node* %typeNode, %Node* %"$tmpC")
  br label %if_end3

if_end3:                                          ; preds = %if_then2, %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v5, i32 36)
  %11 = load %TokenType, %TokenType* %tmp.v5
  %12 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, %TokenType %11)
  %13 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %range, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %13, i1 true)
  %14 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %15 = load i1, i1* %topLevel.addr
  call void @parseStmt(%Node* %action, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %14, i1 %15)
  %16 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %17 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %16, i32 0, i32 1
  %18 = getelementptr inbounds %Token, %Token* %17, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %18)
  %19 = load %Node*, %Node** %res.addr
  call void @asStringRef(%StringRef* %"$tmpC6", %String* %id)
  %20 = load %StringRef, %StringRef* %"$tmpC6"
  %21 = load %Node, %Node* %typeNode
  %22 = load %Node, %Node* %range
  %23 = load %Node, %Node* %action
  %24 = call %Node @comp_parser_mkForStmt(%Location* %loc, %StringRef %20, %Node %21, %Node %22, %Node %23)
  store %Node %24, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %19, %Node* %"$tmpForRef")
  call void @dtor.229(%String* %id)
  ret i1 true

dumy_block:                                       ; No predecessors!
  call void @dtor.229(%String* %id)
  br label %if_end
}

declare %Node @comp_parser_mkForStmt(%Location*, %StringRef, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseWhileStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res, i1 %topLevel) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %topLevel.addr = alloca i1
  store i1 %topLevel, i1* %topLevel.addr
  %loc = alloca %Location
  %tmp.v = alloca %TokenType
  %expr = alloca %Node
  %stepAction = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpC" = alloca %String
  %tmp.StringRef = alloca %StringRef
  %"$tmpC8" = alloca %Token
  %tmp.StringRef9 = alloca %StringRef
  %body = alloca %Node
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @curLoc(%Location* %loc, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1)
  br label %if_block

if_block:                                         ; preds = %code
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 20)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  br i1 %4, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %expr, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, i1 true)
  call void @ctor.436(%Node* %stepAction)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %6 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v4, i32 32)
  %7 = load %TokenType, %TokenType* %tmp.v4
  %8 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %6, %TokenType %7)
  br i1 %8, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  br label %if_block5

if_end3:                                          ; preds = %if_end7, %if_block1
  %9 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %10 = load i1, i1* %topLevel.addr
  call void @parseStmt(%Node* %body, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %9, i1 %10)
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %12 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, i32 0, i32 1
  %13 = getelementptr inbounds %Token, %Token* %12, i32 0, i32 0
  call void @copyEnd(%Location* %loc, %Location* %13)
  %14 = load %Node*, %Node** %res.addr
  %15 = load %Node, %Node* %expr
  %16 = load %Node, %Node* %stepAction
  %17 = load %Node, %Node* %body
  %18 = call %Node @comp_parser_mkWhileStmt(%Location* %loc, %Node %15, %Node %16, %Node %17)
  store %Node %18, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %14, %Node* %"$tmpForRef")
  ret i1 true

if_block5:                                        ; preds = %if_then2
  %19 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %20 = call i1 @parseExprOpt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %19, %Node* %stepAction, i1 true)
  %21 = xor i1 true, %20
  br i1 %21, label %cond.true, label %cond.false

if_then6:                                         ; preds = %cond.end
  %22 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %23 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 0
  %24 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef, i32 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.106, i32 0, i32 0), i8** %23
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.106, i32 0, i32 25), i8** %24
  %25 = load %StringRef, %StringRef* %tmp.StringRef
  %26 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %27 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %26, i32 0, i32 0
  call void @"pre_*.425"(%Token* %"$tmpC8", %"RangeWithLookahead[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter]]"* %27)
  %28 = getelementptr inbounds %Token, %Token* %"$tmpC8", i32 0, i32 1
  %29 = load %TokenType, %TokenType* %28
  %30 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef9, i32 0, i32 0
  %31 = getelementptr inbounds %StringRef, %StringRef* %tmp.StringRef9, i32 0, i32 1
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.107, i32 0, i32 0), i8** %30
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.107, i32 0, i32 41), i8** %31
  %32 = load %StringRef, %StringRef* %tmp.StringRef9
  call void @toString.474(%String* %"$tmpC", %StringRef %25, %TokenType %29, %StringRef %32)
  call void @reportError.429(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %22, %String* %"$tmpC")
  call void @dtor.229(%String* %"$tmpC")
  call void @dtor.228(%Token* %"$tmpC8")
  br label %if_end7

if_end7:                                          ; preds = %if_then6, %cond.end
  br label %if_end3

cond.true:                                        ; preds = %if_block5
  %33 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %34 = load i1, i1* %topLevel.addr
  %35 = call i1 @parseBlockStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %33, %Node* %stepAction, i1 %34)
  %36 = xor i1 true, %35
  br label %cond.end

cond.false:                                       ; preds = %if_block5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %36, %cond.true ], [ false, %cond.false ]
  br i1 %cond.res, label %if_then6, label %if_end7

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkWhileStmt(%Location*, %Node, %Node, %Node)

; Function Attrs: inlinehint nounwind
define internal i1 @parseBreakStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %tmp.v1 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 11)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %Token, %Token* %5, i32 0, i32 0
  call void @ctor.177(%Location* %loc, %Location* %6)
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 32)
  %8 = load %TokenType, %TokenType* %tmp.v1
  %9 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  %10 = load %Node*, %Node** %res.addr
  %11 = call %Node @comp_parser_mkBreakStmt(%Location* %loc)
  store %Node %11, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %10, %Node* %"$tmpForRef")
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkBreakStmt(%Location*)

; Function Attrs: inlinehint nounwind
define internal i1 @parseContinueStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %tmp.v1 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 13)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %Token, %Token* %5, i32 0, i32 0
  call void @ctor.177(%Location* %loc, %Location* %6)
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 32)
  %8 = load %TokenType, %TokenType* %tmp.v1
  %9 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  %10 = load %Node*, %Node** %res.addr
  %11 = call %Node @comp_parser_mkContinueStmt(%Location* %loc)
  store %Node %11, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %10, %Node* %"$tmpForRef")
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkContinueStmt(%Location*)

; Function Attrs: inlinehint nounwind
define internal i1 @parseReturnStmt(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %Node* %res) #4 {
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res.addr = alloca %Node*
  store %Node* %res, %Node** %res.addr
  %tmp.v = alloca %TokenType
  %loc = alloca %Location
  %expr = alloca %Node
  %tmp.v3 = alloca %TokenType
  %"$tmpC" = alloca %Node
  %tmp.v4 = alloca %TokenType
  %"$tmpForRef" = alloca %Node
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 17)
  %2 = load %TokenType, %TokenType* %tmp.v
  %3 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, %TokenType %2)
  br i1 %3, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  %4 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %5 = getelementptr inbounds %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %Token, %Token* %5, i32 0, i32 0
  call void @ctor.177(%Location* %loc, %Location* %6)
  call void @ctor.436(%Node* %expr)
  br label %if_block1

if_end:                                           ; preds = %dumy_block, %if_block
  ret i1 false

if_block1:                                        ; preds = %if_then
  %7 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v3, i32 32)
  %8 = load %TokenType, %TokenType* %tmp.v3
  %9 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %7, %TokenType %8)
  br i1 %9, label %if_end2, label %if_else

if_else:                                          ; preds = %if_block1
  %10 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %10, i1 true)
  call void @"=.435"(%Node* %expr, %Node* %"$tmpC")
  %11 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v4, i32 32)
  %12 = load %TokenType, %TokenType* %tmp.v4
  %13 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %11, %TokenType %12)
  br label %if_end2

if_end2:                                          ; preds = %if_else, %if_block1
  %14 = load %Node*, %Node** %res.addr
  %15 = load %Node, %Node* %expr
  %16 = call %Node @comp_parser_mkReturnStmt(%Location* %loc, %Node %15)
  store %Node %16, %Node* %"$tmpForRef"
  call void @"=.435"(%Node* %14, %Node* %"$tmpForRef")
  ret i1 true

dumy_block:                                       ; No predecessors!
  br label %if_end
}

declare %Node @comp_parser_mkReturnStmt(%Location*, %Node)

declare %Node @comp_parser_mkModifiers(%Location*, %Node, %Node)

declare %Node @comp_parser_mkModule(%Location*, %Node, %Node)

; Function Attrs: alwaysinline nounwind
define internal void @dtor.475(%Node* %this) #3 {
  %this.addr = alloca %Node*
  store %Node* %this, %Node** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: noinline nounwind
define %Node @spr_parserIf_parseExpression(%ParserContext* %ctx) #5 {
  %ctx.addr = alloca %ParserContext*
  store %ParserContext* %ctx, %ParserContext** %ctx.addr
  %"$tmpC" = alloca %Node
  br label %code

code:                                             ; preds = %0
  %1 = load %ParserContext*, %ParserContext** %ctx.addr
  %2 = getelementptr inbounds %ParserContext, %ParserContext* %1, i32 0, i32 5
  call void @parseExpression(%Node* %"$tmpC", %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2)
  %3 = load %Node, %Node* %"$tmpC"
  ret %Node %3
}

; Function Attrs: inlinehint nounwind
define internal void @parseExpression(%Node* sret %_result, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this) #4 {
  %_result.addr = alloca %Node*
  store %Node* %_result, %Node** %_result.addr
  %this.addr = alloca %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*
  store %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %this, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  %res = alloca %Node
  %tmp.v = alloca %TokenType
  %tmp.v1 = alloca %TokenType
  br label %code

code:                                             ; preds = %0
  %1 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @parseExpr(%Node* %res, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %1, i1 true)
  %2 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v, i32 32)
  %3 = load %TokenType, %TokenType* %tmp.v
  %4 = call i1 @accept(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %2, %TokenType %3)
  %5 = load %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"*, %"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"** %this.addr
  call void @ctor.319(%TokenType* %tmp.v1, i32 0)
  %6 = load %TokenType, %TokenType* %tmp.v1
  %7 = call i1 @expect(%"SparrowParser[SparrowLayoutDecoder[SparrowScanner[_CharSource, ExternalErrorReporter], ExternalErrorReporter], ExternalErrorReporter]"* %5, %TokenType %6)
  %8 = load %Node*, %Node** %_result.addr
  call void @ctor.434(%Node* %8, %Node* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @isOctalDigit(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  %2 = icmp sle i8 48, %1
  br i1 %2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %3 = load i8, i8* %c.addr
  %4 = icmp sle i8 %3, 55
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %4, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: inlinehint nounwind
define internal i1 @isBinDigit(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  %2 = icmp eq i8 %1, 48
  br i1 %2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  br label %cond.end

cond.false:                                       ; preds = %code
  %3 = load i8, i8* %c.addr
  %4 = icmp eq i8 %3, 49
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ true, %cond.true ], [ %4, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.476(%LocString* %this) #3 {
  %this.addr = alloca %LocString*
  store %LocString* %this, %LocString** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString*, %LocString** %this.addr
  %2 = getelementptr inbounds %LocString, %LocString* %1, i32 0, i32 0
  call void @ctor.477(%"Tuple[Location, String]"* %2)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.477(%"Tuple[Location, String]"* %this) #3 {
  %this.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %this, %"Tuple[Location, String]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %2 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %1, i32 0, i32 0
  call void @ctor.155(%Location* %2)
  %3 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %4 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %3, i32 0, i32 1
  call void @ctor.164(%String* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.478"(%LocString* %this, %LocString* %other) #3 {
  %this.addr = alloca %LocString*
  store %LocString* %this, %LocString** %this.addr
  %other.addr = alloca %LocString*
  store %LocString* %other, %LocString** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString*, %LocString** %this.addr
  %2 = getelementptr inbounds %LocString, %LocString* %1, i32 0, i32 0
  %3 = load %LocString*, %LocString** %other.addr
  %4 = getelementptr inbounds %LocString, %LocString* %3, i32 0, i32 0
  call void @"=.479"(%"Tuple[Location, String]"* %2, %"Tuple[Location, String]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.479"(%"Tuple[Location, String]"* %this, %"Tuple[Location, String]"* %other) #3 {
  %this.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %this, %"Tuple[Location, String]"** %this.addr
  %other.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %other, %"Tuple[Location, String]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %2 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %1, i32 0, i32 0
  %3 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %other.addr
  %4 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %3, i32 0, i32 0
  call void @"=.248"(%Location* %2, %Location* %4)
  %5 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %6 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %5, i32 0, i32 1
  %7 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %other.addr
  %8 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %7, i32 0, i32 1
  %9 = call %String* @"=.256"(%String* %6, %String* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.480"(%LocString* %this, %LocString* %other) #3 {
  %this.addr = alloca %LocString*
  store %LocString* %this, %LocString** %this.addr
  %other.addr = alloca %LocString*
  store %LocString* %other, %LocString** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %LocString*, %LocString** %this.addr
  %2 = getelementptr inbounds %LocString, %LocString* %1, i32 0, i32 0
  %3 = load %LocString*, %LocString** %other.addr
  %4 = getelementptr inbounds %LocString, %LocString* %3, i32 0, i32 0
  %5 = call i1 @"==.481"(%"Tuple[Location, String]"* %2, %"Tuple[Location, String]"* %4)
  ret i1 %5
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.481"(%"Tuple[Location, String]"* %this, %"Tuple[Location, String]"* %other) #3 {
  %this.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %this, %"Tuple[Location, String]"** %this.addr
  %other.addr = alloca %"Tuple[Location, String]"*
  store %"Tuple[Location, String]"* %other, %"Tuple[Location, String]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %2 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %1, i32 0, i32 0
  %3 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %other.addr
  %4 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %3, i32 0, i32 0
  %5 = call i1 @"==.271"(%Location* %2, %Location* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %this.addr
  %7 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %6, i32 0, i32 1
  %8 = load %"Tuple[Location, String]"*, %"Tuple[Location, String]"** %other.addr
  %9 = getelementptr inbounds %"Tuple[Location, String]", %"Tuple[Location, String]"* %8, i32 0, i32 1
  %10 = call i1 @"==.280"(%String* %7, %String* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.482(%Node* %this, %UntypedPtr %fdata) #3 {
  %this.addr = alloca %Node*
  store %Node* %this, %Node** %this.addr
  %fdata.addr = alloca %UntypedPtr
  store %UntypedPtr %fdata, %UntypedPtr* %fdata.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node*, %Node** %this.addr
  %2 = getelementptr inbounds %Node, %Node* %1, i32 0, i32 0
  call void @ctor.65(%UntypedPtr* %2, %UntypedPtr* %fdata.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.483"(%Node* %this, %Node* %other) #3 {
  %this.addr = alloca %Node*
  store %Node* %this, %Node** %this.addr
  %other.addr = alloca %Node*
  store %Node* %other, %Node** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Node*, %Node** %this.addr
  %2 = getelementptr inbounds %Node, %Node* %1, i32 0, i32 0
  %3 = load %Node*, %Node** %other.addr
  %4 = getelementptr inbounds %Node, %Node* %3, i32 0, i32 0
  %5 = call i1 @"==.68"(%UntypedPtr* %2, %UntypedPtr* %4)
  ret i1 %5
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.484(%LineCol* %this) #3 {
  %this.addr = alloca %LineCol*
  store %LineCol* %this, %LineCol** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.485(%SourceCode* %this, i8* %fdata) #3 {
  %this.addr = alloca %SourceCode*
  store %SourceCode* %this, %SourceCode** %this.addr
  %fdata.addr = alloca i8*
  store i8* %fdata, i8** %fdata.addr
  br label %code

code:                                             ; preds = %0
  %1 = load i8*, i8** %fdata.addr
  %2 = load %SourceCode*, %SourceCode** %this.addr
  %3 = getelementptr inbounds %SourceCode, %SourceCode* %2, i32 0, i32 0
  store i8* %1, i8** %3
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.486(%SourceCode* %this) #3 {
  %this.addr = alloca %SourceCode*
  store %SourceCode* %this, %SourceCode** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.487(%Location* %this) #3 {
  %this.addr = alloca %Location*
  store %Location* %this, %Location** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLineCol(%LineCol* sret %_result, i32 %line, i32 %col) #4 {
  %_result.addr = alloca %LineCol*
  store %LineCol* %_result, %LineCol** %_result.addr
  %line.addr = alloca i32
  store i32 %line, i32* %line.addr
  %col.addr = alloca i32
  store i32 %col, i32* %col.addr
  %res = alloca %LineCol
  br label %code

code:                                             ; preds = %0
  call void @ctor.157(%LineCol* %res)
  %1 = load i32, i32* %line.addr
  %2 = getelementptr inbounds %LineCol, %LineCol* %res, i32 0, i32 0
  store i32 %1, i32* %2
  %3 = load i32, i32* %col.addr
  %4 = getelementptr inbounds %LineCol, %LineCol* %res, i32 0, i32 1
  store i32 %3, i32* %4
  %5 = load %LineCol*, %LineCol** %_result.addr
  call void @ctor.179(%LineCol* %5, %LineCol* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLocation(%Location* sret %_result) #4 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  call void @ctor.155(%Location* %res)
  call void @setOne(%Location* %res)
  %1 = load %Location*, %Location** %_result.addr
  call void @ctor.177(%Location* %1, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @setOne(%Location* %l) #4 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %tmp.v = alloca i32
  %tmp.v1 = alloca i32
  %tmp.v2 = alloca i32
  %tmp.v3 = alloca i32
  br label %code

code:                                             ; preds = %0
  store i32 1, i32* %tmp.v
  %1 = load i32, i32* %tmp.v
  %2 = load %Location*, %Location** %l.addr
  %3 = getelementptr inbounds %Location, %Location* %2, i32 0, i32 1
  %4 = getelementptr inbounds %LineCol, %LineCol* %3, i32 0, i32 0
  store i32 %1, i32* %4
  store i32 1, i32* %tmp.v1
  %5 = load i32, i32* %tmp.v1
  %6 = load %Location*, %Location** %l.addr
  %7 = getelementptr inbounds %Location, %Location* %6, i32 0, i32 1
  %8 = getelementptr inbounds %LineCol, %LineCol* %7, i32 0, i32 1
  store i32 %5, i32* %8
  store i32 1, i32* %tmp.v2
  %9 = load i32, i32* %tmp.v2
  %10 = load %Location*, %Location** %l.addr
  %11 = getelementptr inbounds %Location, %Location* %10, i32 0, i32 2
  %12 = getelementptr inbounds %LineCol, %LineCol* %11, i32 0, i32 0
  store i32 %9, i32* %12
  store i32 1, i32* %tmp.v3
  %13 = load i32, i32* %tmp.v3
  %14 = load %Location*, %Location** %l.addr
  %15 = getelementptr inbounds %Location, %Location* %14, i32 0, i32 2
  %16 = getelementptr inbounds %LineCol, %LineCol* %15, i32 0, i32 1
  store i32 %13, i32* %16
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLocation.488(%Location* sret %_result, %SourceCode %sourceCode) #4 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %sourceCode.addr = alloca %SourceCode
  store %SourceCode %sourceCode, %SourceCode* %sourceCode.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  call void @ctor.155(%Location* %res)
  %1 = getelementptr inbounds %Location, %Location* %res, i32 0, i32 0
  call void @"=.249"(%SourceCode* %1, %SourceCode* %sourceCode.addr)
  call void @setOne(%Location* %res)
  %2 = load %Location*, %Location** %_result.addr
  call void @ctor.177(%Location* %2, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @mkLocation.489(%Location* sret %_result, %SourceCode %sourceCode, %LineCol %start, %LineCol %end) #4 {
  %_result.addr = alloca %Location*
  store %Location* %_result, %Location** %_result.addr
  %sourceCode.addr = alloca %SourceCode
  store %SourceCode %sourceCode, %SourceCode* %sourceCode.addr
  %start.addr = alloca %LineCol
  store %LineCol %start, %LineCol* %start.addr
  %end.addr = alloca %LineCol
  store %LineCol %end, %LineCol* %end.addr
  %res = alloca %Location
  br label %code

code:                                             ; preds = %0
  call void @ctor.155(%Location* %res)
  %1 = getelementptr inbounds %Location, %Location* %res, i32 0, i32 0
  call void @"=.249"(%SourceCode* %1, %SourceCode* %sourceCode.addr)
  %2 = getelementptr inbounds %Location, %Location* %res, i32 0, i32 1
  call void @"=.250"(%LineCol* %2, %LineCol* %start.addr)
  %3 = getelementptr inbounds %Location, %Location* %res, i32 0, i32 2
  call void @"=.250"(%LineCol* %3, %LineCol* %end.addr)
  %4 = load %Location*, %Location** %_result.addr
  call void @ctor.177(%Location* %4, %Location* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @copyStart(%Location* %l, %Location* %other) #4 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %l.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 1
  %3 = load %Location*, %Location** %other.addr
  %4 = getelementptr inbounds %Location, %Location* %3, i32 0, i32 1
  call void @"=.250"(%LineCol* %2, %LineCol* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @setAsStartOf(%Location* %l, %Location* %other) #4 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %l.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 1
  %3 = load %Location*, %Location** %other.addr
  %4 = getelementptr inbounds %Location, %Location* %3, i32 0, i32 1
  call void @"=.250"(%LineCol* %2, %LineCol* %4)
  %5 = load %Location*, %Location** %l.addr
  %6 = getelementptr inbounds %Location, %Location* %5, i32 0, i32 2
  %7 = load %Location*, %Location** %other.addr
  %8 = getelementptr inbounds %Location, %Location* %7, i32 0, i32 1
  call void @"=.250"(%LineCol* %6, %LineCol* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @setAsEndOf(%Location* %l, %Location* %other) #4 {
  %l.addr = alloca %Location*
  store %Location* %l, %Location** %l.addr
  %other.addr = alloca %Location*
  store %Location* %other, %Location** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %Location*, %Location** %l.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 1
  %3 = load %Location*, %Location** %other.addr
  %4 = getelementptr inbounds %Location, %Location* %3, i32 0, i32 2
  call void @"=.250"(%LineCol* %2, %LineCol* %4)
  %5 = load %Location*, %Location** %l.addr
  %6 = getelementptr inbounds %Location, %Location* %5, i32 0, i32 2
  %7 = load %Location*, %Location** %other.addr
  %8 = getelementptr inbounds %Location, %Location* %7, i32 0, i32 2
  call void @"=.250"(%LineCol* %6, %LineCol* %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"<"(%Location* %lhs, %Location* %rhs) #4 {
  %lhs.addr = alloca %Location*
  store %Location* %lhs, %Location** %lhs.addr
  %rhs.addr = alloca %Location*
  store %Location* %rhs, %Location** %rhs.addr
  br label %code

code:                                             ; preds = %0
  br label %if_block

if_block:                                         ; preds = %code
  %1 = load %Location*, %Location** %lhs.addr
  %2 = getelementptr inbounds %Location, %Location* %1, i32 0, i32 1
  %3 = getelementptr inbounds %LineCol, %LineCol* %2, i32 0, i32 0
  %4 = load i32, i32* %3
  %5 = load %Location*, %Location** %rhs.addr
  %6 = getelementptr inbounds %Location, %Location* %5, i32 0, i32 1
  %7 = getelementptr inbounds %LineCol, %LineCol* %6, i32 0, i32 0
  %8 = load i32, i32* %7
  %9 = icmp slt i32 %4, %8
  br i1 %9, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret i1 true

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %10 = load %Location*, %Location** %lhs.addr
  %11 = getelementptr inbounds %Location, %Location* %10, i32 0, i32 1
  %12 = getelementptr inbounds %LineCol, %LineCol* %11, i32 0, i32 0
  %13 = load i32, i32* %12
  %14 = load %Location*, %Location** %rhs.addr
  %15 = getelementptr inbounds %Location, %Location* %14, i32 0, i32 1
  %16 = getelementptr inbounds %LineCol, %LineCol* %15, i32 0, i32 0
  %17 = load i32, i32* %16
  %18 = icmp sgt i32 %13, %17
  br i1 %18, label %if_then2, label %if_end3

if_then2:                                         ; preds = %if_block1
  ret i1 false

if_end3:                                          ; preds = %dumy_block4, %if_block1
  br label %if_block5

dumy_block4:                                      ; No predecessors!
  br label %if_end3

if_block5:                                        ; preds = %if_end3
  %19 = load %Location*, %Location** %lhs.addr
  %20 = getelementptr inbounds %Location, %Location* %19, i32 0, i32 1
  %21 = getelementptr inbounds %LineCol, %LineCol* %20, i32 0, i32 1
  %22 = load i32, i32* %21
  %23 = load %Location*, %Location** %rhs.addr
  %24 = getelementptr inbounds %Location, %Location* %23, i32 0, i32 1
  %25 = getelementptr inbounds %LineCol, %LineCol* %24, i32 0, i32 1
  %26 = load i32, i32* %25
  %27 = icmp slt i32 %22, %26
  br i1 %27, label %if_then6, label %if_end7

if_then6:                                         ; preds = %if_block5
  ret i1 true

if_end7:                                          ; preds = %dumy_block8, %if_block5
  br label %if_block9

dumy_block8:                                      ; No predecessors!
  br label %if_end7

if_block9:                                        ; preds = %if_end7
  %28 = load %Location*, %Location** %lhs.addr
  %29 = getelementptr inbounds %Location, %Location* %28, i32 0, i32 1
  %30 = getelementptr inbounds %LineCol, %LineCol* %29, i32 0, i32 1
  %31 = load i32, i32* %30
  %32 = load %Location*, %Location** %rhs.addr
  %33 = getelementptr inbounds %Location, %Location* %32, i32 0, i32 1
  %34 = getelementptr inbounds %LineCol, %LineCol* %33, i32 0, i32 1
  %35 = load i32, i32* %34
  %36 = icmp sgt i32 %31, %35
  br i1 %36, label %if_then10, label %if_end11

if_then10:                                        ; preds = %if_block9
  ret i1 false

if_end11:                                         ; preds = %dumy_block12, %if_block9
  br label %if_block13

dumy_block12:                                     ; No predecessors!
  br label %if_end11

if_block13:                                       ; preds = %if_end11
  %37 = load %Location*, %Location** %lhs.addr
  %38 = getelementptr inbounds %Location, %Location* %37, i32 0, i32 2
  %39 = getelementptr inbounds %LineCol, %LineCol* %38, i32 0, i32 0
  %40 = load i32, i32* %39
  %41 = load %Location*, %Location** %rhs.addr
  %42 = getelementptr inbounds %Location, %Location* %41, i32 0, i32 2
  %43 = getelementptr inbounds %LineCol, %LineCol* %42, i32 0, i32 0
  %44 = load i32, i32* %43
  %45 = icmp slt i32 %40, %44
  br i1 %45, label %if_then14, label %if_end15

if_then14:                                        ; preds = %if_block13
  ret i1 true

if_end15:                                         ; preds = %dumy_block16, %if_block13
  br label %if_block17

dumy_block16:                                     ; No predecessors!
  br label %if_end15

if_block17:                                       ; preds = %if_end15
  %46 = load %Location*, %Location** %lhs.addr
  %47 = getelementptr inbounds %Location, %Location* %46, i32 0, i32 2
  %48 = getelementptr inbounds %LineCol, %LineCol* %47, i32 0, i32 0
  %49 = load i32, i32* %48
  %50 = load %Location*, %Location** %rhs.addr
  %51 = getelementptr inbounds %Location, %Location* %50, i32 0, i32 2
  %52 = getelementptr inbounds %LineCol, %LineCol* %51, i32 0, i32 0
  %53 = load i32, i32* %52
  %54 = icmp sgt i32 %49, %53
  br i1 %54, label %if_then18, label %if_end19

if_then18:                                        ; preds = %if_block17
  ret i1 false

if_end19:                                         ; preds = %dumy_block20, %if_block17
  %55 = load %Location*, %Location** %lhs.addr
  %56 = getelementptr inbounds %Location, %Location* %55, i32 0, i32 2
  %57 = getelementptr inbounds %LineCol, %LineCol* %56, i32 0, i32 1
  %58 = load i32, i32* %57
  %59 = load %Location*, %Location** %rhs.addr
  %60 = getelementptr inbounds %Location, %Location* %59, i32 0, i32 2
  %61 = getelementptr inbounds %LineCol, %LineCol* %60, i32 0, i32 1
  %62 = load i32, i32* %61
  %63 = icmp slt i32 %58, %62
  ret i1 %63

dumy_block20:                                     ; No predecessors!
  br label %if_end19
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.490(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  call void @ctor.161(%"RawPtr[Char]"* %2)
  %3 = load %String*, %String** %this.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 1
  call void @ctor.161(%"RawPtr[Char]"* %4)
  %5 = load %String*, %String** %this.addr
  %6 = getelementptr inbounds %String, %String* %5, i32 0, i32 2
  call void @ctor.161(%"RawPtr[Char]"* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.491(%String* %this, %String* %other) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  %3 = load %String*, %String** %other.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 0
  call void @ctor.187(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  %5 = load %String*, %String** %this.addr
  %6 = getelementptr inbounds %String, %String* %5, i32 0, i32 1
  %7 = load %String*, %String** %other.addr
  %8 = getelementptr inbounds %String, %String* %7, i32 0, i32 1
  call void @ctor.187(%"RawPtr[Char]"* %6, %"RawPtr[Char]"* %8)
  %9 = load %String*, %String** %this.addr
  %10 = getelementptr inbounds %String, %String* %9, i32 0, i32 2
  %11 = load %String*, %String** %other.addr
  %12 = getelementptr inbounds %String, %String* %11, i32 0, i32 2
  call void @ctor.187(%"RawPtr[Char]"* %10, %"RawPtr[Char]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.492(%String* %this) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.493"(%String* %this, %String* %other) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  %3 = load %String*, %String** %other.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 0
  call void @"=.184"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  %5 = load %String*, %String** %this.addr
  %6 = getelementptr inbounds %String, %String* %5, i32 0, i32 1
  %7 = load %String*, %String** %other.addr
  %8 = getelementptr inbounds %String, %String* %7, i32 0, i32 1
  call void @"=.184"(%"RawPtr[Char]"* %6, %"RawPtr[Char]"* %8)
  %9 = load %String*, %String** %this.addr
  %10 = getelementptr inbounds %String, %String* %9, i32 0, i32 2
  %11 = load %String*, %String** %other.addr
  %12 = getelementptr inbounds %String, %String* %11, i32 0, i32 2
  call void @"=.184"(%"RawPtr[Char]"* %10, %"RawPtr[Char]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.494"(%String* %this, %String* %other) #3 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  %3 = load %String*, %String** %other.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 0
  %5 = call i1 @"==.188"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  br i1 %5, label %cond.true1, label %cond.false2

cond.true:                                        ; preds = %cond.end3
  %6 = load %String*, %String** %this.addr
  %7 = getelementptr inbounds %String, %String* %6, i32 0, i32 2
  %8 = load %String*, %String** %other.addr
  %9 = getelementptr inbounds %String, %String* %8, i32 0, i32 2
  %10 = call i1 @"==.188"(%"RawPtr[Char]"* %7, %"RawPtr[Char]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res4

cond.true1:                                       ; preds = %code
  %11 = load %String*, %String** %this.addr
  %12 = getelementptr inbounds %String, %String* %11, i32 0, i32 1
  %13 = load %String*, %String** %other.addr
  %14 = getelementptr inbounds %String, %String* %13, i32 0, i32 1
  %15 = call i1 @"==.188"(%"RawPtr[Char]"* %12, %"RawPtr[Char]"* %14)
  br label %cond.end3

cond.false2:                                      ; preds = %code
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %15, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.495(%String* %this, i64 %count, i8 %ch) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %count.addr = alloca i64
  store i64 %count, i64* %count.addr
  %ch.addr = alloca i8
  store i8 %ch, i8* %ch.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = load i64, i64* %count.addr
  call void @ctor.194(%String* %1, i64 %2)
  %3 = load %String*, %String** %this.addr
  %4 = getelementptr inbounds %String, %String* %3, i32 0, i32 0
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %4
  %6 = call i8* @bytePtr(%"RawPtr[Char]" %5)
  %7 = load i8, i8* %ch.addr
  %8 = load i64, i64* %count.addr
  call void @_spr_memset(i8* %6, i8 %7, i64 %8)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.496(%String* %this, %"RawPtr[Char]" %_begin, %"RawPtr[Char]" %_end) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %_begin.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %_begin, %"RawPtr[Char]"* %_begin.addr
  %_end.addr = alloca %"RawPtr[Char]"
  store %"RawPtr[Char]" %_end, %"RawPtr[Char]"* %_end.addr
  %size = alloca i64
  %tmp.v = alloca i64
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]", %"RawPtr[Char]"* %_end.addr
  %2 = load %"RawPtr[Char]", %"RawPtr[Char]"* %_begin.addr
  %3 = call i64 @diff(%"RawPtr[Char]" %1, %"RawPtr[Char]" %2)
  store i64 %3, i64* %size
  %4 = load %String*, %String** %this.addr
  %5 = load i64, i64* %size
  store i64 %5, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  call void @ctor.194(%String* %4, i64 %6)
  %7 = load %String*, %String** %this.addr
  %8 = getelementptr inbounds %String, %String* %7, i32 0, i32 0
  %9 = load %"RawPtr[Char]", %"RawPtr[Char]"* %8
  %10 = call i8* @bytePtr(%"RawPtr[Char]" %9)
  %11 = load %"RawPtr[Char]", %"RawPtr[Char]"* %_begin.addr
  %12 = call i8* @bytePtr(%"RawPtr[Char]" %11)
  %13 = load i64, i64* %size
  store i64 %13, i64* %tmp.v1
  %14 = load i64, i64* %tmp.v1
  call void @_spr_memcpy(i8* %10, i8* %12, i64 %14)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i1 @"!="(%String* %this, %String* %other) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %other.addr = alloca %String*
  store %String* %other, %String** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = load %String*, %String** %other.addr
  %3 = call i1 @"==.280"(%String* %1, %String* %2)
  %4 = xor i1 true, %3
  ret i1 %4
}

; Function Attrs: inlinehint nounwind
define internal i8* @at.497(%String* %this, i64 %index) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  %4 = load i64, i64* %index.addr
  store i64 %4, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %3, i64 %5)
  %6 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %7 = call i8* @value(%"RawPtr[Char]" %6)
  ret i8* %7
}

; Function Attrs: inlinehint nounwind
define internal i8* @front.498(%String* %this) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 0
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  %4 = call i8* @value(%"RawPtr[Char]" %3)
  ret i8* %4
}

; Function Attrs: inlinehint nounwind
define internal i8* @back.499(%String* %this) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = getelementptr inbounds %String, %String* %1, i32 0, i32 1
  %3 = load %"RawPtr[Char]", %"RawPtr[Char]"* %2
  store i64 -1, i64* %tmp.v
  %4 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %3, i64 %4)
  %5 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %6 = call i8* @value(%"RawPtr[Char]" %5)
  ret i8* %6
}

; Function Attrs: inlinehint nounwind
define internal void @subrange(%StringRef* sret %_result, %String* %this, i64 %index, i64 %num) #4 {
  %_result.addr = alloca %StringRef*
  store %StringRef* %_result, %StringRef** %_result.addr
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %num.addr = alloca i64
  store i64 %num, i64* %num.addr
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  %"$tmpC1" = alloca %"RawPtr[Char]"
  %tmp.v2 = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringRef*, %StringRef** %_result.addr
  %2 = load %String*, %String** %this.addr
  %3 = getelementptr inbounds %String, %String* %2, i32 0, i32 0
  %4 = load %"RawPtr[Char]", %"RawPtr[Char]"* %3
  %5 = load i64, i64* %index.addr
  store i64 %5, i64* %tmp.v
  %6 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %4, i64 %6)
  %7 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %8 = call i8* @bytePtr(%"RawPtr[Char]" %7)
  %9 = load %String*, %String** %this.addr
  %10 = getelementptr inbounds %String, %String* %9, i32 0, i32 0
  %11 = load %"RawPtr[Char]", %"RawPtr[Char]"* %10
  %12 = load i64, i64* %index.addr
  %13 = load i64, i64* %num.addr
  %14 = add i64 %12, %13
  store i64 %14, i64* %tmp.v2
  %15 = load i64, i64* %tmp.v2
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC1", %"RawPtr[Char]" %11, i64 %15)
  %16 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC1"
  %17 = call i8* @bytePtr(%"RawPtr[Char]" %16)
  call void @ctor.57(%StringRef* %1, i8* %8, i8* %17)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @resize(%String* %this, i64 %n) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %n.addr = alloca i64
  store i64 %n, i64* %n.addr
  %oldSize = alloca i64
  %newEnd = alloca %"RawPtr[Char]"
  %tmp.v = alloca i64
  %"$tmpC" = alloca %"RawPtr[Char]"
  %tmp.v4 = alloca i64
  %newEnd5 = alloca %"RawPtr[Char]"
  %tmp.v6 = alloca i64
  %"$tmpC11" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = call i64 @size.193(%String* %1)
  store i64 %2, i64* %oldSize
  br label %if_block

if_block:                                         ; preds = %code
  %3 = load i64, i64* %n.addr
  %4 = load i64, i64* %oldSize
  %5 = icmp eq i64 %3, %4
  br i1 %5, label %if_then, label %if_end

if_then:                                          ; preds = %if_block
  ret void

if_end:                                           ; preds = %dumy_block, %if_block
  br label %if_block1

dumy_block:                                       ; No predecessors!
  br label %if_end

if_block1:                                        ; preds = %if_end
  %6 = load i64, i64* %n.addr
  %7 = load i64, i64* %oldSize
  %8 = icmp slt i64 %6, %7
  br i1 %8, label %if_then2, label %if_else

if_then2:                                         ; preds = %if_block1
  %9 = load %String*, %String** %this.addr
  %10 = getelementptr inbounds %String, %String* %9, i32 0, i32 0
  %11 = load %"RawPtr[Char]", %"RawPtr[Char]"* %10
  %12 = load i64, i64* %n.addr
  store i64 %12, i64* %tmp.v
  %13 = load i64, i64* %tmp.v
  call void @advance.195(%"RawPtr[Char]"* %newEnd, %"RawPtr[Char]" %11, i64 %13)
  br label %while_block

if_else:                                          ; preds = %if_block1
  %14 = load %String*, %String** %this.addr
  %15 = load i64, i64* %n.addr
  call void @reserve(%String* %14, i64 %15)
  %16 = load %String*, %String** %this.addr
  %17 = getelementptr inbounds %String, %String* %16, i32 0, i32 0
  %18 = load %"RawPtr[Char]", %"RawPtr[Char]"* %17
  %19 = load i64, i64* %n.addr
  store i64 %19, i64* %tmp.v6
  %20 = load i64, i64* %tmp.v6
  call void @advance.195(%"RawPtr[Char]"* %newEnd5, %"RawPtr[Char]" %18, i64 %20)
  br label %while_block7

if_end3:                                          ; preds = %while_end10, %while_end
  ret void

while_block:                                      ; preds = %while_step, %if_then2
  %21 = load %String*, %String** %this.addr
  %22 = getelementptr inbounds %String, %String* %21, i32 0, i32 1
  %23 = call i1 @"==.188"(%"RawPtr[Char]"* %22, %"RawPtr[Char]"* %newEnd)
  %24 = xor i1 true, %23
  br i1 %24, label %while_body, label %while_end

while_body:                                       ; preds = %while_block
  %25 = load %String*, %String** %this.addr
  %26 = getelementptr inbounds %String, %String* %25, i32 0, i32 1
  %27 = load %String*, %String** %this.addr
  %28 = getelementptr inbounds %String, %String* %27, i32 0, i32 1
  %29 = load %"RawPtr[Char]", %"RawPtr[Char]"* %28
  store i64 -1, i64* %tmp.v4
  %30 = load i64, i64* %tmp.v4
  call void @advance.195(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %29, i64 %30)
  call void @"=.184"(%"RawPtr[Char]"* %26, %"RawPtr[Char]"* %"$tmpC")
  %31 = load %String*, %String** %this.addr
  %32 = getelementptr inbounds %String, %String* %31, i32 0, i32 1
  %33 = load %"RawPtr[Char]", %"RawPtr[Char]"* %32
  %34 = call i8* @value(%"RawPtr[Char]" %33)
  %35 = load i8, i8* %34
  br label %while_step

while_step:                                       ; preds = %while_body
  br label %while_block

while_end:                                        ; preds = %while_block
  br label %if_end3

while_block7:                                     ; preds = %while_step9, %if_else
  %36 = load %String*, %String** %this.addr
  %37 = getelementptr inbounds %String, %String* %36, i32 0, i32 1
  %38 = call i1 @"==.188"(%"RawPtr[Char]"* %37, %"RawPtr[Char]"* %newEnd5)
  %39 = xor i1 true, %38
  br i1 %39, label %while_body8, label %while_end10

while_body8:                                      ; preds = %while_block7
  %40 = load %String*, %String** %this.addr
  %41 = getelementptr inbounds %String, %String* %40, i32 0, i32 1
  %42 = load %"RawPtr[Char]", %"RawPtr[Char]"* %41
  %43 = call i8* @value(%"RawPtr[Char]" %42)
  store i8 0, i8* %43
  %44 = load %String*, %String** %this.addr
  %45 = getelementptr inbounds %String, %String* %44, i32 0, i32 1
  %46 = load %String*, %String** %this.addr
  %47 = getelementptr inbounds %String, %String* %46, i32 0, i32 1
  %48 = load %"RawPtr[Char]", %"RawPtr[Char]"* %47
  call void @advance.189(%"RawPtr[Char]"* %"$tmpC11", %"RawPtr[Char]" %48)
  call void @"=.184"(%"RawPtr[Char]"* %45, %"RawPtr[Char]"* %"$tmpC11")
  br label %while_step9

while_step9:                                      ; preds = %while_body8
  br label %while_block7

while_end10:                                      ; preds = %while_block7
  br label %if_end3
}

; Function Attrs: inlinehint nounwind
define internal void @insertAfter(%String* %this, i8 %value, %StringRef %pos) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %value.addr = alloca i8
  store i8 %value, i8* %value.addr
  %pos.addr = alloca %StringRef
  store %StringRef %pos, %StringRef* %pos.addr
  %tmp.v = alloca %StringRef
  %"$tmpC" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  %2 = load i8, i8* %value.addr
  %3 = load %StringRef, %StringRef* %pos.addr
  call void @_backPtr(%"RawPtr[Char]"* %"$tmpC", %StringRef %3)
  %4 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %5 = call i8* @bytePtr(%"RawPtr[Char]" %4)
  %6 = load %String*, %String** %this.addr
  %7 = getelementptr inbounds %String, %String* %6, i32 0, i32 1
  %8 = load %"RawPtr[Char]", %"RawPtr[Char]"* %7
  %9 = call i8* @bytePtr(%"RawPtr[Char]" %8)
  call void @ctor.57(%StringRef* %tmp.v, i8* %5, i8* %9)
  %10 = load %StringRef, %StringRef* %tmp.v
  call void @insertBefore.382(%String* %1, i8 %2, %StringRef %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @_backPtr(%"RawPtr[Char]"* sret %_result, %StringRef %s) #4 {
  %_result.addr = alloca %"RawPtr[Char]"*
  store %"RawPtr[Char]"* %_result, %"RawPtr[Char]"** %_result.addr
  %s.addr = alloca %StringRef
  store %StringRef %s, %StringRef* %s.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"RawPtr[Char]"*, %"RawPtr[Char]"** %_result.addr
  %2 = getelementptr inbounds %StringRef, %StringRef* %s.addr, i32 0, i32 1
  %3 = load i8*, i8** %2
  call void @ctor.186(%"RawPtr[Char]"* %1, i8* %3)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @remove.500(%String* %this, i64 %index) #4 {
  %this.addr = alloca %String*
  store %String* %this, %String** %this.addr
  %index.addr = alloca i64
  store i64 %index, i64* %index.addr
  %r = alloca %StringRef
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %this.addr
  call void @all.385(%StringRef* %r, %String* %1)
  %2 = load i64, i64* %index.addr
  call void @popFront.60(%StringRef* %r, i64 %2)
  %3 = load %String*, %String** %this.addr
  %4 = call i64 @size.193(%String* %3)
  %5 = load i64, i64* %index.addr
  %6 = call i64 @_SizeType_opMinus(i64 %4, i64 %5)
  store i64 1, i64* %tmp.v
  %7 = load i64, i64* %tmp.v
  %8 = call i64 @_SizeType_opMinus(i64 %6, i64 %7)
  call void @popBack.61(%StringRef* %r, i64 %8)
  %9 = load %String*, %String** %this.addr
  %10 = load %StringRef, %StringRef* %r
  call void @remove(%String* %9, %StringRef %10)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+.501"(%String* sret %_result, %String %x, %String %y) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca %String
  store %String %x, %String* %x.addr
  %y.addr = alloca %String
  store %String %y, %String* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i64
  %res = alloca %String
  %"$tmpC" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size.193(%String* %x.addr)
  store i64 %1, i64* %sz1
  %2 = call i64 @size.193(%String* %y.addr)
  store i64 %2, i64* %sz2
  %3 = load i64, i64* %sz1
  %4 = load i64, i64* %sz2
  %5 = add i64 %3, %4
  call void @ctor.194(%String* %res, i64 %5)
  %6 = getelementptr inbounds %String, %String* %res, i32 0, i32 0
  %7 = load %"RawPtr[Char]", %"RawPtr[Char]"* %6
  %8 = call i8* @bytePtr(%"RawPtr[Char]" %7)
  %9 = getelementptr inbounds %String, %String* %x.addr, i32 0, i32 0
  %10 = load %"RawPtr[Char]", %"RawPtr[Char]"* %9
  %11 = call i8* @bytePtr(%"RawPtr[Char]" %10)
  %12 = load i64, i64* %sz1
  call void @_spr_memcpy(i8* %8, i8* %11, i64 %12)
  %13 = getelementptr inbounds %String, %String* %res, i32 0, i32 0
  %14 = load %"RawPtr[Char]", %"RawPtr[Char]"* %13
  %15 = load i64, i64* %sz1
  call void @advance(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %14, i64 %15)
  %16 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %17 = call i8* @bytePtr(%"RawPtr[Char]" %16)
  %18 = getelementptr inbounds %String, %String* %y.addr, i32 0, i32 0
  %19 = load %"RawPtr[Char]", %"RawPtr[Char]"* %18
  %20 = call i8* @bytePtr(%"RawPtr[Char]" %19)
  %21 = load i64, i64* %sz2
  call void @_spr_memcpy(i8* %17, i8* %20, i64 %21)
  %22 = load %String*, %String** %_result.addr
  call void @ctor.192(%String* %22, %String* %res)
  call void @dtor.229(%String* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.229(%String* %res)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @"+.502"(%String* sret %_result, %String %x, %StringRef %y) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %x.addr = alloca %String
  store %String %x, %String* %x.addr
  %y.addr = alloca %StringRef
  store %StringRef %y, %StringRef* %y.addr
  %sz1 = alloca i64
  %sz2 = alloca i64
  %res = alloca %String
  %"$tmpC" = alloca %"RawPtr[Char]"
  br label %code

code:                                             ; preds = %0
  %1 = call i64 @size.193(%String* %x.addr)
  store i64 %1, i64* %sz1
  %2 = call i64 @size(%StringRef* %y.addr)
  store i64 %2, i64* %sz2
  %3 = load i64, i64* %sz1
  %4 = load i64, i64* %sz2
  %5 = add i64 %3, %4
  call void @ctor.194(%String* %res, i64 %5)
  %6 = getelementptr inbounds %String, %String* %res, i32 0, i32 0
  %7 = load %"RawPtr[Char]", %"RawPtr[Char]"* %6
  %8 = call i8* @bytePtr(%"RawPtr[Char]" %7)
  %9 = getelementptr inbounds %String, %String* %x.addr, i32 0, i32 0
  %10 = load %"RawPtr[Char]", %"RawPtr[Char]"* %9
  %11 = call i8* @bytePtr(%"RawPtr[Char]" %10)
  %12 = load i64, i64* %sz1
  call void @_spr_memcpy(i8* %8, i8* %11, i64 %12)
  %13 = getelementptr inbounds %String, %String* %res, i32 0, i32 0
  %14 = load %"RawPtr[Char]", %"RawPtr[Char]"* %13
  %15 = load i64, i64* %sz1
  call void @advance(%"RawPtr[Char]"* %"$tmpC", %"RawPtr[Char]" %14, i64 %15)
  %16 = load %"RawPtr[Char]", %"RawPtr[Char]"* %"$tmpC"
  %17 = call i8* @bytePtr(%"RawPtr[Char]" %16)
  %18 = getelementptr inbounds %StringRef, %StringRef* %y.addr, i32 0, i32 0
  %19 = load i8*, i8** %18
  %20 = load i64, i64* %sz2
  call void @_spr_memcpy(i8* %17, i8* %19, i64 %20)
  %21 = load %String*, %String** %_result.addr
  call void @ctor.192(%String* %21, %String* %res)
  call void @dtor.229(%String* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.229(%String* %res)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.503(%StringOutputStream* %this, %StringOutputStream* %other) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %other.addr = alloca %StringOutputStream*
  store %StringOutputStream* %other, %StringOutputStream** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  %3 = load %StringOutputStream*, %StringOutputStream** %other.addr
  %4 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %3, i32 0, i32 0
  call void @ctor.192(%String* %2, %String* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.504"(%StringOutputStream* %this, %StringOutputStream* %other) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %other.addr = alloca %StringOutputStream*
  store %StringOutputStream* %other, %StringOutputStream** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  %3 = load %StringOutputStream*, %StringOutputStream** %other.addr
  %4 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %3, i32 0, i32 0
  %5 = call %String* @"=.256"(%String* %2, %String* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.505"(%StringOutputStream* %this, %StringOutputStream* %other) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %other.addr = alloca %StringOutputStream*
  store %StringOutputStream* %other, %StringOutputStream** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  %3 = load %StringOutputStream*, %StringOutputStream** %other.addr
  %4 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %3, i32 0, i32 0
  %5 = call i1 @"==.280"(%String* %2, %String* %4)
  ret i1 %5
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<.506"(%StringOutputStream* %this, %String* %s) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %s.addr = alloca %String*
  store %String* %s, %String** %s.addr
  %"$tmpC" = alloca %StringRef
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  %3 = load %String*, %String** %s.addr
  call void @all.385(%StringRef* %"$tmpC", %String* %3)
  %4 = load %StringRef, %StringRef* %"$tmpC"
  call void @append(%String* %2, %StringRef %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"<<<.507"(%StringOutputStream* %this, double %x) #3 {
  %this.addr = alloca %StringOutputStream*
  store %StringOutputStream* %this, %StringOutputStream** %this.addr
  %x.addr = alloca double
  store double %x, double* %x.addr
  %"$tmpC" = alloca %StringRef
  %"$tmpC1" = alloca %String
  %tmp.v = alloca i64
  br label %code

code:                                             ; preds = %0
  %1 = load %StringOutputStream*, %StringOutputStream** %this.addr
  %2 = getelementptr inbounds %StringOutputStream, %StringOutputStream* %1, i32 0, i32 0
  %3 = load double, double* %x.addr
  %4 = fptoui double %3 to i64
  store i64 %4, i64* %tmp.v
  %5 = load i64, i64* %tmp.v
  call void @ulongToString(%String* %"$tmpC1", i64 %5)
  call void @all.385(%StringRef* %"$tmpC", %String* %"$tmpC1")
  %6 = load %StringRef, %StringRef* %"$tmpC"
  call void @append(%String* %2, %StringRef %6)
  call void @dtor.229(%String* %"$tmpC1")
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @toString.508(%String* sret %_result) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %String*, %String** %_result.addr
  call void @ctor.164(%String* %1)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.509(%"ContiguousMemoryRange[LocString]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  call void @ctor.440(%"RawPtr[LocString]"* %2)
  %3 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 1
  call void @ctor.440(%"RawPtr[LocString]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.510(%"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %other, %"ContiguousMemoryRange[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  call void @ctor.464(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %4)
  %5 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %6 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %7, i32 0, i32 1
  call void @ctor.464(%"RawPtr[LocString]"* %6, %"RawPtr[LocString]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.511(%"ContiguousMemoryRange[LocString]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.512"(%"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %other, %"ContiguousMemoryRange[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  call void @"=.450"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %4)
  %5 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %6 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %7, i32 0, i32 1
  call void @"=.450"(%"RawPtr[LocString]"* %6, %"RawPtr[LocString]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.513"(%"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %this, %"ContiguousMemoryRange[LocString]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[LocString]"*
  store %"ContiguousMemoryRange[LocString]"* %other, %"ContiguousMemoryRange[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %3, i32 0, i32 0
  %5 = call i1 @"==.443"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %this.addr
  %7 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %6, i32 0, i32 1
  %8 = load %"ContiguousMemoryRange[LocString]"*, %"ContiguousMemoryRange[LocString]"** %other.addr
  %9 = getelementptr inbounds %"ContiguousMemoryRange[LocString]", %"ContiguousMemoryRange[LocString]"* %8, i32 0, i32 1
  %10 = call i1 @"==.443"(%"RawPtr[LocString]"* %7, %"RawPtr[LocString]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.514(%"ContiguousMemoryRange[Char]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %1, i32 0, i32 0
  call void @ctor.161(%"RawPtr[Char]"* %2)
  %3 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %3, i32 0, i32 1
  call void @ctor.161(%"RawPtr[Char]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.515(%"ContiguousMemoryRange[Char]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.516"(%"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %other, %"ContiguousMemoryRange[Char]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %3, i32 0, i32 0
  call void @"=.184"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  %5 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %6 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %7, i32 0, i32 1
  call void @"=.184"(%"RawPtr[Char]"* %6, %"RawPtr[Char]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.517"(%"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %this, %"ContiguousMemoryRange[Char]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[Char]"*
  store %"ContiguousMemoryRange[Char]"* %other, %"ContiguousMemoryRange[Char]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %3, i32 0, i32 0
  %5 = call i1 @"==.188"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %this.addr
  %7 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %6, i32 0, i32 1
  %8 = load %"ContiguousMemoryRange[Char]"*, %"ContiguousMemoryRange[Char]"** %other.addr
  %9 = getelementptr inbounds %"ContiguousMemoryRange[Char]", %"ContiguousMemoryRange[Char]"* %8, i32 0, i32 1
  %10 = call i1 @"==.188"(%"RawPtr[Char]"* %7, %"RawPtr[Char]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.518(%"ContiguousMemoryRange[Token]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  call void @ctor.168(%"RawPtr[Token]"* %2)
  %3 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 1
  call void @ctor.168(%"RawPtr[Token]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.519(%"ContiguousMemoryRange[Token]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.520"(%"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %other, %"ContiguousMemoryRange[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  call void @"=.202"(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %4)
  %5 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %6 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %7, i32 0, i32 1
  call void @"=.202"(%"RawPtr[Token]"* %6, %"RawPtr[Token]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.521"(%"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %this, %"ContiguousMemoryRange[Token]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[Token]"*
  store %"ContiguousMemoryRange[Token]"* %other, %"ContiguousMemoryRange[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %3, i32 0, i32 0
  %5 = call i1 @"==.208"(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %this.addr
  %7 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %6, i32 0, i32 1
  %8 = load %"ContiguousMemoryRange[Token]"*, %"ContiguousMemoryRange[Token]"** %other.addr
  %9 = getelementptr inbounds %"ContiguousMemoryRange[Token]", %"ContiguousMemoryRange[Token]"* %8, i32 0, i32 1
  %10 = call i1 @"==.208"(%"RawPtr[Token]"* %7, %"RawPtr[Token]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.522(%"ContiguousMemoryRange[UInt]"* %this, %"RawPtr[UInt]" %f_begin, %"RawPtr[UInt]" %f_end) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[UInt]"*
  store %"ContiguousMemoryRange[UInt]"* %this, %"ContiguousMemoryRange[UInt]"** %this.addr
  %f_begin.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %f_begin, %"RawPtr[UInt]"* %f_begin.addr
  %f_end.addr = alloca %"RawPtr[UInt]"
  store %"RawPtr[UInt]" %f_end, %"RawPtr[UInt]"* %f_end.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %1, i32 0, i32 0
  call void @ctor.220(%"RawPtr[UInt]"* %2, %"RawPtr[UInt]"* %f_begin.addr)
  %3 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %3, i32 0, i32 1
  call void @ctor.220(%"RawPtr[UInt]"* %4, %"RawPtr[UInt]"* %f_end.addr)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.523(%"ContiguousMemoryRange[UInt]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[UInt]"*
  store %"ContiguousMemoryRange[UInt]"* %this, %"ContiguousMemoryRange[UInt]"** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %1, i32 0, i32 0
  call void @ctor.170(%"RawPtr[UInt]"* %2)
  %3 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %this.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %3, i32 0, i32 1
  call void @ctor.170(%"RawPtr[UInt]"* %4)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.524(%"ContiguousMemoryRange[UInt]"* %this, %"ContiguousMemoryRange[UInt]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[UInt]"*
  store %"ContiguousMemoryRange[UInt]"* %this, %"ContiguousMemoryRange[UInt]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[UInt]"*
  store %"ContiguousMemoryRange[UInt]"* %other, %"ContiguousMemoryRange[UInt]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %3, i32 0, i32 0
  call void @ctor.220(%"RawPtr[UInt]"* %2, %"RawPtr[UInt]"* %4)
  %5 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %this.addr
  %6 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %7, i32 0, i32 1
  call void @ctor.220(%"RawPtr[UInt]"* %6, %"RawPtr[UInt]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.525(%"ContiguousMemoryRange[UInt]"* %this) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[UInt]"*
  store %"ContiguousMemoryRange[UInt]"* %this, %"ContiguousMemoryRange[UInt]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.526"(%"ContiguousMemoryRange[UInt]"* %this, %"ContiguousMemoryRange[UInt]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[UInt]"*
  store %"ContiguousMemoryRange[UInt]"* %this, %"ContiguousMemoryRange[UInt]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[UInt]"*
  store %"ContiguousMemoryRange[UInt]"* %other, %"ContiguousMemoryRange[UInt]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %3, i32 0, i32 0
  call void @"=.215"(%"RawPtr[UInt]"* %2, %"RawPtr[UInt]"* %4)
  %5 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %this.addr
  %6 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %5, i32 0, i32 1
  %7 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %other.addr
  %8 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %7, i32 0, i32 1
  call void @"=.215"(%"RawPtr[UInt]"* %6, %"RawPtr[UInt]"* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.527"(%"ContiguousMemoryRange[UInt]"* %this, %"ContiguousMemoryRange[UInt]"* %other) #3 {
  %this.addr = alloca %"ContiguousMemoryRange[UInt]"*
  store %"ContiguousMemoryRange[UInt]"* %this, %"ContiguousMemoryRange[UInt]"** %this.addr
  %other.addr = alloca %"ContiguousMemoryRange[UInt]"*
  store %"ContiguousMemoryRange[UInt]"* %other, %"ContiguousMemoryRange[UInt]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %this.addr
  %2 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %1, i32 0, i32 0
  %3 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %other.addr
  %4 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %3, i32 0, i32 0
  %5 = call i1 @"==.221"(%"RawPtr[UInt]"* %2, %"RawPtr[UInt]"* %4)
  br i1 %5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %code
  %6 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %this.addr
  %7 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %6, i32 0, i32 1
  %8 = load %"ContiguousMemoryRange[UInt]"*, %"ContiguousMemoryRange[UInt]"** %other.addr
  %9 = getelementptr inbounds %"ContiguousMemoryRange[UInt]", %"ContiguousMemoryRange[UInt]"* %8, i32 0, i32 1
  %10 = call i1 @"==.221"(%"RawPtr[UInt]"* %7, %"RawPtr[UInt]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %code
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.528(%"RawPtr[LocString]"* %this) #3 {
  %this.addr = alloca %"RawPtr[LocString]"*
  store %"RawPtr[LocString]"* %this, %"RawPtr[LocString]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.529(%"RawPtr[Token]"* %this) #3 {
  %this.addr = alloca %"RawPtr[Token]"*
  store %"RawPtr[Token]"* %this, %"RawPtr[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.530(%"RawPtr[UInt]"* %this) #3 {
  %this.addr = alloca %"RawPtr[UInt]"*
  store %"RawPtr[UInt]"* %this, %"RawPtr[UInt]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.sqrt.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.sin.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.cos.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.powi.f32(float, i32) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.pow.f32(float, float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.exp.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.exp2.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.log.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.log10.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.log2.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

declare float @llvm.truc.f32(float)

; Function Attrs: nounwind readnone speculatable
declare float @llvm.rint.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.sqrt.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.sin.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.cos.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.powi.f64(double, i32) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.pow.f64(double, double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.exp.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.exp2.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.log.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.log10.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.log2.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #6

declare double @llvm.truc.f64(double)

; Function Attrs: nounwind readnone speculatable
declare double @llvm.rint.f64(double) #6

; Function Attrs: alwaysinline nounwind
define internal void @ctor.531(%"Vector[LocString]"* %this, %"Vector[LocString]"* %other) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %1, i32 0, i32 0
  %3 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %4 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %3, i32 0, i32 0
  call void @ctor.464(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %4)
  %5 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %6 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %5, i32 0, i32 1
  %7 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %8 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %7, i32 0, i32 1
  call void @ctor.464(%"RawPtr[LocString]"* %6, %"RawPtr[LocString]"* %8)
  %9 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %10 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %9, i32 0, i32 2
  %11 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %12 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %11, i32 0, i32 2
  call void @ctor.464(%"RawPtr[LocString]"* %10, %"RawPtr[LocString]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.532(%"Vector[LocString]"* %this) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.533"(%"Vector[LocString]"* %this, %"Vector[LocString]"* %other) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %1, i32 0, i32 0
  %3 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %4 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %3, i32 0, i32 0
  call void @"=.450"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %4)
  %5 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %6 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %5, i32 0, i32 1
  %7 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %8 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %7, i32 0, i32 1
  call void @"=.450"(%"RawPtr[LocString]"* %6, %"RawPtr[LocString]"* %8)
  %9 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %10 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %9, i32 0, i32 2
  %11 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %12 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %11, i32 0, i32 2
  call void @"=.450"(%"RawPtr[LocString]"* %10, %"RawPtr[LocString]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.534"(%"Vector[LocString]"* %this, %"Vector[LocString]"* %other) #3 {
  %this.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %this, %"Vector[LocString]"** %this.addr
  %other.addr = alloca %"Vector[LocString]"*
  store %"Vector[LocString]"* %other, %"Vector[LocString]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %2 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %1, i32 0, i32 0
  %3 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %4 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %3, i32 0, i32 0
  %5 = call i1 @"==.443"(%"RawPtr[LocString]"* %2, %"RawPtr[LocString]"* %4)
  br i1 %5, label %cond.true1, label %cond.false2

cond.true:                                        ; preds = %cond.end3
  %6 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %7 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %6, i32 0, i32 2
  %8 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %9 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %8, i32 0, i32 2
  %10 = call i1 @"==.443"(%"RawPtr[LocString]"* %7, %"RawPtr[LocString]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res4

cond.true1:                                       ; preds = %code
  %11 = load %"Vector[LocString]"*, %"Vector[LocString]"** %this.addr
  %12 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %11, i32 0, i32 1
  %13 = load %"Vector[LocString]"*, %"Vector[LocString]"** %other.addr
  %14 = getelementptr inbounds %"Vector[LocString]", %"Vector[LocString]"* %13, i32 0, i32 1
  %15 = call i1 @"==.443"(%"RawPtr[LocString]"* %12, %"RawPtr[LocString]"* %14)
  br label %cond.end3

cond.false2:                                      ; preds = %code
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %15, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.535(%"Vector[Char]"* %this, %"Vector[Char]"* %other) #3 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %other.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %other, %"Vector[Char]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %4 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %3, i32 0, i32 0
  call void @ctor.187(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  %5 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %5, i32 0, i32 1
  %7 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %8 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %7, i32 0, i32 1
  call void @ctor.187(%"RawPtr[Char]"* %6, %"RawPtr[Char]"* %8)
  %9 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %9, i32 0, i32 2
  %11 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %12 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %11, i32 0, i32 2
  call void @ctor.187(%"RawPtr[Char]"* %10, %"RawPtr[Char]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.536(%"Vector[Char]"* %this) #3 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.537"(%"Vector[Char]"* %this, %"Vector[Char]"* %other) #3 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %other.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %other, %"Vector[Char]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %4 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %3, i32 0, i32 0
  call void @"=.184"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  %5 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %5, i32 0, i32 1
  %7 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %8 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %7, i32 0, i32 1
  call void @"=.184"(%"RawPtr[Char]"* %6, %"RawPtr[Char]"* %8)
  %9 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %9, i32 0, i32 2
  %11 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %12 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %11, i32 0, i32 2
  call void @"=.184"(%"RawPtr[Char]"* %10, %"RawPtr[Char]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.538"(%"Vector[Char]"* %this, %"Vector[Char]"* %other) #3 {
  %this.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %this, %"Vector[Char]"** %this.addr
  %other.addr = alloca %"Vector[Char]"*
  store %"Vector[Char]"* %other, %"Vector[Char]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %1, i32 0, i32 0
  %3 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %4 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %3, i32 0, i32 0
  %5 = call i1 @"==.188"(%"RawPtr[Char]"* %2, %"RawPtr[Char]"* %4)
  br i1 %5, label %cond.true1, label %cond.false2

cond.true:                                        ; preds = %cond.end3
  %6 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %7 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %6, i32 0, i32 2
  %8 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %9 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %8, i32 0, i32 2
  %10 = call i1 @"==.188"(%"RawPtr[Char]"* %7, %"RawPtr[Char]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res4

cond.true1:                                       ; preds = %code
  %11 = load %"Vector[Char]"*, %"Vector[Char]"** %this.addr
  %12 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %11, i32 0, i32 1
  %13 = load %"Vector[Char]"*, %"Vector[Char]"** %other.addr
  %14 = getelementptr inbounds %"Vector[Char]", %"Vector[Char]"* %13, i32 0, i32 1
  %15 = call i1 @"==.188"(%"RawPtr[Char]"* %12, %"RawPtr[Char]"* %14)
  br label %cond.end3

cond.false2:                                      ; preds = %code
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %15, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.539(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %4 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %3, i32 0, i32 0
  call void @ctor.207(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %4)
  %5 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %5, i32 0, i32 1
  %7 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %8 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %7, i32 0, i32 1
  call void @ctor.207(%"RawPtr[Token]"* %6, %"RawPtr[Token]"* %8)
  %9 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %9, i32 0, i32 2
  %11 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %12 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %11, i32 0, i32 2
  call void @ctor.207(%"RawPtr[Token]"* %10, %"RawPtr[Token]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.540(%"Vector[Token]"* %this) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.541"(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %4 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %3, i32 0, i32 0
  call void @"=.202"(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %4)
  %5 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %6 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %5, i32 0, i32 1
  %7 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %8 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %7, i32 0, i32 1
  call void @"=.202"(%"RawPtr[Token]"* %6, %"RawPtr[Token]"* %8)
  %9 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %10 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %9, i32 0, i32 2
  %11 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %12 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %11, i32 0, i32 2
  call void @"=.202"(%"RawPtr[Token]"* %10, %"RawPtr[Token]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.542"(%"Vector[Token]"* %this, %"Vector[Token]"* %other) #3 {
  %this.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %this, %"Vector[Token]"** %this.addr
  %other.addr = alloca %"Vector[Token]"*
  store %"Vector[Token]"* %other, %"Vector[Token]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %2 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %1, i32 0, i32 0
  %3 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %4 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %3, i32 0, i32 0
  %5 = call i1 @"==.208"(%"RawPtr[Token]"* %2, %"RawPtr[Token]"* %4)
  br i1 %5, label %cond.true1, label %cond.false2

cond.true:                                        ; preds = %cond.end3
  %6 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %7 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %6, i32 0, i32 2
  %8 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %9 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %8, i32 0, i32 2
  %10 = call i1 @"==.208"(%"RawPtr[Token]"* %7, %"RawPtr[Token]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res4

cond.true1:                                       ; preds = %code
  %11 = load %"Vector[Token]"*, %"Vector[Token]"** %this.addr
  %12 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %11, i32 0, i32 1
  %13 = load %"Vector[Token]"*, %"Vector[Token]"** %other.addr
  %14 = getelementptr inbounds %"Vector[Token]", %"Vector[Token]"* %13, i32 0, i32 1
  %15 = call i1 @"==.208"(%"RawPtr[Token]"* %12, %"RawPtr[Token]"* %14)
  br label %cond.end3

cond.false2:                                      ; preds = %code
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %15, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.543(%"Vector[UInt]"* %this, %"Vector[UInt]"* %other) #3 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %other.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %other, %"Vector[UInt]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 0
  %3 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %4 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %3, i32 0, i32 0
  call void @ctor.220(%"RawPtr[UInt]"* %2, %"RawPtr[UInt]"* %4)
  %5 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %6 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %5, i32 0, i32 1
  %7 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %8 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %7, i32 0, i32 1
  call void @ctor.220(%"RawPtr[UInt]"* %6, %"RawPtr[UInt]"* %8)
  %9 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %10 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %9, i32 0, i32 2
  %11 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %12 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %11, i32 0, i32 2
  call void @ctor.220(%"RawPtr[UInt]"* %10, %"RawPtr[UInt]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.544(%"Vector[UInt]"* %this) #3 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.545"(%"Vector[UInt]"* %this, %"Vector[UInt]"* %other) #3 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %other.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %other, %"Vector[UInt]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 0
  %3 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %4 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %3, i32 0, i32 0
  call void @"=.215"(%"RawPtr[UInt]"* %2, %"RawPtr[UInt]"* %4)
  %5 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %6 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %5, i32 0, i32 1
  %7 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %8 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %7, i32 0, i32 1
  call void @"=.215"(%"RawPtr[UInt]"* %6, %"RawPtr[UInt]"* %8)
  %9 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %10 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %9, i32 0, i32 2
  %11 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %12 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %11, i32 0, i32 2
  call void @"=.215"(%"RawPtr[UInt]"* %10, %"RawPtr[UInt]"* %12)
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal i1 @"==.546"(%"Vector[UInt]"* %this, %"Vector[UInt]"* %other) #3 {
  %this.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %this, %"Vector[UInt]"** %this.addr
  %other.addr = alloca %"Vector[UInt]"*
  store %"Vector[UInt]"* %other, %"Vector[UInt]"** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %2 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %1, i32 0, i32 0
  %3 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %4 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %3, i32 0, i32 0
  %5 = call i1 @"==.221"(%"RawPtr[UInt]"* %2, %"RawPtr[UInt]"* %4)
  br i1 %5, label %cond.true1, label %cond.false2

cond.true:                                        ; preds = %cond.end3
  %6 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %7 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %6, i32 0, i32 2
  %8 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %9 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %8, i32 0, i32 2
  %10 = call i1 @"==.221"(%"RawPtr[UInt]"* %7, %"RawPtr[UInt]"* %9)
  br label %cond.end

cond.false:                                       ; preds = %cond.end3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.res4 = phi i1 [ %10, %cond.true ], [ false, %cond.false ]
  ret i1 %cond.res4

cond.true1:                                       ; preds = %code
  %11 = load %"Vector[UInt]"*, %"Vector[UInt]"** %this.addr
  %12 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %11, i32 0, i32 1
  %13 = load %"Vector[UInt]"*, %"Vector[UInt]"** %other.addr
  %14 = getelementptr inbounds %"Vector[UInt]", %"Vector[UInt]"* %13, i32 0, i32 1
  %15 = call i1 @"==.221"(%"RawPtr[UInt]"* %12, %"RawPtr[UInt]"* %14)
  br label %cond.end3

cond.false2:                                      ; preds = %code
  br label %cond.end3

cond.end3:                                        ; preds = %cond.false2, %cond.true1
  %cond.res = phi i1 [ %15, %cond.true1 ], [ false, %cond.false2 ]
  br i1 %cond.res, label %cond.true, label %cond.false
}

; Function Attrs: inlinehint nounwind
define internal i1 @isAlnum(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @isalnum(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @isalnum(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isBlank(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @isblank(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @isblank(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isCntrl(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @iscntrl(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @iscntrl(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isGraph(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @isgraph(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @isgraph(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isLower(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @islower(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @islower(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isPrint(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @isprint(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @isprint(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isPunct(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @ispunct(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @ispunct(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isSpace(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @isspace(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @isspace(i32)

; Function Attrs: inlinehint nounwind
define internal i1 @isUpper(i8 %c) #4 {
  %c.addr = alloca i8
  store i8 %c, i8* %c.addr
  %tmp.v = alloca i32
  br label %code

code:                                             ; preds = %0
  %1 = load i8, i8* %c.addr
  call void @_ass_32_8z(i32* %tmp.v, i8 %1)
  %2 = load i32, i32* %tmp.v
  %3 = call i32 @isupper(i32 %2)
  %4 = icmp ne i32 0, %3
  ret i1 %4
}

declare i32 @isupper(i32)

declare void @exit(i32)

; Function Attrs: inlinehint nounwind
define internal i32 @systemCall(%StringRef %cmd) #4 {
  %cmd.addr = alloca %StringRef
  store %StringRef %cmd, %StringRef* %cmd.addr
  br label %code

code:                                             ; preds = %0
  %1 = call i8* @cStr(%StringRef* %cmd.addr)
  %2 = call i32 bitcast (void (i8*)* @system to i32 (i8*)*)(i8* %1)
  ret i32 %2
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.547(%File* %this) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @ctor.548(%File* %this, %File* %other) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %other.addr = alloca %File*
  store %File* %other, %File** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %other.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %File*, %File** %this.addr
  %5 = getelementptr inbounds %File, %File* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @dtor.549(%File* %this) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  ret void
}

; Function Attrs: alwaysinline nounwind
define internal void @"=.550"(%File* %this, %File* %other) #3 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %other.addr = alloca %File*
  store %File* %other, %File** %other.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %other.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  %3 = load i8*, i8** %2
  %4 = load %File*, %File** %this.addr
  %5 = getelementptr inbounds %File, %File* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @ctor.551(%File* %this, i8* %handle) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %handle.addr = alloca i8*
  store i8* %handle, i8** %handle.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  %2 = getelementptr inbounds %File, %File* %1, i32 0, i32 0
  store i8* null, i8** %2
  %3 = load i8*, i8** %handle.addr
  %4 = load %File*, %File** %this.addr
  %5 = getelementptr inbounds %File, %File* %4, i32 0, i32 0
  store i8* %3, i8** %5
  ret void
}

; Function Attrs: inlinehint nounwind
define internal void @openFile(%File* sret %_result, %StringRef %filename, %StringRef %mode) #4 {
  %_result.addr = alloca %File*
  store %File* %_result, %File** %_result.addr
  %filename.addr = alloca %StringRef
  store %StringRef %filename, %StringRef* %filename.addr
  %mode.addr = alloca %StringRef
  store %StringRef %mode, %StringRef* %mode.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %_result.addr
  %2 = call i8* @cStr(%StringRef* %filename.addr)
  %3 = call i8* @cStr(%StringRef* %mode.addr)
  %4 = call i8* @fopen(i8* %2, i8* %3)
  call void @ctor.551(%File* %1, i8* %4)
  ret void
}

; Function Attrs: inlinehint nounwind
define internal i32 @flush.552(%File* %this) #4 {
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  br label %code

code:                                             ; preds = %0
  %1 = load %File*, %File** %this.addr
  %2 = call i1 @isOpen(%File* %1)
  br i1 %2, label %cond_alt1, label %cond_alt2

cond_alt1:                                        ; preds = %code
  %3 = load %File*, %File** %this.addr
  %4 = getelementptr inbounds %File, %File* %3, i32 0, i32 0
  %5 = load i8*, i8** %4
  %6 = call i32 bitcast (i32 (%struct._IO_FILE*)* @fflush to i32 (i8*)*)(i8* %5)
  br label %cond_end

cond_alt2:                                        ; preds = %code
  br label %cond_end

cond_end:                                         ; preds = %cond_alt2, %cond_alt1
  %cond = phi i32 [ %6, %cond_alt1 ], [ -1, %cond_alt2 ]
  ret i32 %cond
}

; Function Attrs: inlinehint nounwind
define internal void @readLine(%String* sret %_result, %File* %this) #4 {
  %_result.addr = alloca %String*
  store %String* %_result, %String** %_result.addr
  %this.addr = alloca %File*
  store %File* %this, %File** %this.addr
  %res = alloca %String
  %tmp.v = alloca i64
  %cstr = alloca i8*
  %tmp.v1 = alloca i64
  br label %code

code:                                             ; preds = %0
  store i64 256, i64* %tmp.v
  %1 = load i64, i64* %tmp.v
  call void @ctor.194(%String* %res, i64 %1)
  store i64 0, i64* %tmp.v1
  %2 = load i64, i64* %tmp.v1
  %3 = call i8* @"().281"(%String* %res, i64 %2)
  %4 = load %File*, %File** %this.addr
  %5 = getelementptr inbounds %File, %File* %4, i32 0, i32 0
  %6 = load i8*, i8** %5
  %7 = call i8* @fgets(i8* %3, i32 256, i8* %6)
  store i8* %7, i8** %cstr
  br label %if_block

if_block:                                         ; preds = %code
  %8 = load i8*, i8** %cstr
  %9 = call i1 @implOpRefEQ(i8* %8, i8* null)
  br i1 %9, label %if_then, label %if_else

if_then:                                          ; preds = %if_block
  call void @clear(%String* %res)
  br label %if_end

if_else:                                          ; preds = %if_block
  %10 = load i8*, i8** %cstr
  %11 = call i64 @cStringLen(i8* %10)
  call void @resize(%String* %res, i64 %11)
  br label %if_end

if_end:                                           ; preds = %if_else, %if_then
  %12 = load %String*, %String** %_result.addr
  call void @ctor.192(%String* %12, %String* %res)
  call void @dtor.229(%String* %res)
  ret void

dumy_block:                                       ; No predecessors!
  call void @dtor.229(%String* %res)
  ret void
}

declare i8* @fgets(i8*, i32, i8*)

declare i32 @fread(i8*, i32, i32, i8*)

attributes #0 = { alwaysinline }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }
attributes #3 = { alwaysinline nounwind }
attributes #4 = { inlinehint nounwind }
attributes #5 = { noinline nounwind }
attributes #6 = { nounwind readnone speculatable }
