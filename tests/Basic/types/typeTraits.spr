//!! -t "../SparrowImplicitLib.spr" -fno-main

// Test purpose: Ensure we can detect the difference between types

fun typeTest(x: AnyType) if typeOf(x) == Char
    writeLn("Char passed");

fun typeTest(x: AnyType) if typeOf(x) == Int
    writeLn("Int passed");

fun typeTest(x: AnyType) if typeOf(x) == Float
    writeLn("Float passed");

fun typeTest(x: !AnyType) if typeOf(x) == Char
    writeLn("Char passed");

fun typeTest(x: !AnyType) if typeOf(x) == Int
    writeLn("Int passed");

fun typeTest(x: !AnyType) if typeOf(x) == Float
    writeLn("Float passed");

fun typeTest(x: @AnyType) if typeOf(x) == @Char
    writeLn("@Char passed");

fun typeTest(x: @AnyType) if typeOf(x) == @Int
    writeLn("Int@ passed");

fun typeTest(x: @AnyType) if typeOf(x) == @Float
    writeLn("Float@ passed");

fun testRef(x: AnyType) //if 0==typeNumRef(typeOf(x))
    writeLn("non-ref");

fun testRef(x: !AnyType) //if 0==typeNumRef(typeOf(x))
    writeLn("non-ref");

fun testRef(x: @AnyType) //if 0!=typeNumRef(typeOf(x))
    writeLn("ref");

[native("test")] fun test(n: Int)
    let a = 'a'.getChar(0)
    let b = 10
    let c = 3.14
    let ra: @Char = a mutToPtr
    let rb: Int@ = b mutToPtr
    let rc: Float@ = c mutToPtr

    writeLn(sizeOf('a'.getChar(0)))
    writeLn(sizeOf(10))
    writeLn(sizeOf(3.14))

    writeLn(sizeOf(a))
    writeLn(sizeOf(b))
    writeLn(sizeOf(c))

    writeLn(sizeOf(ra))
    writeLn(sizeOf(rb))
    writeLn(sizeOf(rc))

    writeLn("---")

    if 0!=typeNumRef(typeOf('a'.getChar(0)))    ; writeLn("ref") else writeLn("non-ref")
    if 0!=typeNumRef(typeOf(10))                ; writeLn("ref") else writeLn("non-ref")
    if 0!=typeNumRef(typeOf(3.14))              ; writeLn("ref") else writeLn("non-ref")

    if 0!=typeNumRef(typeOf(a))         ; writeLn("ref") else writeLn("non-ref")
    if 0!=typeNumRef(typeOf(b))         ; writeLn("ref") else writeLn("non-ref")
    if 0!=typeNumRef(typeOf(c))         ; writeLn("ref") else writeLn("non-ref")

    if 0!=typeNumRef(typeOf(ra))        ; writeLn("ref") else writeLn("non-ref")
    if 0!=typeNumRef(typeOf(rb))        ; writeLn("ref") else writeLn("non-ref")
    if 0!=typeNumRef(typeOf(rc))        ; writeLn("ref") else writeLn("non-ref")

    writeLn("---")

    testRef('a'.getChar(0))
    testRef(10)
    testRef(3.14)

    testRef(a)
    testRef(b)
    testRef(c)

    testRef(ra)
    testRef(rb)
    testRef(rc)

    writeLn("---")

    typeTest('a'.getChar(0))
    typeTest(10)
    typeTest(3.14)

    typeTest(a)
    typeTest(b)
    typeTest(c)

    typeTest(ra)
    typeTest(rb)
    typeTest(rc)

/*<<<Running()
1
4
8
1
4
8
8
8
8
---
non-ref
non-ref
non-ref
non-ref
non-ref
non-ref
ref
ref
ref
---
non-ref
non-ref
non-ref
non-ref
non-ref
non-ref
ref
ref
ref
---
Char passed
Int passed
Float passed
Char passed
Int passed
Float passed
@Char passed
Int@ passed
Float@ passed
>>>*/