//!!

[rt] fun mallocRt()
    var pi: @Int = malloc(sizeOf(Int)).asRefOf(Int)
    pi = 10
    cout << pi << endl
    free(UntypedPtr(pi))

[ct] fun mallocCt()
    var pi: @Int = malloc(sizeOf(Int)).asRefOf(Int)
    pi = 11
    cout << pi << endl
    free(UntypedPtr(pi))

fun mallocRtCt()
    var pi: @Int = malloc(sizeOf(Int)).asRefOf(Int)
    pi = 12
    cout << pi << endl
    free(UntypedPtr(pi))

fun rtCaller()
    mallocRtCt();

[ct] fun ctCaller()
    mallocRtCt();

fun test1()
    mallocRt()
    mallocCt() // Displays 11 at compile-time

fun test2()
    // Call the same rtct function from two different contexts: one at rt, one at ct
    rtCaller()
    ctCaller() // Display 12 at compile-time

fun sprMain
    let x = 10
    let y = 2
    [ct] let yy = 2

    test1()
    cout << "---" << endl
    test2()

/*<<<Running()
10
---
12
>>>*/
