//!! -O2

import std.ranges
import std.staticArray
import math = math

// TODO: Move this to Math
using PI = 3.141592653589793

[initCtor]
datatype Vec
    x, y, z: Float;

fun len(this: Vec): Float = math.sqrt(this*this)

fun + (this, other: Vec)        = Vec(x+other.x, y+other.y, z+other.z)
fun - (this, other: Vec)        = Vec(x-other.x, y-other.y, z-other.z)
fun * (this, other: Vec)        = x*other.x + y*other.y + z*other.z
fun * (this: Vec, k: Float)     = Vec(x*k, y*k, z*k)
fun / (this: Vec, k: Float)     = Vec(x/k, y/k, z/k)
fun - (this: Vec)               = Vec(-x, -y, -z)

datatype Body
    p, v: Vec
    mass: Float

fun speedSq(this: Body)                        = v*v
fun move(this: !Body, dt: Float)               { p += v*dt; }
fun advance(this: !Body, d: Vec, delta: Float) { v += d*delta; }

fun sqr x = x*x

datatype NBodySystem
    using numBodies = 5
    bodies: StaticArray(Body, numBodies)

fun ctor(this: !NBodySystem)
    using solarMass = 4. * PI * PI
    //using daysPerYear = 365.24;
    using daysPerYear = 1.0

    using sun = bodies(0)
    using jupiter = bodies(1)
    using saturn = bodies(2)
    using uranus = bodies(3)
    using neptune = bodies(4)

    sun.mass = solarMass

    // TODO: fix scanner to be able to read exponents properly
    jupiter.p.x = 4.84143144246472090
    jupiter.p.y = -1.16032004402742839
    jupiter.p.z = -0.103622044471123109
    jupiter.v.x = 0.00166007664274403694 * daysPerYear
    jupiter.v.y = 0.00769901118419740425 * daysPerYear
    jupiter.v.z = -0.00000690460016972063023 * daysPerYear
    jupiter.mass = 0.000954791938424326609 * solarMass

    saturn.p.x = 8.34336671824457987
    saturn.p.y = 4.12479856412430479
    saturn.p.z = -0.403523417114321381
    saturn.v.x = -0.00276742510726862411 * daysPerYear
    saturn.v.y = 0.004.99852801234917238 * daysPerYear
    saturn.v.z = 0.00000230417297573763929 * daysPerYear
    saturn.mass = 0.000285885980666130812 * solarMass

    uranus.p.x = 12.8943695621391310
    uranus.p.y = -15.1111514016986312
    uranus.p.z = -0.223307578892655734
    uranus.v.x = 0.00296460137564761618 * daysPerYear
    uranus.v.y = 0.00237847173959480950 * daysPerYear
    uranus.v.z = -0.0000296589568540237556 * daysPerYear
    uranus.mass = 0.0000436624404335156298 * solarMass

    neptune.p.x = 15.3796971148509165
    neptune.p.y = -25.9193146099879641
    neptune.p.z = 0.179258772950371181
    neptune.v.x = 0.00268067772490389322 * daysPerYear
    neptune.v.y = 0.00162824170038242295 * daysPerYear
    neptune.v.z = -0.0000951592254519715870 * daysPerYear
    neptune.mass = 0.0000515138902046611451 * solarMass

    var p: Vec
    for b = bodies.all
        p += b.v * b.mass;
    sun.v = -p / solarMass;

fun energy(this: !NBodySystem): Float
    var e = 0.0
    for i = 0..numBodies
        e += 0.5 * bodies(i).mass * bodies(i).speedSq

        for j = (i+1)..numBodies
            let distance = (bodies(i).p - bodies(j).p) len
            e -= (bodies(i).mass * bodies(j).mass) / distance

    return e;

fun advance(this: !NBodySystem, dt: Float)
    for i = 0..numBodies
        for j = (i+1)..numBodies
            let pDelta = bodies(i).p - bodies(j).p
            let distance = pDelta len
            let mag = dt / (distance * distance * distance)

            bodies(i).advance(pDelta, -bodies(j).mass*mag)
            bodies(j).advance(pDelta, bodies(i).mass*mag)

    for body = bodies.all
        body.move(dt);

[native("printf")] fun printf(fmt: !Char, x: Float)
[native("printf")] fun printf(fmt: !Char, x,y: Float)
[native("printf")] fun printf(fmt: !Char, x,y,z: Float)
[native("printf")] fun printf(fmt: !Char, x,y,z,xx,yy,zz,a: Float)

fun cstr(s: StringRef): @Char = s.cStr()

fun sprMain
    let n = programArgs(1) asInt

    var jovianSystem: NBodySystem

    printf(cstr("%.9f\n"), jovianSystem.energy)
    for i = 0..n
        jovianSystem.advance(0.01);
    printf(cstr("%.9f\n"), jovianSystem.energy);

/*<<<n bodies run KNOWN-PROBLEM (50000)
-0.169075164
-0.169078071
>>>*/

/*<<<n bodies run KNOWN-PROBLEM (500000)
-0.169075164
-0.169096567
>>>*/

/*<<<n bodies run KNOWN-PROBLEM(5000000)
-0.169075164
-0.169083134
>>>*/
